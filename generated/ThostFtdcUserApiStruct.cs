//由 generator生成的文件，不要手工修改

using System.Runtime.InteropServices;
namespace XP.CTPSharp;
/// <summary>
/// 信息分发
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcDisseminationField
{
    public CThostFtdcDisseminationField() {}
    /// <summary>
    /// 序列系列号
    /// </summary>
    public short SequenceSeries;
    /// <summary>
    /// 序列号
    /// </summary>
    public int SequenceNo;
}
/// <summary>
/// 用户登录请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqUserLoginField
{
    public CThostFtdcReqUserLoginField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UserProductInfo = new byte[11];
    /// <summary>
    /// 用户端产品信息
    /// </summary>
    public string UserProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _InterfaceProductInfo = new byte[11];
    /// <summary>
    /// 接口端产品信息
    /// </summary>
    public string InterfaceProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_InterfaceProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _InterfaceProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ProtocolInfo = new byte[11];
    /// <summary>
    /// 协议信息
    /// </summary>
    public string ProtocolInfo
    {
        get{ return GBKConvert.Instance.GetString(_ProtocolInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _ProtocolInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _OneTimePassword = new byte[41];
    /// <summary>
    /// 动态密码
    /// </summary>
    public string OneTimePassword
    {
        get{ return GBKConvert.Instance.GetString(_OneTimePassword); }
        set{ GBKConvert.Instance.GetBytes(value, _OneTimePassword); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _LoginRemark = new byte[36];
    /// <summary>
    /// 登录备注
    /// </summary>
    public string LoginRemark
    {
        get{ return GBKConvert.Instance.GetString(_LoginRemark); }
        set{ GBKConvert.Instance.GetBytes(value, _LoginRemark); }
    }
    /// <summary>
    /// 终端IP端口
    /// </summary>
    public int ClientIPPort;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _ClientIPAddress = new byte[33];
    /// <summary>
    /// 终端IP地址
    /// </summary>
    public string ClientIPAddress
    {
        get{ return GBKConvert.Instance.GetString(_ClientIPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientIPAddress); }
    }
}
/// <summary>
/// 用户登录应答
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRspUserLoginField
{
    public CThostFtdcRspUserLoginField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _LoginTime = new byte[9];
    /// <summary>
    /// 登录成功时间
    /// </summary>
    public string LoginTime
    {
        get{ return GBKConvert.Instance.GetString(_LoginTime); }
        set{ GBKConvert.Instance.GetBytes(value, _LoginTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _SystemName = new byte[41];
    /// <summary>
    /// 交易系统名称
    /// </summary>
    public string SystemName
    {
        get{ return GBKConvert.Instance.GetString(_SystemName); }
        set{ GBKConvert.Instance.GetBytes(value, _SystemName); }
    }
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _MaxOrderRef = new byte[13];
    /// <summary>
    /// 最大报单引用
    /// </summary>
    public string MaxOrderRef
    {
        get{ return GBKConvert.Instance.GetString(_MaxOrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _MaxOrderRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _SHFETime = new byte[9];
    /// <summary>
    /// 上期所时间
    /// </summary>
    public string SHFETime
    {
        get{ return GBKConvert.Instance.GetString(_SHFETime); }
        set{ GBKConvert.Instance.GetBytes(value, _SHFETime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _DCETime = new byte[9];
    /// <summary>
    /// 大商所时间
    /// </summary>
    public string DCETime
    {
        get{ return GBKConvert.Instance.GetString(_DCETime); }
        set{ GBKConvert.Instance.GetBytes(value, _DCETime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CZCETime = new byte[9];
    /// <summary>
    /// 郑商所时间
    /// </summary>
    public string CZCETime
    {
        get{ return GBKConvert.Instance.GetString(_CZCETime); }
        set{ GBKConvert.Instance.GetBytes(value, _CZCETime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _FFEXTime = new byte[9];
    /// <summary>
    /// 中金所时间
    /// </summary>
    public string FFEXTime
    {
        get{ return GBKConvert.Instance.GetString(_FFEXTime); }
        set{ GBKConvert.Instance.GetBytes(value, _FFEXTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _INETime = new byte[9];
    /// <summary>
    /// 能源中心时间
    /// </summary>
    public string INETime
    {
        get{ return GBKConvert.Instance.GetString(_INETime); }
        set{ GBKConvert.Instance.GetBytes(value, _INETime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _SysVersion = new byte[41];
    /// <summary>
    /// 后台版本信息
    /// </summary>
    public string SysVersion
    {
        get{ return GBKConvert.Instance.GetString(_SysVersion); }
        set{ GBKConvert.Instance.GetBytes(value, _SysVersion); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _GFEXTime = new byte[9];
    /// <summary>
    /// 广期所时间
    /// </summary>
    public string GFEXTime
    {
        get{ return GBKConvert.Instance.GetString(_GFEXTime); }
        set{ GBKConvert.Instance.GetBytes(value, _GFEXTime); }
    }
}
/// <summary>
/// 用户登出请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcUserLogoutField
{
    public CThostFtdcUserLogoutField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
}
/// <summary>
/// 强制交易员退出
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcForceUserLogoutField
{
    public CThostFtdcForceUserLogoutField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
}
/// <summary>
/// 客户端认证请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqAuthenticateField
{
    public CThostFtdcReqAuthenticateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UserProductInfo = new byte[11];
    /// <summary>
    /// 用户端产品信息
    /// </summary>
    public string UserProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _AuthCode = new byte[17];
    /// <summary>
    /// 认证码
    /// </summary>
    public string AuthCode
    {
        get{ return GBKConvert.Instance.GetString(_AuthCode); }
        set{ GBKConvert.Instance.GetBytes(value, _AuthCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _AppID = new byte[33];
    /// <summary>
    /// App代码
    /// </summary>
    public string AppID
    {
        get{ return GBKConvert.Instance.GetString(_AppID); }
        set{ GBKConvert.Instance.GetBytes(value, _AppID); }
    }
}
/// <summary>
/// 客户端认证响应
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRspAuthenticateField
{
    public CThostFtdcRspAuthenticateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UserProductInfo = new byte[11];
    /// <summary>
    /// 用户端产品信息
    /// </summary>
    public string UserProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _AppID = new byte[33];
    /// <summary>
    /// App代码
    /// </summary>
    public string AppID
    {
        get{ return GBKConvert.Instance.GetString(_AppID); }
        set{ GBKConvert.Instance.GetBytes(value, _AppID); }
    }
    public TThostFtdcAppTypeType AppType;
}
/// <summary>
/// 客户端认证信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcAuthenticationInfoField
{
    public CThostFtdcAuthenticationInfoField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UserProductInfo = new byte[11];
    /// <summary>
    /// 用户端产品信息
    /// </summary>
    public string UserProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _AuthInfo = new byte[129];
    /// <summary>
    /// 认证信息
    /// </summary>
    public string AuthInfo
    {
        get{ return GBKConvert.Instance.GetString(_AuthInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _AuthInfo); }
    }
    /// <summary>
    /// 是否为认证结果
    /// </summary>
    public int IsResult;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _AppID = new byte[33];
    /// <summary>
    /// App代码
    /// </summary>
    public string AppID
    {
        get{ return GBKConvert.Instance.GetString(_AppID); }
        set{ GBKConvert.Instance.GetBytes(value, _AppID); }
    }
    public TThostFtdcAppTypeType AppType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _ClientIPAddress = new byte[33];
    /// <summary>
    /// 终端IP地址
    /// </summary>
    public string ClientIPAddress
    {
        get{ return GBKConvert.Instance.GetString(_ClientIPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientIPAddress); }
    }
}
/// <summary>
/// 用户登录应答2
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRspUserLogin2Field
{
    public CThostFtdcRspUserLogin2Field() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _LoginTime = new byte[9];
    /// <summary>
    /// 登录成功时间
    /// </summary>
    public string LoginTime
    {
        get{ return GBKConvert.Instance.GetString(_LoginTime); }
        set{ GBKConvert.Instance.GetBytes(value, _LoginTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _SystemName = new byte[41];
    /// <summary>
    /// 交易系统名称
    /// </summary>
    public string SystemName
    {
        get{ return GBKConvert.Instance.GetString(_SystemName); }
        set{ GBKConvert.Instance.GetBytes(value, _SystemName); }
    }
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _MaxOrderRef = new byte[13];
    /// <summary>
    /// 最大报单引用
    /// </summary>
    public string MaxOrderRef
    {
        get{ return GBKConvert.Instance.GetString(_MaxOrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _MaxOrderRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _SHFETime = new byte[9];
    /// <summary>
    /// 上期所时间
    /// </summary>
    public string SHFETime
    {
        get{ return GBKConvert.Instance.GetString(_SHFETime); }
        set{ GBKConvert.Instance.GetBytes(value, _SHFETime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _DCETime = new byte[9];
    /// <summary>
    /// 大商所时间
    /// </summary>
    public string DCETime
    {
        get{ return GBKConvert.Instance.GetString(_DCETime); }
        set{ GBKConvert.Instance.GetBytes(value, _DCETime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CZCETime = new byte[9];
    /// <summary>
    /// 郑商所时间
    /// </summary>
    public string CZCETime
    {
        get{ return GBKConvert.Instance.GetString(_CZCETime); }
        set{ GBKConvert.Instance.GetBytes(value, _CZCETime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _FFEXTime = new byte[9];
    /// <summary>
    /// 中金所时间
    /// </summary>
    public string FFEXTime
    {
        get{ return GBKConvert.Instance.GetString(_FFEXTime); }
        set{ GBKConvert.Instance.GetBytes(value, _FFEXTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _INETime = new byte[9];
    /// <summary>
    /// 能源中心时间
    /// </summary>
    public string INETime
    {
        get{ return GBKConvert.Instance.GetString(_INETime); }
        set{ GBKConvert.Instance.GetBytes(value, _INETime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _RandomString = new byte[17];
    /// <summary>
    /// 随机串
    /// </summary>
    public string RandomString
    {
        get{ return GBKConvert.Instance.GetString(_RandomString); }
        set{ GBKConvert.Instance.GetBytes(value, _RandomString); }
    }
}
/// <summary>
/// 银期转帐报文头
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTransferHeaderField
{
    public CThostFtdcTransferHeaderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _Version = new byte[4];
    /// <summary>
    /// 版本号，常量，1.0
    /// </summary>
    public string Version
    {
        get{ return GBKConvert.Instance.GetString(_Version); }
        set{ GBKConvert.Instance.GetBytes(value, _Version); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 交易代码，必填
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期，必填，格式：yyyymmdd
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间，必填，格式：hhmmss
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeSerial = new byte[9];
    /// <summary>
    /// 发起方流水号，N/A
    /// </summary>
    public string TradeSerial
    {
        get{ return GBKConvert.Instance.GetString(_TradeSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _FutureID = new byte[11];
    /// <summary>
    /// 期货公司代码，必填
    /// </summary>
    public string FutureID
    {
        get{ return GBKConvert.Instance.GetString(_FutureID); }
        set{ GBKConvert.Instance.GetBytes(value, _FutureID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码，根据查询银行得到，必填
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBrchID = new byte[5];
    /// <summary>
    /// 银行分中心代码，根据查询银行得到，必填
    /// </summary>
    public string BankBrchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBrchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBrchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 操作员，N/A
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 交易设备类型，N/A
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _RecordNum = new byte[7];
    /// <summary>
    /// 记录数，N/A
    /// </summary>
    public string RecordNum
    {
        get{ return GBKConvert.Instance.GetString(_RecordNum); }
        set{ GBKConvert.Instance.GetBytes(value, _RecordNum); }
    }
    /// <summary>
    /// 会话编号，N/A
    /// </summary>
    public int SessionID;
    /// <summary>
    /// 请求编号，N/A
    /// </summary>
    public int RequestID;
}
/// <summary>
/// 银行资金转期货请求，TradeCode=202001
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTransferBankToFutureReqField
{
    public CThostFtdcTransferBankToFutureReqField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _FutureAccount = new byte[13];
    /// <summary>
    /// 期货资金账户
    /// </summary>
    public string FutureAccount
    {
        get{ return GBKConvert.Instance.GetString(_FutureAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _FutureAccount); }
    }
    public TThostFtdcFuturePwdFlagType FuturePwdFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _FutureAccPwd = new byte[17];
    /// <summary>
    /// 密码
    /// </summary>
    public string FutureAccPwd
    {
        get{ return GBKConvert.Instance.GetString(_FutureAccPwd); }
        set{ GBKConvert.Instance.GetBytes(value, _FutureAccPwd); }
    }
    /// <summary>
    /// 转账金额
    /// </summary>
    public double TradeAmt;
    /// <summary>
    /// 客户手续费
    /// </summary>
    public double CustFee;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyCode = new byte[4];
    /// <summary>
    /// 币种：RMB-人民币 USD-美圆 HKD-港元
    /// </summary>
    public string CurrencyCode
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyCode); }
    }
}
/// <summary>
/// 银行资金转期货请求响应
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTransferBankToFutureRspField
{
    public CThostFtdcTransferBankToFutureRspField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _RetCode = new byte[5];
    /// <summary>
    /// 响应代码
    /// </summary>
    public string RetCode
    {
        get{ return GBKConvert.Instance.GetString(_RetCode); }
        set{ GBKConvert.Instance.GetBytes(value, _RetCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _RetInfo = new byte[129];
    /// <summary>
    /// 响应信息
    /// </summary>
    public string RetInfo
    {
        get{ return GBKConvert.Instance.GetString(_RetInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _RetInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _FutureAccount = new byte[13];
    /// <summary>
    /// 资金账户
    /// </summary>
    public string FutureAccount
    {
        get{ return GBKConvert.Instance.GetString(_FutureAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _FutureAccount); }
    }
    /// <summary>
    /// 转帐金额
    /// </summary>
    public double TradeAmt;
    /// <summary>
    /// 应收客户手续费
    /// </summary>
    public double CustFee;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyCode = new byte[4];
    /// <summary>
    /// 币种
    /// </summary>
    public string CurrencyCode
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyCode); }
    }
}
/// <summary>
/// 期货资金转银行请求，TradeCode=202002
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTransferFutureToBankReqField
{
    public CThostFtdcTransferFutureToBankReqField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _FutureAccount = new byte[13];
    /// <summary>
    /// 期货资金账户
    /// </summary>
    public string FutureAccount
    {
        get{ return GBKConvert.Instance.GetString(_FutureAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _FutureAccount); }
    }
    public TThostFtdcFuturePwdFlagType FuturePwdFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _FutureAccPwd = new byte[17];
    /// <summary>
    /// 密码
    /// </summary>
    public string FutureAccPwd
    {
        get{ return GBKConvert.Instance.GetString(_FutureAccPwd); }
        set{ GBKConvert.Instance.GetBytes(value, _FutureAccPwd); }
    }
    /// <summary>
    /// 转账金额
    /// </summary>
    public double TradeAmt;
    /// <summary>
    /// 客户手续费
    /// </summary>
    public double CustFee;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyCode = new byte[4];
    /// <summary>
    /// 币种：RMB-人民币 USD-美圆 HKD-港元
    /// </summary>
    public string CurrencyCode
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyCode); }
    }
}
/// <summary>
/// 期货资金转银行请求响应
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTransferFutureToBankRspField
{
    public CThostFtdcTransferFutureToBankRspField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _RetCode = new byte[5];
    /// <summary>
    /// 响应代码
    /// </summary>
    public string RetCode
    {
        get{ return GBKConvert.Instance.GetString(_RetCode); }
        set{ GBKConvert.Instance.GetBytes(value, _RetCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _RetInfo = new byte[129];
    /// <summary>
    /// 响应信息
    /// </summary>
    public string RetInfo
    {
        get{ return GBKConvert.Instance.GetString(_RetInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _RetInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _FutureAccount = new byte[13];
    /// <summary>
    /// 资金账户
    /// </summary>
    public string FutureAccount
    {
        get{ return GBKConvert.Instance.GetString(_FutureAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _FutureAccount); }
    }
    /// <summary>
    /// 转帐金额
    /// </summary>
    public double TradeAmt;
    /// <summary>
    /// 应收客户手续费
    /// </summary>
    public double CustFee;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyCode = new byte[4];
    /// <summary>
    /// 币种
    /// </summary>
    public string CurrencyCode
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyCode); }
    }
}
/// <summary>
/// 查询银行资金请求，TradeCode=204002
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTransferQryBankReqField
{
    public CThostFtdcTransferQryBankReqField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _FutureAccount = new byte[13];
    /// <summary>
    /// 期货资金账户
    /// </summary>
    public string FutureAccount
    {
        get{ return GBKConvert.Instance.GetString(_FutureAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _FutureAccount); }
    }
    public TThostFtdcFuturePwdFlagType FuturePwdFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _FutureAccPwd = new byte[17];
    /// <summary>
    /// 密码
    /// </summary>
    public string FutureAccPwd
    {
        get{ return GBKConvert.Instance.GetString(_FutureAccPwd); }
        set{ GBKConvert.Instance.GetBytes(value, _FutureAccPwd); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyCode = new byte[4];
    /// <summary>
    /// 币种：RMB-人民币 USD-美圆 HKD-港元
    /// </summary>
    public string CurrencyCode
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyCode); }
    }
}
/// <summary>
/// 查询银行资金请求响应
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTransferQryBankRspField
{
    public CThostFtdcTransferQryBankRspField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _RetCode = new byte[5];
    /// <summary>
    /// 响应代码
    /// </summary>
    public string RetCode
    {
        get{ return GBKConvert.Instance.GetString(_RetCode); }
        set{ GBKConvert.Instance.GetBytes(value, _RetCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _RetInfo = new byte[129];
    /// <summary>
    /// 响应信息
    /// </summary>
    public string RetInfo
    {
        get{ return GBKConvert.Instance.GetString(_RetInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _RetInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _FutureAccount = new byte[13];
    /// <summary>
    /// 资金账户
    /// </summary>
    public string FutureAccount
    {
        get{ return GBKConvert.Instance.GetString(_FutureAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _FutureAccount); }
    }
    /// <summary>
    /// 银行余额
    /// </summary>
    public double TradeAmt;
    /// <summary>
    /// 银行可用余额
    /// </summary>
    public double UseAmt;
    /// <summary>
    /// 银行可取余额
    /// </summary>
    public double FetchAmt;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyCode = new byte[4];
    /// <summary>
    /// 币种
    /// </summary>
    public string CurrencyCode
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyCode); }
    }
}
/// <summary>
/// 查询银行交易明细请求，TradeCode=204999
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTransferQryDetailReqField
{
    public CThostFtdcTransferQryDetailReqField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _FutureAccount = new byte[13];
    /// <summary>
    /// 期货资金账户
    /// </summary>
    public string FutureAccount
    {
        get{ return GBKConvert.Instance.GetString(_FutureAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _FutureAccount); }
    }
}
/// <summary>
/// 查询银行交易明细请求响应
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTransferQryDetailRspField
{
    public CThostFtdcTransferQryDetailRspField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 交易代码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    /// <summary>
    /// 期货流水号
    /// </summary>
    public int FutureSerial;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _FutureID = new byte[11];
    /// <summary>
    /// 期货公司代码
    /// </summary>
    public string FutureID
    {
        get{ return GBKConvert.Instance.GetString(_FutureID); }
        set{ GBKConvert.Instance.GetBytes(value, _FutureID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=22)]
    public readonly byte[] _FutureAccount = new byte[22];
    /// <summary>
    /// 资金帐号
    /// </summary>
    public string FutureAccount
    {
        get{ return GBKConvert.Instance.GetString(_FutureAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _FutureAccount); }
    }
    /// <summary>
    /// 银行流水号
    /// </summary>
    public int BankSerial;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBrchID = new byte[5];
    /// <summary>
    /// 银行分中心代码
    /// </summary>
    public string BankBrchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBrchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBrchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行账号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _CertCode = new byte[21];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string CertCode
    {
        get{ return GBKConvert.Instance.GetString(_CertCode); }
        set{ GBKConvert.Instance.GetBytes(value, _CertCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyCode = new byte[4];
    /// <summary>
    /// 货币代码
    /// </summary>
    public string CurrencyCode
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyCode); }
    }
    /// <summary>
    /// 发生金额
    /// </summary>
    public double TxAmount;
    public TThostFtdcTransferValidFlagType Flag;
}
/// <summary>
/// 响应信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRspInfoField
{
    public CThostFtdcRspInfoField() {}
    public bool NoError => ErrorID == 0;
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
}
/// <summary>
/// 交易所
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeField
{
    public CThostFtdcExchangeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=61)]
    public readonly byte[] _ExchangeName = new byte[61];
    /// <summary>
    /// 交易所名称
    /// </summary>
    public string ExchangeName
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeName); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeName); }
    }
    public TThostFtdcExchangePropertyType ExchangeProperty;
}
/// <summary>
/// 产品
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcProductField
{
    public CThostFtdcProductField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ProductName = new byte[21];
    /// <summary>
    /// 产品名称
    /// </summary>
    public string ProductName
    {
        get{ return GBKConvert.Instance.GetString(_ProductName); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductName); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    public TThostFtdcProductClassType ProductClass;
    /// <summary>
    /// 合约数量乘数
    /// </summary>
    public int VolumeMultiple;
    /// <summary>
    /// 最小变动价位
    /// </summary>
    public double PriceTick;
    /// <summary>
    /// 市价单最大下单量
    /// </summary>
    public int MaxMarketOrderVolume;
    /// <summary>
    /// 市价单最小下单量
    /// </summary>
    public int MinMarketOrderVolume;
    /// <summary>
    /// 限价单最大下单量
    /// </summary>
    public int MaxLimitOrderVolume;
    /// <summary>
    /// 限价单最小下单量
    /// </summary>
    public int MinLimitOrderVolume;
    public TThostFtdcPositionTypeType PositionType;
    public TThostFtdcPositionDateTypeType PositionDateType;
    public TThostFtdcCloseDealTypeType CloseDealType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _TradeCurrencyID = new byte[4];
    /// <summary>
    /// 交易币种类型
    /// </summary>
    public string TradeCurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_TradeCurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCurrencyID); }
    }
    public TThostFtdcMortgageFundUseRangeType MortgageFundUseRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    /// <summary>
    /// 合约基础商品乘数
    /// </summary>
    public double UnderlyingMultiple;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductID = new byte[81];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeProductID = new byte[81];
    /// <summary>
    /// 交易所产品代码
    /// </summary>
    public string ExchangeProductID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeProductID); }
    }
    public TThostFtdcOpenLimitControlLevelType OpenLimitControlLevel;
    public TThostFtdcOrderFreqControlLevelType OrderFreqControlLevel;
}
/// <summary>
/// 合约
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInstrumentField
{
    public CThostFtdcInstrumentField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _InstrumentName = new byte[21];
    /// <summary>
    /// 合约名称
    /// </summary>
    public string InstrumentName
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentName); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentName); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve3 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve3
    {
        get{ return GBKConvert.Instance.GetString(_reserve3); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve3); }
    }
    public TThostFtdcProductClassType ProductClass;
    /// <summary>
    /// 交割年份
    /// </summary>
    public int DeliveryYear;
    /// <summary>
    /// 交割月
    /// </summary>
    public int DeliveryMonth;
    /// <summary>
    /// 市价单最大下单量
    /// </summary>
    public int MaxMarketOrderVolume;
    /// <summary>
    /// 市价单最小下单量
    /// </summary>
    public int MinMarketOrderVolume;
    /// <summary>
    /// 限价单最大下单量
    /// </summary>
    public int MaxLimitOrderVolume;
    /// <summary>
    /// 限价单最小下单量
    /// </summary>
    public int MinLimitOrderVolume;
    /// <summary>
    /// 合约数量乘数
    /// </summary>
    public int VolumeMultiple;
    /// <summary>
    /// 最小变动价位
    /// </summary>
    public double PriceTick;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CreateDate = new byte[9];
    /// <summary>
    /// 创建日
    /// </summary>
    public string CreateDate
    {
        get{ return GBKConvert.Instance.GetString(_CreateDate); }
        set{ GBKConvert.Instance.GetBytes(value, _CreateDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _OpenDate = new byte[9];
    /// <summary>
    /// 上市日
    /// </summary>
    public string OpenDate
    {
        get{ return GBKConvert.Instance.GetString(_OpenDate); }
        set{ GBKConvert.Instance.GetBytes(value, _OpenDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExpireDate = new byte[9];
    /// <summary>
    /// 到期日
    /// </summary>
    public string ExpireDate
    {
        get{ return GBKConvert.Instance.GetString(_ExpireDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ExpireDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _StartDelivDate = new byte[9];
    /// <summary>
    /// 开始交割日
    /// </summary>
    public string StartDelivDate
    {
        get{ return GBKConvert.Instance.GetString(_StartDelivDate); }
        set{ GBKConvert.Instance.GetBytes(value, _StartDelivDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _EndDelivDate = new byte[9];
    /// <summary>
    /// 结束交割日
    /// </summary>
    public string EndDelivDate
    {
        get{ return GBKConvert.Instance.GetString(_EndDelivDate); }
        set{ GBKConvert.Instance.GetBytes(value, _EndDelivDate); }
    }
    public TThostFtdcInstLifePhaseType InstLifePhase;
    /// <summary>
    /// 当前是否交易
    /// </summary>
    public int IsTrading;
    public TThostFtdcPositionTypeType PositionType;
    public TThostFtdcPositionDateTypeType PositionDateType;
    /// <summary>
    /// 多头保证金率
    /// </summary>
    public double LongMarginRatio;
    /// <summary>
    /// 空头保证金率
    /// </summary>
    public double ShortMarginRatio;
    public TThostFtdcMaxMarginSideAlgorithmType MaxMarginSideAlgorithm;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve4 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve4
    {
        get{ return GBKConvert.Instance.GetString(_reserve4); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve4); }
    }
    /// <summary>
    /// 执行价
    /// </summary>
    public double StrikePrice;
    public TThostFtdcOptionsTypeType OptionsType;
    /// <summary>
    /// 合约基础商品乘数
    /// </summary>
    public double UnderlyingMultiple;
    public TThostFtdcCombinationTypeType CombinationType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductID = new byte[81];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _UnderlyingInstrID = new byte[81];
    /// <summary>
    /// 基础商品代码
    /// </summary>
    public string UnderlyingInstrID
    {
        get{ return GBKConvert.Instance.GetString(_UnderlyingInstrID); }
        set{ GBKConvert.Instance.GetBytes(value, _UnderlyingInstrID); }
    }
}
/// <summary>
/// 经纪公司
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcBrokerField
{
    public CThostFtdcBrokerField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BrokerAbbr = new byte[9];
    /// <summary>
    /// 经纪公司简称
    /// </summary>
    public string BrokerAbbr
    {
        get{ return GBKConvert.Instance.GetString(_BrokerAbbr); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerAbbr); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _BrokerName = new byte[81];
    /// <summary>
    /// 经纪公司名称
    /// </summary>
    public string BrokerName
    {
        get{ return GBKConvert.Instance.GetString(_BrokerName); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerName); }
    }
    /// <summary>
    /// 是否活跃
    /// </summary>
    public int IsActive;
}
/// <summary>
/// 交易所交易员
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTraderField
{
    public CThostFtdcTraderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    /// <summary>
    /// 安装数量
    /// </summary>
    public int InstallCount;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    public TThostFtdcOrderCancelAlgType OrderCancelAlg;
    /// <summary>
    /// 交易报盘安装数量
    /// </summary>
    public int TradeInstallCount;
    /// <summary>
    /// 行情报盘安装数量
    /// </summary>
    public int MDInstallCount;
}
/// <summary>
/// 投资者
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestorField
{
    public CThostFtdcInvestorField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorGroupID = new byte[13];
    /// <summary>
    /// 投资者分组代码
    /// </summary>
    public string InvestorGroupID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorGroupID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InvestorName = new byte[81];
    /// <summary>
    /// 投资者名称
    /// </summary>
    public string InvestorName
    {
        get{ return GBKConvert.Instance.GetString(_InvestorName); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorName); }
    }
    public TThostFtdcIdCardTypeType IdentifiedCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    /// <summary>
    /// 是否活跃
    /// </summary>
    public int IsActive;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Telephone = new byte[41];
    /// <summary>
    /// 联系电话
    /// </summary>
    public string Telephone
    {
        get{ return GBKConvert.Instance.GetString(_Telephone); }
        set{ GBKConvert.Instance.GetBytes(value, _Telephone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=101)]
    public readonly byte[] _Address = new byte[101];
    /// <summary>
    /// 通讯地址
    /// </summary>
    public string Address
    {
        get{ return GBKConvert.Instance.GetString(_Address); }
        set{ GBKConvert.Instance.GetBytes(value, _Address); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _OpenDate = new byte[9];
    /// <summary>
    /// 开户日期
    /// </summary>
    public string OpenDate
    {
        get{ return GBKConvert.Instance.GetString(_OpenDate); }
        set{ GBKConvert.Instance.GetBytes(value, _OpenDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Mobile = new byte[41];
    /// <summary>
    /// 手机
    /// </summary>
    public string Mobile
    {
        get{ return GBKConvert.Instance.GetString(_Mobile); }
        set{ GBKConvert.Instance.GetBytes(value, _Mobile); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _CommModelID = new byte[13];
    /// <summary>
    /// 手续费率模板代码
    /// </summary>
    public string CommModelID
    {
        get{ return GBKConvert.Instance.GetString(_CommModelID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommModelID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _MarginModelID = new byte[13];
    /// <summary>
    /// 保证金率模板代码
    /// </summary>
    public string MarginModelID
    {
        get{ return GBKConvert.Instance.GetString(_MarginModelID); }
        set{ GBKConvert.Instance.GetBytes(value, _MarginModelID); }
    }
    public TThostFtdcEnumBoolType IsOrderFreq;
    public TThostFtdcEnumBoolType IsOpenVolLimit;
}
/// <summary>
/// 交易编码
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTradingCodeField
{
    public CThostFtdcTradingCodeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    /// <summary>
    /// 是否活跃
    /// </summary>
    public int IsActive;
    public TThostFtdcClientIDTypeType ClientIDType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    public TThostFtdcBizTypeType BizType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
}
/// <summary>
/// 会员编码和经纪公司编码对照表
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcPartBrokerField
{
    public CThostFtdcPartBrokerField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    /// <summary>
    /// 是否活跃
    /// </summary>
    public int IsActive;
}
/// <summary>
/// 管理用户
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSuperUserField
{
    public CThostFtdcSuperUserField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _UserName = new byte[81];
    /// <summary>
    /// 用户名称
    /// </summary>
    public string UserName
    {
        get{ return GBKConvert.Instance.GetString(_UserName); }
        set{ GBKConvert.Instance.GetBytes(value, _UserName); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    /// <summary>
    /// 是否活跃
    /// </summary>
    public int IsActive;
}
/// <summary>
/// 管理用户功能权限
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSuperUserFunctionField
{
    public CThostFtdcSuperUserFunctionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcFunctionCodeType FunctionCode;
}
/// <summary>
/// 投资者组
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestorGroupField
{
    public CThostFtdcInvestorGroupField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorGroupID = new byte[13];
    /// <summary>
    /// 投资者分组代码
    /// </summary>
    public string InvestorGroupID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorGroupID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _InvestorGroupName = new byte[41];
    /// <summary>
    /// 投资者分组名称
    /// </summary>
    public string InvestorGroupName
    {
        get{ return GBKConvert.Instance.GetString(_InvestorGroupName); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorGroupName); }
    }
}
/// <summary>
/// 资金账户
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTradingAccountField
{
    public CThostFtdcTradingAccountField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    /// <summary>
    /// 上次质押金额
    /// </summary>
    public double PreMortgage;
    /// <summary>
    /// 上次信用额度
    /// </summary>
    public double PreCredit;
    /// <summary>
    /// 上次存款额
    /// </summary>
    public double PreDeposit;
    /// <summary>
    /// 上次结算准备金
    /// </summary>
    public double PreBalance;
    /// <summary>
    /// 上次占用的保证金
    /// </summary>
    public double PreMargin;
    /// <summary>
    /// 利息基数
    /// </summary>
    public double InterestBase;
    /// <summary>
    /// 利息收入
    /// </summary>
    public double Interest;
    /// <summary>
    /// 入金金额
    /// </summary>
    public double Deposit;
    /// <summary>
    /// 出金金额
    /// </summary>
    public double Withdraw;
    /// <summary>
    /// 冻结的保证金
    /// </summary>
    public double FrozenMargin;
    /// <summary>
    /// 冻结的资金
    /// </summary>
    public double FrozenCash;
    /// <summary>
    /// 冻结的手续费
    /// </summary>
    public double FrozenCommission;
    /// <summary>
    /// 当前保证金总额
    /// </summary>
    public double CurrMargin;
    /// <summary>
    /// 资金差额
    /// </summary>
    public double CashIn;
    /// <summary>
    /// 手续费
    /// </summary>
    public double Commission;
    /// <summary>
    /// 平仓盈亏
    /// </summary>
    public double CloseProfit;
    /// <summary>
    /// 持仓盈亏
    /// </summary>
    public double PositionProfit;
    /// <summary>
    /// 期货结算准备金
    /// </summary>
    public double Balance;
    /// <summary>
    /// 可用资金
    /// </summary>
    public double Available;
    /// <summary>
    /// 可取资金
    /// </summary>
    public double WithdrawQuota;
    /// <summary>
    /// 基本准备金
    /// </summary>
    public double Reserve;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    /// <summary>
    /// 信用额度
    /// </summary>
    public double Credit;
    /// <summary>
    /// 质押金额
    /// </summary>
    public double Mortgage;
    /// <summary>
    /// 交易所保证金
    /// </summary>
    public double ExchangeMargin;
    /// <summary>
    /// 投资者交割保证金
    /// </summary>
    public double DeliveryMargin;
    /// <summary>
    /// 交易所交割保证金
    /// </summary>
    public double ExchangeDeliveryMargin;
    /// <summary>
    /// 保底期货结算准备金
    /// </summary>
    public double ReserveBalance;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    /// <summary>
    /// 上次货币质入金额
    /// </summary>
    public double PreFundMortgageIn;
    /// <summary>
    /// 上次货币质出金额
    /// </summary>
    public double PreFundMortgageOut;
    /// <summary>
    /// 货币质入金额
    /// </summary>
    public double FundMortgageIn;
    /// <summary>
    /// 货币质出金额
    /// </summary>
    public double FundMortgageOut;
    /// <summary>
    /// 货币质押余额
    /// </summary>
    public double FundMortgageAvailable;
    /// <summary>
    /// 可质押货币金额
    /// </summary>
    public double MortgageableFund;
    /// <summary>
    /// 特殊产品占用保证金
    /// </summary>
    public double SpecProductMargin;
    /// <summary>
    /// 特殊产品冻结保证金
    /// </summary>
    public double SpecProductFrozenMargin;
    /// <summary>
    /// 特殊产品手续费
    /// </summary>
    public double SpecProductCommission;
    /// <summary>
    /// 特殊产品冻结手续费
    /// </summary>
    public double SpecProductFrozenCommission;
    /// <summary>
    /// 特殊产品持仓盈亏
    /// </summary>
    public double SpecProductPositionProfit;
    /// <summary>
    /// 特殊产品平仓盈亏
    /// </summary>
    public double SpecProductCloseProfit;
    /// <summary>
    /// 根据持仓盈亏算法计算的特殊产品持仓盈亏
    /// </summary>
    public double SpecProductPositionProfitByAlg;
    /// <summary>
    /// 特殊产品交易所保证金
    /// </summary>
    public double SpecProductExchangeMargin;
    public TThostFtdcBizTypeType BizType;
    /// <summary>
    /// 延时换汇冻结金额
    /// </summary>
    public double FrozenSwap;
    /// <summary>
    /// 剩余换汇额度
    /// </summary>
    public double RemainSwap;
}
/// <summary>
/// 投资者持仓
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestorPositionField
{
    public CThostFtdcInvestorPositionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcPosiDirectionType PosiDirection;
    public TThostFtdcHedgeFlagType HedgeFlag;
    public TThostFtdcPositionDateType PositionDate;
    /// <summary>
    /// 上日持仓
    /// </summary>
    public int YdPosition;
    /// <summary>
    /// 今日持仓
    /// </summary>
    public int Position;
    /// <summary>
    /// 多头冻结
    /// </summary>
    public int LongFrozen;
    /// <summary>
    /// 空头冻结
    /// </summary>
    public int ShortFrozen;
    /// <summary>
    /// 开仓冻结金额
    /// </summary>
    public double LongFrozenAmount;
    /// <summary>
    /// 开仓冻结金额
    /// </summary>
    public double ShortFrozenAmount;
    /// <summary>
    /// 开仓量
    /// </summary>
    public int OpenVolume;
    /// <summary>
    /// 平仓量
    /// </summary>
    public int CloseVolume;
    /// <summary>
    /// 开仓金额
    /// </summary>
    public double OpenAmount;
    /// <summary>
    /// 平仓金额
    /// </summary>
    public double CloseAmount;
    /// <summary>
    /// 持仓成本
    /// </summary>
    public double PositionCost;
    /// <summary>
    /// 上次占用的保证金
    /// </summary>
    public double PreMargin;
    /// <summary>
    /// 占用的保证金
    /// </summary>
    public double UseMargin;
    /// <summary>
    /// 冻结的保证金
    /// </summary>
    public double FrozenMargin;
    /// <summary>
    /// 冻结的资金
    /// </summary>
    public double FrozenCash;
    /// <summary>
    /// 冻结的手续费
    /// </summary>
    public double FrozenCommission;
    /// <summary>
    /// 资金差额
    /// </summary>
    public double CashIn;
    /// <summary>
    /// 手续费
    /// </summary>
    public double Commission;
    /// <summary>
    /// 平仓盈亏
    /// </summary>
    public double CloseProfit;
    /// <summary>
    /// 持仓盈亏
    /// </summary>
    public double PositionProfit;
    /// <summary>
    /// 上次结算价
    /// </summary>
    public double PreSettlementPrice;
    /// <summary>
    /// 本次结算价
    /// </summary>
    public double SettlementPrice;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    /// <summary>
    /// 开仓成本
    /// </summary>
    public double OpenCost;
    /// <summary>
    /// 交易所保证金
    /// </summary>
    public double ExchangeMargin;
    /// <summary>
    /// 组合成交形成的持仓
    /// </summary>
    public int CombPosition;
    /// <summary>
    /// 组合多头冻结
    /// </summary>
    public int CombLongFrozen;
    /// <summary>
    /// 组合空头冻结
    /// </summary>
    public int CombShortFrozen;
    /// <summary>
    /// 逐日盯市平仓盈亏
    /// </summary>
    public double CloseProfitByDate;
    /// <summary>
    /// 逐笔对冲平仓盈亏
    /// </summary>
    public double CloseProfitByTrade;
    /// <summary>
    /// 今日持仓
    /// </summary>
    public int TodayPosition;
    /// <summary>
    /// 保证金率
    /// </summary>
    public double MarginRateByMoney;
    /// <summary>
    /// 保证金率(按手数)
    /// </summary>
    public double MarginRateByVolume;
    /// <summary>
    /// 执行冻结
    /// </summary>
    public int StrikeFrozen;
    /// <summary>
    /// 执行冻结金额
    /// </summary>
    public double StrikeFrozenAmount;
    /// <summary>
    /// 放弃执行冻结
    /// </summary>
    public int AbandonFrozen;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 执行冻结的昨仓
    /// </summary>
    public int YdStrikeFrozen;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    /// <summary>
    /// 持仓成本差值
    /// </summary>
    public double PositionCostOffset;
    /// <summary>
    /// tas持仓手数
    /// </summary>
    public int TasPosition;
    /// <summary>
    /// tas持仓成本
    /// </summary>
    public double TasPositionCost;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 合约保证金率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInstrumentMarginRateField
{
    public CThostFtdcInstrumentMarginRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 多头保证金率
    /// </summary>
    public double LongMarginRatioByMoney;
    /// <summary>
    /// 多头保证金费
    /// </summary>
    public double LongMarginRatioByVolume;
    /// <summary>
    /// 空头保证金率
    /// </summary>
    public double ShortMarginRatioByMoney;
    /// <summary>
    /// 空头保证金费
    /// </summary>
    public double ShortMarginRatioByVolume;
    /// <summary>
    /// 是否相对交易所收取
    /// </summary>
    public int IsRelative;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 合约手续费率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInstrumentCommissionRateField
{
    public CThostFtdcInstrumentCommissionRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 开仓手续费率
    /// </summary>
    public double OpenRatioByMoney;
    /// <summary>
    /// 开仓手续费
    /// </summary>
    public double OpenRatioByVolume;
    /// <summary>
    /// 平仓手续费率
    /// </summary>
    public double CloseRatioByMoney;
    /// <summary>
    /// 平仓手续费
    /// </summary>
    public double CloseRatioByVolume;
    /// <summary>
    /// 平今手续费率
    /// </summary>
    public double CloseTodayRatioByMoney;
    /// <summary>
    /// 平今手续费
    /// </summary>
    public double CloseTodayRatioByVolume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    public TThostFtdcBizTypeType BizType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 深度行情
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcDepthMarketDataField
{
    public CThostFtdcDepthMarketDataField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    /// <summary>
    /// 最新价
    /// </summary>
    public double LastPrice;
    /// <summary>
    /// 上次结算价
    /// </summary>
    public double PreSettlementPrice;
    /// <summary>
    /// 昨收盘
    /// </summary>
    public double PreClosePrice;
    /// <summary>
    /// 昨持仓量
    /// </summary>
    public double PreOpenInterest;
    /// <summary>
    /// 今开盘
    /// </summary>
    public double OpenPrice;
    /// <summary>
    /// 最高价
    /// </summary>
    public double HighestPrice;
    /// <summary>
    /// 最低价
    /// </summary>
    public double LowestPrice;
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    /// <summary>
    /// 成交金额
    /// </summary>
    public double Turnover;
    /// <summary>
    /// 持仓量
    /// </summary>
    public double OpenInterest;
    /// <summary>
    /// 今收盘
    /// </summary>
    public double ClosePrice;
    /// <summary>
    /// 本次结算价
    /// </summary>
    public double SettlementPrice;
    /// <summary>
    /// 涨停板价
    /// </summary>
    public double UpperLimitPrice;
    /// <summary>
    /// 跌停板价
    /// </summary>
    public double LowerLimitPrice;
    /// <summary>
    /// 昨虚实度
    /// </summary>
    public double PreDelta;
    /// <summary>
    /// 今虚实度
    /// </summary>
    public double CurrDelta;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _UpdateTime = new byte[9];
    /// <summary>
    /// 最后修改时间
    /// </summary>
    public string UpdateTime
    {
        get{ return GBKConvert.Instance.GetString(_UpdateTime); }
        set{ GBKConvert.Instance.GetBytes(value, _UpdateTime); }
    }
    /// <summary>
    /// 最后修改毫秒
    /// </summary>
    public int UpdateMillisec;
    /// <summary>
    /// 申买价一
    /// </summary>
    public double BidPrice1;
    /// <summary>
    /// 申买量一
    /// </summary>
    public int BidVolume1;
    /// <summary>
    /// 申卖价一
    /// </summary>
    public double AskPrice1;
    /// <summary>
    /// 申卖量一
    /// </summary>
    public int AskVolume1;
    /// <summary>
    /// 申买价二
    /// </summary>
    public double BidPrice2;
    /// <summary>
    /// 申买量二
    /// </summary>
    public int BidVolume2;
    /// <summary>
    /// 申卖价二
    /// </summary>
    public double AskPrice2;
    /// <summary>
    /// 申卖量二
    /// </summary>
    public int AskVolume2;
    /// <summary>
    /// 申买价三
    /// </summary>
    public double BidPrice3;
    /// <summary>
    /// 申买量三
    /// </summary>
    public int BidVolume3;
    /// <summary>
    /// 申卖价三
    /// </summary>
    public double AskPrice3;
    /// <summary>
    /// 申卖量三
    /// </summary>
    public int AskVolume3;
    /// <summary>
    /// 申买价四
    /// </summary>
    public double BidPrice4;
    /// <summary>
    /// 申买量四
    /// </summary>
    public int BidVolume4;
    /// <summary>
    /// 申卖价四
    /// </summary>
    public double AskPrice4;
    /// <summary>
    /// 申卖量四
    /// </summary>
    public int AskVolume4;
    /// <summary>
    /// 申买价五
    /// </summary>
    public double BidPrice5;
    /// <summary>
    /// 申买量五
    /// </summary>
    public int BidVolume5;
    /// <summary>
    /// 申卖价五
    /// </summary>
    public double AskPrice5;
    /// <summary>
    /// 申卖量五
    /// </summary>
    public int AskVolume5;
    /// <summary>
    /// 当日均价
    /// </summary>
    public double AveragePrice;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDay = new byte[9];
    /// <summary>
    /// 业务日期
    /// </summary>
    public string ActionDay
    {
        get{ return GBKConvert.Instance.GetString(_ActionDay); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    /// <summary>
    /// 上带价
    /// </summary>
    public double BandingUpperPrice;
    /// <summary>
    /// 下带价
    /// </summary>
    public double BandingLowerPrice;
}
/// <summary>
/// 投资者合约交易权限
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInstrumentTradingRightField
{
    public CThostFtdcInstrumentTradingRightField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcTradingRightType TradingRight;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 经纪公司用户
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcBrokerUserField
{
    public CThostFtdcBrokerUserField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _UserName = new byte[81];
    /// <summary>
    /// 用户名称
    /// </summary>
    public string UserName
    {
        get{ return GBKConvert.Instance.GetString(_UserName); }
        set{ GBKConvert.Instance.GetBytes(value, _UserName); }
    }
    public TThostFtdcUserTypeType UserType;
    /// <summary>
    /// 是否活跃
    /// </summary>
    public int IsActive;
    /// <summary>
    /// 是否使用令牌
    /// </summary>
    public int IsUsingOTP;
    /// <summary>
    /// 是否强制终端认证
    /// </summary>
    public int IsAuthForce;
}
/// <summary>
/// 经纪公司用户口令
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcBrokerUserPasswordField
{
    public CThostFtdcBrokerUserPasswordField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _LastUpdateTime = new byte[17];
    /// <summary>
    /// 上次修改时间
    /// </summary>
    public string LastUpdateTime
    {
        get{ return GBKConvert.Instance.GetString(_LastUpdateTime); }
        set{ GBKConvert.Instance.GetBytes(value, _LastUpdateTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _LastLoginTime = new byte[17];
    /// <summary>
    /// 上次登陆时间
    /// </summary>
    public string LastLoginTime
    {
        get{ return GBKConvert.Instance.GetString(_LastLoginTime); }
        set{ GBKConvert.Instance.GetBytes(value, _LastLoginTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExpireDate = new byte[9];
    /// <summary>
    /// 密码过期时间
    /// </summary>
    public string ExpireDate
    {
        get{ return GBKConvert.Instance.GetString(_ExpireDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ExpireDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _WeakExpireDate = new byte[9];
    /// <summary>
    /// 弱密码过期时间
    /// </summary>
    public string WeakExpireDate
    {
        get{ return GBKConvert.Instance.GetString(_WeakExpireDate); }
        set{ GBKConvert.Instance.GetBytes(value, _WeakExpireDate); }
    }
}
/// <summary>
/// 经纪公司用户功能权限
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcBrokerUserFunctionField
{
    public CThostFtdcBrokerUserFunctionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcBrokerFunctionCodeType BrokerFunctionCode;
}
/// <summary>
/// 交易所交易员报盘机
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTraderOfferField
{
    public CThostFtdcTraderOfferField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderLocalID = new byte[13];
    /// <summary>
    /// 本地报单编号
    /// </summary>
    public string OrderLocalID
    {
        get{ return GBKConvert.Instance.GetString(_OrderLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderLocalID); }
    }
    public TThostFtdcTraderConnectStatusType TraderConnectStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ConnectRequestDate = new byte[9];
    /// <summary>
    /// 发出连接请求的日期
    /// </summary>
    public string ConnectRequestDate
    {
        get{ return GBKConvert.Instance.GetString(_ConnectRequestDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ConnectRequestDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ConnectRequestTime = new byte[9];
    /// <summary>
    /// 发出连接请求的时间
    /// </summary>
    public string ConnectRequestTime
    {
        get{ return GBKConvert.Instance.GetString(_ConnectRequestTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ConnectRequestTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _LastReportDate = new byte[9];
    /// <summary>
    /// 上次报告日期
    /// </summary>
    public string LastReportDate
    {
        get{ return GBKConvert.Instance.GetString(_LastReportDate); }
        set{ GBKConvert.Instance.GetBytes(value, _LastReportDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _LastReportTime = new byte[9];
    /// <summary>
    /// 上次报告时间
    /// </summary>
    public string LastReportTime
    {
        get{ return GBKConvert.Instance.GetString(_LastReportTime); }
        set{ GBKConvert.Instance.GetBytes(value, _LastReportTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ConnectDate = new byte[9];
    /// <summary>
    /// 完成连接日期
    /// </summary>
    public string ConnectDate
    {
        get{ return GBKConvert.Instance.GetString(_ConnectDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ConnectDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ConnectTime = new byte[9];
    /// <summary>
    /// 完成连接时间
    /// </summary>
    public string ConnectTime
    {
        get{ return GBKConvert.Instance.GetString(_ConnectTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ConnectTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _StartDate = new byte[9];
    /// <summary>
    /// 启动日期
    /// </summary>
    public string StartDate
    {
        get{ return GBKConvert.Instance.GetString(_StartDate); }
        set{ GBKConvert.Instance.GetBytes(value, _StartDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _StartTime = new byte[9];
    /// <summary>
    /// 启动时间
    /// </summary>
    public string StartTime
    {
        get{ return GBKConvert.Instance.GetString(_StartTime); }
        set{ GBKConvert.Instance.GetBytes(value, _StartTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MaxTradeID = new byte[21];
    /// <summary>
    /// 本席位最大成交编号
    /// </summary>
    public string MaxTradeID
    {
        get{ return GBKConvert.Instance.GetString(_MaxTradeID); }
        set{ GBKConvert.Instance.GetBytes(value, _MaxTradeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _MaxOrderMessageReference = new byte[7];
    /// <summary>
    /// 本席位最大报单备拷
    /// </summary>
    public string MaxOrderMessageReference
    {
        get{ return GBKConvert.Instance.GetString(_MaxOrderMessageReference); }
        set{ GBKConvert.Instance.GetBytes(value, _MaxOrderMessageReference); }
    }
    public TThostFtdcOrderCancelAlgType OrderCancelAlg;
}
/// <summary>
/// 投资者结算结果
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSettlementInfoField
{
    public CThostFtdcSettlementInfoField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 序号
    /// </summary>
    public int SequenceNo;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=501)]
    public readonly byte[] _Content = new byte[501];
    /// <summary>
    /// 消息正文
    /// </summary>
    public string Content
    {
        get{ return GBKConvert.Instance.GetString(_Content); }
        set{ GBKConvert.Instance.GetBytes(value, _Content); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
}
/// <summary>
/// 合约保证金率调整
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInstrumentMarginRateAdjustField
{
    public CThostFtdcInstrumentMarginRateAdjustField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 多头保证金率
    /// </summary>
    public double LongMarginRatioByMoney;
    /// <summary>
    /// 多头保证金费
    /// </summary>
    public double LongMarginRatioByVolume;
    /// <summary>
    /// 空头保证金率
    /// </summary>
    public double ShortMarginRatioByMoney;
    /// <summary>
    /// 空头保证金费
    /// </summary>
    public double ShortMarginRatioByVolume;
    /// <summary>
    /// 是否相对交易所收取
    /// </summary>
    public int IsRelative;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 交易所保证金率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeMarginRateField
{
    public CThostFtdcExchangeMarginRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 多头保证金率
    /// </summary>
    public double LongMarginRatioByMoney;
    /// <summary>
    /// 多头保证金费
    /// </summary>
    public double LongMarginRatioByVolume;
    /// <summary>
    /// 空头保证金率
    /// </summary>
    public double ShortMarginRatioByMoney;
    /// <summary>
    /// 空头保证金费
    /// </summary>
    public double ShortMarginRatioByVolume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 交易所保证金率调整
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeMarginRateAdjustField
{
    public CThostFtdcExchangeMarginRateAdjustField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 跟随交易所投资者多头保证金率
    /// </summary>
    public double LongMarginRatioByMoney;
    /// <summary>
    /// 跟随交易所投资者多头保证金费
    /// </summary>
    public double LongMarginRatioByVolume;
    /// <summary>
    /// 跟随交易所投资者空头保证金率
    /// </summary>
    public double ShortMarginRatioByMoney;
    /// <summary>
    /// 跟随交易所投资者空头保证金费
    /// </summary>
    public double ShortMarginRatioByVolume;
    /// <summary>
    /// 交易所多头保证金率
    /// </summary>
    public double ExchLongMarginRatioByMoney;
    /// <summary>
    /// 交易所多头保证金费
    /// </summary>
    public double ExchLongMarginRatioByVolume;
    /// <summary>
    /// 交易所空头保证金率
    /// </summary>
    public double ExchShortMarginRatioByMoney;
    /// <summary>
    /// 交易所空头保证金费
    /// </summary>
    public double ExchShortMarginRatioByVolume;
    /// <summary>
    /// 不跟随交易所投资者多头保证金率
    /// </summary>
    public double NoLongMarginRatioByMoney;
    /// <summary>
    /// 不跟随交易所投资者多头保证金费
    /// </summary>
    public double NoLongMarginRatioByVolume;
    /// <summary>
    /// 不跟随交易所投资者空头保证金率
    /// </summary>
    public double NoShortMarginRatioByMoney;
    /// <summary>
    /// 不跟随交易所投资者空头保证金费
    /// </summary>
    public double NoShortMarginRatioByVolume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 汇率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeRateField
{
    public CThostFtdcExchangeRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _FromCurrencyID = new byte[4];
    /// <summary>
    /// 源币种
    /// </summary>
    public string FromCurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_FromCurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _FromCurrencyID); }
    }
    /// <summary>
    /// 源币种单位数量
    /// </summary>
    public double FromCurrencyUnit;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _ToCurrencyID = new byte[4];
    /// <summary>
    /// 目标币种
    /// </summary>
    public string ToCurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_ToCurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _ToCurrencyID); }
    }
    /// <summary>
    /// 汇率
    /// </summary>
    public double ExchangeRate;
}
/// <summary>
/// 结算引用
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSettlementRefField
{
    public CThostFtdcSettlementRefField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
}
/// <summary>
/// 当前时间
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcCurrentTimeField
{
    public CThostFtdcCurrentTimeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CurrDate = new byte[9];
    /// <summary>
    /// 当前交易日
    /// </summary>
    public string CurrDate
    {
        get{ return GBKConvert.Instance.GetString(_CurrDate); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CurrTime = new byte[9];
    /// <summary>
    /// 当前时间
    /// </summary>
    public string CurrTime
    {
        get{ return GBKConvert.Instance.GetString(_CurrTime); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrTime); }
    }
    /// <summary>
    /// 当前时间（毫秒）
    /// </summary>
    public int CurrMillisec;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDay = new byte[9];
    /// <summary>
    /// 自然日期
    /// </summary>
    public string ActionDay
    {
        get{ return GBKConvert.Instance.GetString(_ActionDay); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDay); }
    }
}
/// <summary>
/// 通讯阶段
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcCommPhaseField
{
    public CThostFtdcCommPhaseField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 通讯时段编号
    /// </summary>
    public short CommPhaseNo;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _SystemID = new byte[21];
    /// <summary>
    /// 系统编号
    /// </summary>
    public string SystemID
    {
        get{ return GBKConvert.Instance.GetString(_SystemID); }
        set{ GBKConvert.Instance.GetBytes(value, _SystemID); }
    }
}
/// <summary>
/// 登录信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcLoginInfoField
{
    public CThostFtdcLoginInfoField() {}
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _LoginDate = new byte[9];
    /// <summary>
    /// 登录日期
    /// </summary>
    public string LoginDate
    {
        get{ return GBKConvert.Instance.GetString(_LoginDate); }
        set{ GBKConvert.Instance.GetBytes(value, _LoginDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _LoginTime = new byte[9];
    /// <summary>
    /// 登录时间
    /// </summary>
    public string LoginTime
    {
        get{ return GBKConvert.Instance.GetString(_LoginTime); }
        set{ GBKConvert.Instance.GetBytes(value, _LoginTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UserProductInfo = new byte[11];
    /// <summary>
    /// 用户端产品信息
    /// </summary>
    public string UserProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _InterfaceProductInfo = new byte[11];
    /// <summary>
    /// 接口端产品信息
    /// </summary>
    public string InterfaceProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_InterfaceProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _InterfaceProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ProtocolInfo = new byte[11];
    /// <summary>
    /// 协议信息
    /// </summary>
    public string ProtocolInfo
    {
        get{ return GBKConvert.Instance.GetString(_ProtocolInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _ProtocolInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _SystemName = new byte[41];
    /// <summary>
    /// 系统名称
    /// </summary>
    public string SystemName
    {
        get{ return GBKConvert.Instance.GetString(_SystemName); }
        set{ GBKConvert.Instance.GetBytes(value, _SystemName); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _PasswordDeprecated = new byte[41];
    /// <summary>
    /// 密码,已弃用
    /// </summary>
    public string PasswordDeprecated
    {
        get{ return GBKConvert.Instance.GetString(_PasswordDeprecated); }
        set{ GBKConvert.Instance.GetBytes(value, _PasswordDeprecated); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _MaxOrderRef = new byte[13];
    /// <summary>
    /// 最大报单引用
    /// </summary>
    public string MaxOrderRef
    {
        get{ return GBKConvert.Instance.GetString(_MaxOrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _MaxOrderRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _SHFETime = new byte[9];
    /// <summary>
    /// 上期所时间
    /// </summary>
    public string SHFETime
    {
        get{ return GBKConvert.Instance.GetString(_SHFETime); }
        set{ GBKConvert.Instance.GetBytes(value, _SHFETime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _DCETime = new byte[9];
    /// <summary>
    /// 大商所时间
    /// </summary>
    public string DCETime
    {
        get{ return GBKConvert.Instance.GetString(_DCETime); }
        set{ GBKConvert.Instance.GetBytes(value, _DCETime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CZCETime = new byte[9];
    /// <summary>
    /// 郑商所时间
    /// </summary>
    public string CZCETime
    {
        get{ return GBKConvert.Instance.GetString(_CZCETime); }
        set{ GBKConvert.Instance.GetBytes(value, _CZCETime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _FFEXTime = new byte[9];
    /// <summary>
    /// 中金所时间
    /// </summary>
    public string FFEXTime
    {
        get{ return GBKConvert.Instance.GetString(_FFEXTime); }
        set{ GBKConvert.Instance.GetBytes(value, _FFEXTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _OneTimePassword = new byte[41];
    /// <summary>
    /// 动态密码
    /// </summary>
    public string OneTimePassword
    {
        get{ return GBKConvert.Instance.GetString(_OneTimePassword); }
        set{ GBKConvert.Instance.GetBytes(value, _OneTimePassword); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _INETime = new byte[9];
    /// <summary>
    /// 能源中心时间
    /// </summary>
    public string INETime
    {
        get{ return GBKConvert.Instance.GetString(_INETime); }
        set{ GBKConvert.Instance.GetBytes(value, _INETime); }
    }
    /// <summary>
    /// 查询时是否需要流控
    /// </summary>
    public int IsQryControl;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _LoginRemark = new byte[36];
    /// <summary>
    /// 登录备注
    /// </summary>
    public string LoginRemark
    {
        get{ return GBKConvert.Instance.GetString(_LoginRemark); }
        set{ GBKConvert.Instance.GetBytes(value, _LoginRemark); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 登录信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcLogoutAllField
{
    public CThostFtdcLogoutAllField() {}
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _SystemName = new byte[41];
    /// <summary>
    /// 系统名称
    /// </summary>
    public string SystemName
    {
        get{ return GBKConvert.Instance.GetString(_SystemName); }
        set{ GBKConvert.Instance.GetBytes(value, _SystemName); }
    }
}
/// <summary>
/// 前置状态
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcFrontStatusField
{
    public CThostFtdcFrontStatusField() {}
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _LastReportDate = new byte[9];
    /// <summary>
    /// 上次报告日期
    /// </summary>
    public string LastReportDate
    {
        get{ return GBKConvert.Instance.GetString(_LastReportDate); }
        set{ GBKConvert.Instance.GetBytes(value, _LastReportDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _LastReportTime = new byte[9];
    /// <summary>
    /// 上次报告时间
    /// </summary>
    public string LastReportTime
    {
        get{ return GBKConvert.Instance.GetString(_LastReportTime); }
        set{ GBKConvert.Instance.GetBytes(value, _LastReportTime); }
    }
    /// <summary>
    /// 是否活跃
    /// </summary>
    public int IsActive;
}
/// <summary>
/// 用户口令变更
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcUserPasswordUpdateField
{
    public CThostFtdcUserPasswordUpdateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _OldPassword = new byte[41];
    /// <summary>
    /// 原来的口令
    /// </summary>
    public string OldPassword
    {
        get{ return GBKConvert.Instance.GetString(_OldPassword); }
        set{ GBKConvert.Instance.GetBytes(value, _OldPassword); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _NewPassword = new byte[41];
    /// <summary>
    /// 新的口令
    /// </summary>
    public string NewPassword
    {
        get{ return GBKConvert.Instance.GetString(_NewPassword); }
        set{ GBKConvert.Instance.GetBytes(value, _NewPassword); }
    }
}
/// <summary>
/// 输入报单
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInputOrderField
{
    public CThostFtdcInputOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderRef = new byte[13];
    /// <summary>
    /// 报单引用
    /// </summary>
    public string OrderRef
    {
        get{ return GBKConvert.Instance.GetString(_OrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcOrderPriceTypeType OrderPriceType;
    public TThostFtdcDirectionType Direction;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _CombOffsetFlag = new byte[5];
    /// <summary>
    /// 组合开平标志
    /// </summary>
    public string CombOffsetFlag
    {
        get{ return GBKConvert.Instance.GetString(_CombOffsetFlag); }
        set{ GBKConvert.Instance.GetBytes(value, _CombOffsetFlag); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _CombHedgeFlag = new byte[5];
    /// <summary>
    /// 组合投机套保标志
    /// </summary>
    public string CombHedgeFlag
    {
        get{ return GBKConvert.Instance.GetString(_CombHedgeFlag); }
        set{ GBKConvert.Instance.GetBytes(value, _CombHedgeFlag); }
    }
    /// <summary>
    /// 价格
    /// </summary>
    public double LimitPrice;
    /// <summary>
    /// 数量
    /// </summary>
    public int VolumeTotalOriginal;
    public TThostFtdcTimeConditionType TimeCondition;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _GTDDate = new byte[9];
    /// <summary>
    /// GTD日期
    /// </summary>
    public string GTDDate
    {
        get{ return GBKConvert.Instance.GetString(_GTDDate); }
        set{ GBKConvert.Instance.GetBytes(value, _GTDDate); }
    }
    public TThostFtdcVolumeConditionType VolumeCondition;
    /// <summary>
    /// 最小成交量
    /// </summary>
    public int MinVolume;
    public TThostFtdcContingentConditionType ContingentCondition;
    /// <summary>
    /// 止损价
    /// </summary>
    public double StopPrice;
    public TThostFtdcForceCloseReasonType ForceCloseReason;
    /// <summary>
    /// 自动挂起标志
    /// </summary>
    public int IsAutoSuspend;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 用户强评标志
    /// </summary>
    public int UserForceClose;
    /// <summary>
    /// 互换单标志
    /// </summary>
    public int IsSwapOrder;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 资金账号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 交易编码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 报单
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcOrderField
{
    public CThostFtdcOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderRef = new byte[13];
    /// <summary>
    /// 报单引用
    /// </summary>
    public string OrderRef
    {
        get{ return GBKConvert.Instance.GetString(_OrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcOrderPriceTypeType OrderPriceType;
    public TThostFtdcDirectionType Direction;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _CombOffsetFlag = new byte[5];
    /// <summary>
    /// 组合开平标志
    /// </summary>
    public string CombOffsetFlag
    {
        get{ return GBKConvert.Instance.GetString(_CombOffsetFlag); }
        set{ GBKConvert.Instance.GetBytes(value, _CombOffsetFlag); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _CombHedgeFlag = new byte[5];
    /// <summary>
    /// 组合投机套保标志
    /// </summary>
    public string CombHedgeFlag
    {
        get{ return GBKConvert.Instance.GetString(_CombHedgeFlag); }
        set{ GBKConvert.Instance.GetBytes(value, _CombHedgeFlag); }
    }
    /// <summary>
    /// 价格
    /// </summary>
    public double LimitPrice;
    /// <summary>
    /// 数量
    /// </summary>
    public int VolumeTotalOriginal;
    public TThostFtdcTimeConditionType TimeCondition;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _GTDDate = new byte[9];
    /// <summary>
    /// GTD日期
    /// </summary>
    public string GTDDate
    {
        get{ return GBKConvert.Instance.GetString(_GTDDate); }
        set{ GBKConvert.Instance.GetBytes(value, _GTDDate); }
    }
    public TThostFtdcVolumeConditionType VolumeCondition;
    /// <summary>
    /// 最小成交量
    /// </summary>
    public int MinVolume;
    public TThostFtdcContingentConditionType ContingentCondition;
    /// <summary>
    /// 止损价
    /// </summary>
    public double StopPrice;
    public TThostFtdcForceCloseReasonType ForceCloseReason;
    /// <summary>
    /// 自动挂起标志
    /// </summary>
    public int IsAutoSuspend;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderLocalID = new byte[13];
    /// <summary>
    /// 本地报单编号
    /// </summary>
    public string OrderLocalID
    {
        get{ return GBKConvert.Instance.GetString(_OrderLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcOrderSubmitStatusType OrderSubmitStatus;
    /// <summary>
    /// 报单提示序号
    /// </summary>
    public int NotifySequence;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OrderSysID = new byte[21];
    /// <summary>
    /// 报单编号
    /// </summary>
    public string OrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_OrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderSysID); }
    }
    public TThostFtdcOrderSourceType OrderSource;
    public TThostFtdcOrderStatusType OrderStatus;
    public TThostFtdcOrderTypeType OrderType;
    /// <summary>
    /// 今成交数量
    /// </summary>
    public int VolumeTraded;
    /// <summary>
    /// 剩余数量
    /// </summary>
    public int VolumeTotal;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertDate = new byte[9];
    /// <summary>
    /// 报单日期
    /// </summary>
    public string InsertDate
    {
        get{ return GBKConvert.Instance.GetString(_InsertDate); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTime = new byte[9];
    /// <summary>
    /// 委托时间
    /// </summary>
    public string InsertTime
    {
        get{ return GBKConvert.Instance.GetString(_InsertTime); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActiveTime = new byte[9];
    /// <summary>
    /// 激活时间
    /// </summary>
    public string ActiveTime
    {
        get{ return GBKConvert.Instance.GetString(_ActiveTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ActiveTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _SuspendTime = new byte[9];
    /// <summary>
    /// 挂起时间
    /// </summary>
    public string SuspendTime
    {
        get{ return GBKConvert.Instance.GetString(_SuspendTime); }
        set{ GBKConvert.Instance.GetBytes(value, _SuspendTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _UpdateTime = new byte[9];
    /// <summary>
    /// 最后修改时间
    /// </summary>
    public string UpdateTime
    {
        get{ return GBKConvert.Instance.GetString(_UpdateTime); }
        set{ GBKConvert.Instance.GetBytes(value, _UpdateTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CancelTime = new byte[9];
    /// <summary>
    /// 撤销时间
    /// </summary>
    public string CancelTime
    {
        get{ return GBKConvert.Instance.GetString(_CancelTime); }
        set{ GBKConvert.Instance.GetBytes(value, _CancelTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ActiveTraderID = new byte[21];
    /// <summary>
    /// 最后修改交易所交易员代码
    /// </summary>
    public string ActiveTraderID
    {
        get{ return GBKConvert.Instance.GetString(_ActiveTraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActiveTraderID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClearingPartID = new byte[11];
    /// <summary>
    /// 结算会员编号
    /// </summary>
    public string ClearingPartID
    {
        get{ return GBKConvert.Instance.GetString(_ClearingPartID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClearingPartID); }
    }
    /// <summary>
    /// 序号
    /// </summary>
    public int SequenceNo;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UserProductInfo = new byte[11];
    /// <summary>
    /// 用户端产品信息
    /// </summary>
    public string UserProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StatusMsg = new byte[81];
    /// <summary>
    /// 状态信息
    /// </summary>
    public string StatusMsg
    {
        get{ return GBKConvert.Instance.GetString(_StatusMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _StatusMsg); }
    }
    /// <summary>
    /// 用户强评标志
    /// </summary>
    public int UserForceClose;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _ActiveUserID = new byte[16];
    /// <summary>
    /// 操作用户代码
    /// </summary>
    public string ActiveUserID
    {
        get{ return GBKConvert.Instance.GetString(_ActiveUserID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActiveUserID); }
    }
    /// <summary>
    /// 经纪公司报单编号
    /// </summary>
    public int BrokerOrderSeq;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _RelativeOrderSysID = new byte[21];
    /// <summary>
    /// 相关报单
    /// </summary>
    public string RelativeOrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_RelativeOrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _RelativeOrderSysID); }
    }
    /// <summary>
    /// 郑商所成交数量
    /// </summary>
    public int ZCETotalTradedVolume;
    /// <summary>
    /// 互换单标志
    /// </summary>
    public int IsSwapOrder;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 资金账号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve3 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve3
    {
        get{ return GBKConvert.Instance.GetString(_reserve3); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve3); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 交易所报单
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeOrderField
{
    public CThostFtdcExchangeOrderField() {}
    public TThostFtdcOrderPriceTypeType OrderPriceType;
    public TThostFtdcDirectionType Direction;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _CombOffsetFlag = new byte[5];
    /// <summary>
    /// 组合开平标志
    /// </summary>
    public string CombOffsetFlag
    {
        get{ return GBKConvert.Instance.GetString(_CombOffsetFlag); }
        set{ GBKConvert.Instance.GetBytes(value, _CombOffsetFlag); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _CombHedgeFlag = new byte[5];
    /// <summary>
    /// 组合投机套保标志
    /// </summary>
    public string CombHedgeFlag
    {
        get{ return GBKConvert.Instance.GetString(_CombHedgeFlag); }
        set{ GBKConvert.Instance.GetBytes(value, _CombHedgeFlag); }
    }
    /// <summary>
    /// 价格
    /// </summary>
    public double LimitPrice;
    /// <summary>
    /// 数量
    /// </summary>
    public int VolumeTotalOriginal;
    public TThostFtdcTimeConditionType TimeCondition;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _GTDDate = new byte[9];
    /// <summary>
    /// GTD日期
    /// </summary>
    public string GTDDate
    {
        get{ return GBKConvert.Instance.GetString(_GTDDate); }
        set{ GBKConvert.Instance.GetBytes(value, _GTDDate); }
    }
    public TThostFtdcVolumeConditionType VolumeCondition;
    /// <summary>
    /// 最小成交量
    /// </summary>
    public int MinVolume;
    public TThostFtdcContingentConditionType ContingentCondition;
    /// <summary>
    /// 止损价
    /// </summary>
    public double StopPrice;
    public TThostFtdcForceCloseReasonType ForceCloseReason;
    /// <summary>
    /// 自动挂起标志
    /// </summary>
    public int IsAutoSuspend;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderLocalID = new byte[13];
    /// <summary>
    /// 本地报单编号
    /// </summary>
    public string OrderLocalID
    {
        get{ return GBKConvert.Instance.GetString(_OrderLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcOrderSubmitStatusType OrderSubmitStatus;
    /// <summary>
    /// 报单提示序号
    /// </summary>
    public int NotifySequence;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OrderSysID = new byte[21];
    /// <summary>
    /// 报单编号
    /// </summary>
    public string OrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_OrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderSysID); }
    }
    public TThostFtdcOrderSourceType OrderSource;
    public TThostFtdcOrderStatusType OrderStatus;
    public TThostFtdcOrderTypeType OrderType;
    /// <summary>
    /// 今成交数量
    /// </summary>
    public int VolumeTraded;
    /// <summary>
    /// 剩余数量
    /// </summary>
    public int VolumeTotal;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertDate = new byte[9];
    /// <summary>
    /// 报单日期
    /// </summary>
    public string InsertDate
    {
        get{ return GBKConvert.Instance.GetString(_InsertDate); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTime = new byte[9];
    /// <summary>
    /// 委托时间
    /// </summary>
    public string InsertTime
    {
        get{ return GBKConvert.Instance.GetString(_InsertTime); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActiveTime = new byte[9];
    /// <summary>
    /// 激活时间
    /// </summary>
    public string ActiveTime
    {
        get{ return GBKConvert.Instance.GetString(_ActiveTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ActiveTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _SuspendTime = new byte[9];
    /// <summary>
    /// 挂起时间
    /// </summary>
    public string SuspendTime
    {
        get{ return GBKConvert.Instance.GetString(_SuspendTime); }
        set{ GBKConvert.Instance.GetBytes(value, _SuspendTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _UpdateTime = new byte[9];
    /// <summary>
    /// 最后修改时间
    /// </summary>
    public string UpdateTime
    {
        get{ return GBKConvert.Instance.GetString(_UpdateTime); }
        set{ GBKConvert.Instance.GetBytes(value, _UpdateTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CancelTime = new byte[9];
    /// <summary>
    /// 撤销时间
    /// </summary>
    public string CancelTime
    {
        get{ return GBKConvert.Instance.GetString(_CancelTime); }
        set{ GBKConvert.Instance.GetBytes(value, _CancelTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ActiveTraderID = new byte[21];
    /// <summary>
    /// 最后修改交易所交易员代码
    /// </summary>
    public string ActiveTraderID
    {
        get{ return GBKConvert.Instance.GetString(_ActiveTraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActiveTraderID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClearingPartID = new byte[11];
    /// <summary>
    /// 结算会员编号
    /// </summary>
    public string ClearingPartID
    {
        get{ return GBKConvert.Instance.GetString(_ClearingPartID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClearingPartID); }
    }
    /// <summary>
    /// 序号
    /// </summary>
    public int SequenceNo;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 交易所报单插入失败
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeOrderInsertErrorField
{
    public CThostFtdcExchangeOrderInsertErrorField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderLocalID = new byte[13];
    /// <summary>
    /// 本地报单编号
    /// </summary>
    public string OrderLocalID
    {
        get{ return GBKConvert.Instance.GetString(_OrderLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderLocalID); }
    }
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
}
/// <summary>
/// 输入报单操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInputOrderActionField
{
    public CThostFtdcInputOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 报单操作引用
    /// </summary>
    public int OrderActionRef;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderRef = new byte[13];
    /// <summary>
    /// 报单引用
    /// </summary>
    public string OrderRef
    {
        get{ return GBKConvert.Instance.GetString(_OrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderRef); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OrderSysID = new byte[21];
    /// <summary>
    /// 报单编号
    /// </summary>
    public string OrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_OrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderSysID); }
    }
    public TThostFtdcActionFlagType ActionFlag;
    /// <summary>
    /// 价格
    /// </summary>
    public double LimitPrice;
    /// <summary>
    /// 数量变化
    /// </summary>
    public int VolumeChange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 报单操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcOrderActionField
{
    public CThostFtdcOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 报单操作引用
    /// </summary>
    public int OrderActionRef;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderRef = new byte[13];
    /// <summary>
    /// 报单引用
    /// </summary>
    public string OrderRef
    {
        get{ return GBKConvert.Instance.GetString(_OrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderRef); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OrderSysID = new byte[21];
    /// <summary>
    /// 报单编号
    /// </summary>
    public string OrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_OrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderSysID); }
    }
    public TThostFtdcActionFlagType ActionFlag;
    /// <summary>
    /// 价格
    /// </summary>
    public double LimitPrice;
    /// <summary>
    /// 数量变化
    /// </summary>
    public int VolumeChange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDate = new byte[9];
    /// <summary>
    /// 操作日期
    /// </summary>
    public string ActionDate
    {
        get{ return GBKConvert.Instance.GetString(_ActionDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionTime = new byte[9];
    /// <summary>
    /// 操作时间
    /// </summary>
    public string ActionTime
    {
        get{ return GBKConvert.Instance.GetString(_ActionTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderLocalID = new byte[13];
    /// <summary>
    /// 本地报单编号
    /// </summary>
    public string OrderLocalID
    {
        get{ return GBKConvert.Instance.GetString(_OrderLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ActionLocalID = new byte[13];
    /// <summary>
    /// 操作本地编号
    /// </summary>
    public string ActionLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ActionLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOrderActionStatusType OrderActionStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StatusMsg = new byte[81];
    /// <summary>
    /// 状态信息
    /// </summary>
    public string StatusMsg
    {
        get{ return GBKConvert.Instance.GetString(_StatusMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _StatusMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 交易所报单操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeOrderActionField
{
    public CThostFtdcExchangeOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OrderSysID = new byte[21];
    /// <summary>
    /// 报单编号
    /// </summary>
    public string OrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_OrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderSysID); }
    }
    public TThostFtdcActionFlagType ActionFlag;
    /// <summary>
    /// 价格
    /// </summary>
    public double LimitPrice;
    /// <summary>
    /// 数量变化
    /// </summary>
    public int VolumeChange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDate = new byte[9];
    /// <summary>
    /// 操作日期
    /// </summary>
    public string ActionDate
    {
        get{ return GBKConvert.Instance.GetString(_ActionDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionTime = new byte[9];
    /// <summary>
    /// 操作时间
    /// </summary>
    public string ActionTime
    {
        get{ return GBKConvert.Instance.GetString(_ActionTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderLocalID = new byte[13];
    /// <summary>
    /// 本地报单编号
    /// </summary>
    public string OrderLocalID
    {
        get{ return GBKConvert.Instance.GetString(_OrderLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ActionLocalID = new byte[13];
    /// <summary>
    /// 操作本地编号
    /// </summary>
    public string ActionLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ActionLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOrderActionStatusType OrderActionStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 交易所报单操作失败
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeOrderActionErrorField
{
    public CThostFtdcExchangeOrderActionErrorField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OrderSysID = new byte[21];
    /// <summary>
    /// 报单编号
    /// </summary>
    public string OrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_OrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderLocalID = new byte[13];
    /// <summary>
    /// 本地报单编号
    /// </summary>
    public string OrderLocalID
    {
        get{ return GBKConvert.Instance.GetString(_OrderLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ActionLocalID = new byte[13];
    /// <summary>
    /// 操作本地编号
    /// </summary>
    public string ActionLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ActionLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionLocalID); }
    }
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
}
/// <summary>
/// 交易所成交
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeTradeField
{
    public CThostFtdcExchangeTradeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TradeID = new byte[21];
    /// <summary>
    /// 成交编号
    /// </summary>
    public string TradeID
    {
        get{ return GBKConvert.Instance.GetString(_TradeID); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeID); }
    }
    public TThostFtdcDirectionType Direction;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OrderSysID = new byte[21];
    /// <summary>
    /// 报单编号
    /// </summary>
    public string OrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_OrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    public TThostFtdcTradingRoleType TradingRole;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcOffsetFlagType OffsetFlag;
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 价格
    /// </summary>
    public double Price;
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 成交时期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 成交时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    public TThostFtdcTradeTypeType TradeType;
    public TThostFtdcPriceSourceType PriceSource;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderLocalID = new byte[13];
    /// <summary>
    /// 本地报单编号
    /// </summary>
    public string OrderLocalID
    {
        get{ return GBKConvert.Instance.GetString(_OrderLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClearingPartID = new byte[11];
    /// <summary>
    /// 结算会员编号
    /// </summary>
    public string ClearingPartID
    {
        get{ return GBKConvert.Instance.GetString(_ClearingPartID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClearingPartID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    /// <summary>
    /// 序号
    /// </summary>
    public int SequenceNo;
    public TThostFtdcTradeSourceType TradeSource;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
}
/// <summary>
/// 成交
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTradeField
{
    public CThostFtdcTradeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderRef = new byte[13];
    /// <summary>
    /// 报单引用
    /// </summary>
    public string OrderRef
    {
        get{ return GBKConvert.Instance.GetString(_OrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TradeID = new byte[21];
    /// <summary>
    /// 成交编号
    /// </summary>
    public string TradeID
    {
        get{ return GBKConvert.Instance.GetString(_TradeID); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeID); }
    }
    public TThostFtdcDirectionType Direction;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OrderSysID = new byte[21];
    /// <summary>
    /// 报单编号
    /// </summary>
    public string OrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_OrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    public TThostFtdcTradingRoleType TradingRole;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    public TThostFtdcOffsetFlagType OffsetFlag;
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 价格
    /// </summary>
    public double Price;
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 成交时期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 成交时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    public TThostFtdcTradeTypeType TradeType;
    public TThostFtdcPriceSourceType PriceSource;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderLocalID = new byte[13];
    /// <summary>
    /// 本地报单编号
    /// </summary>
    public string OrderLocalID
    {
        get{ return GBKConvert.Instance.GetString(_OrderLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClearingPartID = new byte[11];
    /// <summary>
    /// 结算会员编号
    /// </summary>
    public string ClearingPartID
    {
        get{ return GBKConvert.Instance.GetString(_ClearingPartID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClearingPartID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    /// <summary>
    /// 序号
    /// </summary>
    public int SequenceNo;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    /// <summary>
    /// 经纪公司报单编号
    /// </summary>
    public int BrokerOrderSeq;
    public TThostFtdcTradeSourceType TradeSource;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
}
/// <summary>
/// 用户会话
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcUserSessionField
{
    public CThostFtdcUserSessionField() {}
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _LoginDate = new byte[9];
    /// <summary>
    /// 登录日期
    /// </summary>
    public string LoginDate
    {
        get{ return GBKConvert.Instance.GetString(_LoginDate); }
        set{ GBKConvert.Instance.GetBytes(value, _LoginDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _LoginTime = new byte[9];
    /// <summary>
    /// 登录时间
    /// </summary>
    public string LoginTime
    {
        get{ return GBKConvert.Instance.GetString(_LoginTime); }
        set{ GBKConvert.Instance.GetBytes(value, _LoginTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UserProductInfo = new byte[11];
    /// <summary>
    /// 用户端产品信息
    /// </summary>
    public string UserProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _InterfaceProductInfo = new byte[11];
    /// <summary>
    /// 接口端产品信息
    /// </summary>
    public string InterfaceProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_InterfaceProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _InterfaceProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ProtocolInfo = new byte[11];
    /// <summary>
    /// 协议信息
    /// </summary>
    public string ProtocolInfo
    {
        get{ return GBKConvert.Instance.GetString(_ProtocolInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _ProtocolInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _LoginRemark = new byte[36];
    /// <summary>
    /// 登录备注
    /// </summary>
    public string LoginRemark
    {
        get{ return GBKConvert.Instance.GetString(_LoginRemark); }
        set{ GBKConvert.Instance.GetBytes(value, _LoginRemark); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 查询最大报单数量
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryMaxOrderVolumeField
{
    public CThostFtdcQryMaxOrderVolumeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcDirectionType Direction;
    public TThostFtdcOffsetFlagType OffsetFlag;
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 最大允许报单数量
    /// </summary>
    public int MaxVolume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 投资者结算结果确认信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSettlementInfoConfirmField
{
    public CThostFtdcSettlementInfoConfirmField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ConfirmDate = new byte[9];
    /// <summary>
    /// 确认日期
    /// </summary>
    public string ConfirmDate
    {
        get{ return GBKConvert.Instance.GetString(_ConfirmDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ConfirmDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ConfirmTime = new byte[9];
    /// <summary>
    /// 确认时间
    /// </summary>
    public string ConfirmTime
    {
        get{ return GBKConvert.Instance.GetString(_ConfirmTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ConfirmTime); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
}
/// <summary>
/// 出入金同步
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDepositField
{
    public CThostFtdcSyncDepositField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=15)]
    public readonly byte[] _DepositSeqNo = new byte[15];
    /// <summary>
    /// 出入金流水号
    /// </summary>
    public string DepositSeqNo
    {
        get{ return GBKConvert.Instance.GetString(_DepositSeqNo); }
        set{ GBKConvert.Instance.GetBytes(value, _DepositSeqNo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 入金金额
    /// </summary>
    public double Deposit;
    /// <summary>
    /// 是否强制进行
    /// </summary>
    public int IsForce;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    /// <summary>
    /// 是否是个股期权内转
    /// </summary>
    public int IsFromSopt;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _TradingPassword = new byte[41];
    /// <summary>
    /// 资金密码
    /// </summary>
    public string TradingPassword
    {
        get{ return GBKConvert.Instance.GetString(_TradingPassword); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingPassword); }
    }
}
/// <summary>
/// 货币质押同步
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncFundMortgageField
{
    public CThostFtdcSyncFundMortgageField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=15)]
    public readonly byte[] _MortgageSeqNo = new byte[15];
    /// <summary>
    /// 货币质押流水号
    /// </summary>
    public string MortgageSeqNo
    {
        get{ return GBKConvert.Instance.GetString(_MortgageSeqNo); }
        set{ GBKConvert.Instance.GetBytes(value, _MortgageSeqNo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _FromCurrencyID = new byte[4];
    /// <summary>
    /// 源币种
    /// </summary>
    public string FromCurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_FromCurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _FromCurrencyID); }
    }
    /// <summary>
    /// 质押金额
    /// </summary>
    public double MortgageAmount;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _ToCurrencyID = new byte[4];
    /// <summary>
    /// 目标币种
    /// </summary>
    public string ToCurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_ToCurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _ToCurrencyID); }
    }
}
/// <summary>
/// 经纪公司同步
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcBrokerSyncField
{
    public CThostFtdcBrokerSyncField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
}
/// <summary>
/// 正在同步中的投资者
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncingInvestorField
{
    public CThostFtdcSyncingInvestorField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorGroupID = new byte[13];
    /// <summary>
    /// 投资者分组代码
    /// </summary>
    public string InvestorGroupID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorGroupID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InvestorName = new byte[81];
    /// <summary>
    /// 投资者名称
    /// </summary>
    public string InvestorName
    {
        get{ return GBKConvert.Instance.GetString(_InvestorName); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorName); }
    }
    public TThostFtdcIdCardTypeType IdentifiedCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    /// <summary>
    /// 是否活跃
    /// </summary>
    public int IsActive;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Telephone = new byte[41];
    /// <summary>
    /// 联系电话
    /// </summary>
    public string Telephone
    {
        get{ return GBKConvert.Instance.GetString(_Telephone); }
        set{ GBKConvert.Instance.GetBytes(value, _Telephone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=101)]
    public readonly byte[] _Address = new byte[101];
    /// <summary>
    /// 通讯地址
    /// </summary>
    public string Address
    {
        get{ return GBKConvert.Instance.GetString(_Address); }
        set{ GBKConvert.Instance.GetBytes(value, _Address); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _OpenDate = new byte[9];
    /// <summary>
    /// 开户日期
    /// </summary>
    public string OpenDate
    {
        get{ return GBKConvert.Instance.GetString(_OpenDate); }
        set{ GBKConvert.Instance.GetBytes(value, _OpenDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Mobile = new byte[41];
    /// <summary>
    /// 手机
    /// </summary>
    public string Mobile
    {
        get{ return GBKConvert.Instance.GetString(_Mobile); }
        set{ GBKConvert.Instance.GetBytes(value, _Mobile); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _CommModelID = new byte[13];
    /// <summary>
    /// 手续费率模板代码
    /// </summary>
    public string CommModelID
    {
        get{ return GBKConvert.Instance.GetString(_CommModelID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommModelID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _MarginModelID = new byte[13];
    /// <summary>
    /// 保证金率模板代码
    /// </summary>
    public string MarginModelID
    {
        get{ return GBKConvert.Instance.GetString(_MarginModelID); }
        set{ GBKConvert.Instance.GetBytes(value, _MarginModelID); }
    }
    public TThostFtdcEnumBoolType IsOrderFreq;
    public TThostFtdcEnumBoolType IsOpenVolLimit;
}
/// <summary>
/// 正在同步中的交易代码
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncingTradingCodeField
{
    public CThostFtdcSyncingTradingCodeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    /// <summary>
    /// 是否活跃
    /// </summary>
    public int IsActive;
    public TThostFtdcClientIDTypeType ClientIDType;
}
/// <summary>
/// 正在同步中的投资者分组
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncingInvestorGroupField
{
    public CThostFtdcSyncingInvestorGroupField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorGroupID = new byte[13];
    /// <summary>
    /// 投资者分组代码
    /// </summary>
    public string InvestorGroupID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorGroupID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _InvestorGroupName = new byte[41];
    /// <summary>
    /// 投资者分组名称
    /// </summary>
    public string InvestorGroupName
    {
        get{ return GBKConvert.Instance.GetString(_InvestorGroupName); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorGroupName); }
    }
}
/// <summary>
/// 正在同步中的交易账号
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncingTradingAccountField
{
    public CThostFtdcSyncingTradingAccountField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    /// <summary>
    /// 上次质押金额
    /// </summary>
    public double PreMortgage;
    /// <summary>
    /// 上次信用额度
    /// </summary>
    public double PreCredit;
    /// <summary>
    /// 上次存款额
    /// </summary>
    public double PreDeposit;
    /// <summary>
    /// 上次结算准备金
    /// </summary>
    public double PreBalance;
    /// <summary>
    /// 上次占用的保证金
    /// </summary>
    public double PreMargin;
    /// <summary>
    /// 利息基数
    /// </summary>
    public double InterestBase;
    /// <summary>
    /// 利息收入
    /// </summary>
    public double Interest;
    /// <summary>
    /// 入金金额
    /// </summary>
    public double Deposit;
    /// <summary>
    /// 出金金额
    /// </summary>
    public double Withdraw;
    /// <summary>
    /// 冻结的保证金
    /// </summary>
    public double FrozenMargin;
    /// <summary>
    /// 冻结的资金
    /// </summary>
    public double FrozenCash;
    /// <summary>
    /// 冻结的手续费
    /// </summary>
    public double FrozenCommission;
    /// <summary>
    /// 当前保证金总额
    /// </summary>
    public double CurrMargin;
    /// <summary>
    /// 资金差额
    /// </summary>
    public double CashIn;
    /// <summary>
    /// 手续费
    /// </summary>
    public double Commission;
    /// <summary>
    /// 平仓盈亏
    /// </summary>
    public double CloseProfit;
    /// <summary>
    /// 持仓盈亏
    /// </summary>
    public double PositionProfit;
    /// <summary>
    /// 期货结算准备金
    /// </summary>
    public double Balance;
    /// <summary>
    /// 可用资金
    /// </summary>
    public double Available;
    /// <summary>
    /// 可取资金
    /// </summary>
    public double WithdrawQuota;
    /// <summary>
    /// 基本准备金
    /// </summary>
    public double Reserve;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    /// <summary>
    /// 信用额度
    /// </summary>
    public double Credit;
    /// <summary>
    /// 质押金额
    /// </summary>
    public double Mortgage;
    /// <summary>
    /// 交易所保证金
    /// </summary>
    public double ExchangeMargin;
    /// <summary>
    /// 投资者交割保证金
    /// </summary>
    public double DeliveryMargin;
    /// <summary>
    /// 交易所交割保证金
    /// </summary>
    public double ExchangeDeliveryMargin;
    /// <summary>
    /// 保底期货结算准备金
    /// </summary>
    public double ReserveBalance;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    /// <summary>
    /// 上次货币质入金额
    /// </summary>
    public double PreFundMortgageIn;
    /// <summary>
    /// 上次货币质出金额
    /// </summary>
    public double PreFundMortgageOut;
    /// <summary>
    /// 货币质入金额
    /// </summary>
    public double FundMortgageIn;
    /// <summary>
    /// 货币质出金额
    /// </summary>
    public double FundMortgageOut;
    /// <summary>
    /// 货币质押余额
    /// </summary>
    public double FundMortgageAvailable;
    /// <summary>
    /// 可质押货币金额
    /// </summary>
    public double MortgageableFund;
    /// <summary>
    /// 特殊产品占用保证金
    /// </summary>
    public double SpecProductMargin;
    /// <summary>
    /// 特殊产品冻结保证金
    /// </summary>
    public double SpecProductFrozenMargin;
    /// <summary>
    /// 特殊产品手续费
    /// </summary>
    public double SpecProductCommission;
    /// <summary>
    /// 特殊产品冻结手续费
    /// </summary>
    public double SpecProductFrozenCommission;
    /// <summary>
    /// 特殊产品持仓盈亏
    /// </summary>
    public double SpecProductPositionProfit;
    /// <summary>
    /// 特殊产品平仓盈亏
    /// </summary>
    public double SpecProductCloseProfit;
    /// <summary>
    /// 根据持仓盈亏算法计算的特殊产品持仓盈亏
    /// </summary>
    public double SpecProductPositionProfitByAlg;
    /// <summary>
    /// 特殊产品交易所保证金
    /// </summary>
    public double SpecProductExchangeMargin;
    /// <summary>
    /// 延时换汇冻结金额
    /// </summary>
    public double FrozenSwap;
    /// <summary>
    /// 剩余换汇额度
    /// </summary>
    public double RemainSwap;
}
/// <summary>
/// 正在同步中的投资者持仓
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncingInvestorPositionField
{
    public CThostFtdcSyncingInvestorPositionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcPosiDirectionType PosiDirection;
    public TThostFtdcHedgeFlagType HedgeFlag;
    public TThostFtdcPositionDateType PositionDate;
    /// <summary>
    /// 上日持仓
    /// </summary>
    public int YdPosition;
    /// <summary>
    /// 今日持仓
    /// </summary>
    public int Position;
    /// <summary>
    /// 多头冻结
    /// </summary>
    public int LongFrozen;
    /// <summary>
    /// 空头冻结
    /// </summary>
    public int ShortFrozen;
    /// <summary>
    /// 开仓冻结金额
    /// </summary>
    public double LongFrozenAmount;
    /// <summary>
    /// 开仓冻结金额
    /// </summary>
    public double ShortFrozenAmount;
    /// <summary>
    /// 开仓量
    /// </summary>
    public int OpenVolume;
    /// <summary>
    /// 平仓量
    /// </summary>
    public int CloseVolume;
    /// <summary>
    /// 开仓金额
    /// </summary>
    public double OpenAmount;
    /// <summary>
    /// 平仓金额
    /// </summary>
    public double CloseAmount;
    /// <summary>
    /// 持仓成本
    /// </summary>
    public double PositionCost;
    /// <summary>
    /// 上次占用的保证金
    /// </summary>
    public double PreMargin;
    /// <summary>
    /// 占用的保证金
    /// </summary>
    public double UseMargin;
    /// <summary>
    /// 冻结的保证金
    /// </summary>
    public double FrozenMargin;
    /// <summary>
    /// 冻结的资金
    /// </summary>
    public double FrozenCash;
    /// <summary>
    /// 冻结的手续费
    /// </summary>
    public double FrozenCommission;
    /// <summary>
    /// 资金差额
    /// </summary>
    public double CashIn;
    /// <summary>
    /// 手续费
    /// </summary>
    public double Commission;
    /// <summary>
    /// 平仓盈亏
    /// </summary>
    public double CloseProfit;
    /// <summary>
    /// 持仓盈亏
    /// </summary>
    public double PositionProfit;
    /// <summary>
    /// 上次结算价
    /// </summary>
    public double PreSettlementPrice;
    /// <summary>
    /// 本次结算价
    /// </summary>
    public double SettlementPrice;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    /// <summary>
    /// 开仓成本
    /// </summary>
    public double OpenCost;
    /// <summary>
    /// 交易所保证金
    /// </summary>
    public double ExchangeMargin;
    /// <summary>
    /// 组合成交形成的持仓
    /// </summary>
    public int CombPosition;
    /// <summary>
    /// 组合多头冻结
    /// </summary>
    public int CombLongFrozen;
    /// <summary>
    /// 组合空头冻结
    /// </summary>
    public int CombShortFrozen;
    /// <summary>
    /// 逐日盯市平仓盈亏
    /// </summary>
    public double CloseProfitByDate;
    /// <summary>
    /// 逐笔对冲平仓盈亏
    /// </summary>
    public double CloseProfitByTrade;
    /// <summary>
    /// 今日持仓
    /// </summary>
    public int TodayPosition;
    /// <summary>
    /// 保证金率
    /// </summary>
    public double MarginRateByMoney;
    /// <summary>
    /// 保证金率(按手数)
    /// </summary>
    public double MarginRateByVolume;
    /// <summary>
    /// 执行冻结
    /// </summary>
    public int StrikeFrozen;
    /// <summary>
    /// 执行冻结金额
    /// </summary>
    public double StrikeFrozenAmount;
    /// <summary>
    /// 放弃执行冻结
    /// </summary>
    public int AbandonFrozen;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 执行冻结的昨仓
    /// </summary>
    public int YdStrikeFrozen;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    /// <summary>
    /// 持仓成本差值
    /// </summary>
    public double PositionCostOffset;
    /// <summary>
    /// tas持仓手数
    /// </summary>
    public int TasPosition;
    /// <summary>
    /// tas持仓成本
    /// </summary>
    public double TasPositionCost;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 正在同步中的合约保证金率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncingInstrumentMarginRateField
{
    public CThostFtdcSyncingInstrumentMarginRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 多头保证金率
    /// </summary>
    public double LongMarginRatioByMoney;
    /// <summary>
    /// 多头保证金费
    /// </summary>
    public double LongMarginRatioByVolume;
    /// <summary>
    /// 空头保证金率
    /// </summary>
    public double ShortMarginRatioByMoney;
    /// <summary>
    /// 空头保证金费
    /// </summary>
    public double ShortMarginRatioByVolume;
    /// <summary>
    /// 是否相对交易所收取
    /// </summary>
    public int IsRelative;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 正在同步中的合约手续费率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncingInstrumentCommissionRateField
{
    public CThostFtdcSyncingInstrumentCommissionRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 开仓手续费率
    /// </summary>
    public double OpenRatioByMoney;
    /// <summary>
    /// 开仓手续费
    /// </summary>
    public double OpenRatioByVolume;
    /// <summary>
    /// 平仓手续费率
    /// </summary>
    public double CloseRatioByMoney;
    /// <summary>
    /// 平仓手续费
    /// </summary>
    public double CloseRatioByVolume;
    /// <summary>
    /// 平今手续费率
    /// </summary>
    public double CloseTodayRatioByMoney;
    /// <summary>
    /// 平今手续费
    /// </summary>
    public double CloseTodayRatioByVolume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 正在同步中的合约交易权限
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncingInstrumentTradingRightField
{
    public CThostFtdcSyncingInstrumentTradingRightField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcTradingRightType TradingRight;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询报单
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryOrderField
{
    public CThostFtdcQryOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OrderSysID = new byte[21];
    /// <summary>
    /// 报单编号
    /// </summary>
    public string OrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_OrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTimeStart = new byte[9];
    /// <summary>
    /// 开始时间
    /// </summary>
    public string InsertTimeStart
    {
        get{ return GBKConvert.Instance.GetString(_InsertTimeStart); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTimeStart); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTimeEnd = new byte[9];
    /// <summary>
    /// 结束时间
    /// </summary>
    public string InsertTimeEnd
    {
        get{ return GBKConvert.Instance.GetString(_InsertTimeEnd); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTimeEnd); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询成交
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryTradeField
{
    public CThostFtdcQryTradeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TradeID = new byte[21];
    /// <summary>
    /// 成交编号
    /// </summary>
    public string TradeID
    {
        get{ return GBKConvert.Instance.GetString(_TradeID); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTimeStart = new byte[9];
    /// <summary>
    /// 开始时间
    /// </summary>
    public string TradeTimeStart
    {
        get{ return GBKConvert.Instance.GetString(_TradeTimeStart); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTimeStart); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTimeEnd = new byte[9];
    /// <summary>
    /// 结束时间
    /// </summary>
    public string TradeTimeEnd
    {
        get{ return GBKConvert.Instance.GetString(_TradeTimeEnd); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTimeEnd); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询投资者持仓
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInvestorPositionField
{
    public CThostFtdcQryInvestorPositionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询资金账户
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryTradingAccountField
{
    public CThostFtdcQryTradingAccountField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    public TThostFtdcBizTypeType BizType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
}
/// <summary>
/// 查询投资者
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInvestorField
{
    public CThostFtdcQryInvestorField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
}
/// <summary>
/// 查询交易编码
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryTradingCodeField
{
    public CThostFtdcQryTradingCodeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    public TThostFtdcClientIDTypeType ClientIDType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
}
/// <summary>
/// 查询投资者组
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInvestorGroupField
{
    public CThostFtdcQryInvestorGroupField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
}
/// <summary>
/// 查询合约保证金率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInstrumentMarginRateField
{
    public CThostFtdcQryInstrumentMarginRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询手续费率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInstrumentCommissionRateField
{
    public CThostFtdcQryInstrumentCommissionRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询合约交易权限
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInstrumentTradingRightField
{
    public CThostFtdcQryInstrumentTradingRightField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询经纪公司
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryBrokerField
{
    public CThostFtdcQryBrokerField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
}
/// <summary>
/// 查询交易员
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryTraderField
{
    public CThostFtdcQryTraderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
}
/// <summary>
/// 查询管理用户功能权限
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySuperUserFunctionField
{
    public CThostFtdcQrySuperUserFunctionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
}
/// <summary>
/// 查询用户会话
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryUserSessionField
{
    public CThostFtdcQryUserSessionField() {}
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
}
/// <summary>
/// 查询经纪公司会员代码
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryPartBrokerField
{
    public CThostFtdcQryPartBrokerField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
}
/// <summary>
/// 查询前置状态
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryFrontStatusField
{
    public CThostFtdcQryFrontStatusField() {}
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
}
/// <summary>
/// 查询交易所报单
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryExchangeOrderField
{
    public CThostFtdcQryExchangeOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
}
/// <summary>
/// 查询报单操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryOrderActionField
{
    public CThostFtdcQryOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
}
/// <summary>
/// 查询交易所报单操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryExchangeOrderActionField
{
    public CThostFtdcQryExchangeOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
}
/// <summary>
/// 查询管理用户
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySuperUserField
{
    public CThostFtdcQrySuperUserField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
}
/// <summary>
/// 查询交易所
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryExchangeField
{
    public CThostFtdcQryExchangeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
}
/// <summary>
/// 查询产品
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryProductField
{
    public CThostFtdcQryProductField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcProductClassType ProductClass;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductID = new byte[81];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
}
/// <summary>
/// 查询合约
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInstrumentField
{
    public CThostFtdcQryInstrumentField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve3 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve3
    {
        get{ return GBKConvert.Instance.GetString(_reserve3); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve3); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductID = new byte[81];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
}
/// <summary>
/// 查询行情
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryDepthMarketDataField
{
    public CThostFtdcQryDepthMarketDataField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询经纪公司用户
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryBrokerUserField
{
    public CThostFtdcQryBrokerUserField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
}
/// <summary>
/// 查询经纪公司用户权限
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryBrokerUserFunctionField
{
    public CThostFtdcQryBrokerUserFunctionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
}
/// <summary>
/// 查询交易员报盘机
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryTraderOfferField
{
    public CThostFtdcQryTraderOfferField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
}
/// <summary>
/// 查询出入金流水
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySyncDepositField
{
    public CThostFtdcQrySyncDepositField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=15)]
    public readonly byte[] _DepositSeqNo = new byte[15];
    /// <summary>
    /// 出入金流水号
    /// </summary>
    public string DepositSeqNo
    {
        get{ return GBKConvert.Instance.GetString(_DepositSeqNo); }
        set{ GBKConvert.Instance.GetBytes(value, _DepositSeqNo); }
    }
}
/// <summary>
/// 查询投资者结算结果
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySettlementInfoField
{
    public CThostFtdcQrySettlementInfoField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
}
/// <summary>
/// 查询交易所保证金率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryExchangeMarginRateField
{
    public CThostFtdcQryExchangeMarginRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询交易所调整保证金率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryExchangeMarginRateAdjustField
{
    public CThostFtdcQryExchangeMarginRateAdjustField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询汇率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryExchangeRateField
{
    public CThostFtdcQryExchangeRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _FromCurrencyID = new byte[4];
    /// <summary>
    /// 源币种
    /// </summary>
    public string FromCurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_FromCurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _FromCurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _ToCurrencyID = new byte[4];
    /// <summary>
    /// 目标币种
    /// </summary>
    public string ToCurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_ToCurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _ToCurrencyID); }
    }
}
/// <summary>
/// 查询货币质押流水
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySyncFundMortgageField
{
    public CThostFtdcQrySyncFundMortgageField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=15)]
    public readonly byte[] _MortgageSeqNo = new byte[15];
    /// <summary>
    /// 货币质押流水号
    /// </summary>
    public string MortgageSeqNo
    {
        get{ return GBKConvert.Instance.GetString(_MortgageSeqNo); }
        set{ GBKConvert.Instance.GetBytes(value, _MortgageSeqNo); }
    }
}
/// <summary>
/// 查询报单
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryHisOrderField
{
    public CThostFtdcQryHisOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OrderSysID = new byte[21];
    /// <summary>
    /// 报单编号
    /// </summary>
    public string OrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_OrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTimeStart = new byte[9];
    /// <summary>
    /// 开始时间
    /// </summary>
    public string InsertTimeStart
    {
        get{ return GBKConvert.Instance.GetString(_InsertTimeStart); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTimeStart); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTimeEnd = new byte[9];
    /// <summary>
    /// 结束时间
    /// </summary>
    public string InsertTimeEnd
    {
        get{ return GBKConvert.Instance.GetString(_InsertTimeEnd); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTimeEnd); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 当前期权合约最小保证金
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcOptionInstrMiniMarginField
{
    public CThostFtdcOptionInstrMiniMarginField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 单位（手）期权合约最小保证金
    /// </summary>
    public double MinMargin;
    public TThostFtdcValueMethodType ValueMethod;
    /// <summary>
    /// 是否跟随交易所收取
    /// </summary>
    public int IsRelative;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 当前期权合约保证金调整系数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcOptionInstrMarginAdjustField
{
    public CThostFtdcOptionInstrMarginAdjustField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 投机空头保证金调整系数
    /// </summary>
    public double SShortMarginRatioByMoney;
    /// <summary>
    /// 投机空头保证金调整系数
    /// </summary>
    public double SShortMarginRatioByVolume;
    /// <summary>
    /// 保值空头保证金调整系数
    /// </summary>
    public double HShortMarginRatioByMoney;
    /// <summary>
    /// 保值空头保证金调整系数
    /// </summary>
    public double HShortMarginRatioByVolume;
    /// <summary>
    /// 套利空头保证金调整系数
    /// </summary>
    public double AShortMarginRatioByMoney;
    /// <summary>
    /// 套利空头保证金调整系数
    /// </summary>
    public double AShortMarginRatioByVolume;
    /// <summary>
    /// 是否跟随交易所收取
    /// </summary>
    public int IsRelative;
    /// <summary>
    /// 做市商空头保证金调整系数
    /// </summary>
    public double MShortMarginRatioByMoney;
    /// <summary>
    /// 做市商空头保证金调整系数
    /// </summary>
    public double MShortMarginRatioByVolume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 当前期权合约手续费的详细内容
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcOptionInstrCommRateField
{
    public CThostFtdcOptionInstrCommRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 开仓手续费率
    /// </summary>
    public double OpenRatioByMoney;
    /// <summary>
    /// 开仓手续费
    /// </summary>
    public double OpenRatioByVolume;
    /// <summary>
    /// 平仓手续费率
    /// </summary>
    public double CloseRatioByMoney;
    /// <summary>
    /// 平仓手续费
    /// </summary>
    public double CloseRatioByVolume;
    /// <summary>
    /// 平今手续费率
    /// </summary>
    public double CloseTodayRatioByMoney;
    /// <summary>
    /// 平今手续费
    /// </summary>
    public double CloseTodayRatioByVolume;
    /// <summary>
    /// 执行手续费率
    /// </summary>
    public double StrikeRatioByMoney;
    /// <summary>
    /// 执行手续费
    /// </summary>
    public double StrikeRatioByVolume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 期权交易成本
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcOptionInstrTradeCostField
{
    public CThostFtdcOptionInstrTradeCostField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 期权合约保证金不变部分
    /// </summary>
    public double FixedMargin;
    /// <summary>
    /// 期权合约最小保证金
    /// </summary>
    public double MiniMargin;
    /// <summary>
    /// 期权合约权利金
    /// </summary>
    public double Royalty;
    /// <summary>
    /// 交易所期权合约保证金不变部分
    /// </summary>
    public double ExchFixedMargin;
    /// <summary>
    /// 交易所期权合约最小保证金
    /// </summary>
    public double ExchMiniMargin;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 期权交易成本查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryOptionInstrTradeCostField
{
    public CThostFtdcQryOptionInstrTradeCostField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 期权合约报价
    /// </summary>
    public double InputPrice;
    /// <summary>
    /// 标的价格,填0则用昨结算价
    /// </summary>
    public double UnderlyingPrice;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 期权手续费率查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryOptionInstrCommRateField
{
    public CThostFtdcQryOptionInstrCommRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 股指现货指数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcIndexPriceField
{
    public CThostFtdcIndexPriceField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    /// <summary>
    /// 指数现货收盘价
    /// </summary>
    public double ClosePrice;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 输入的执行宣告
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInputExecOrderField
{
    public CThostFtdcInputExecOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ExecOrderRef = new byte[13];
    /// <summary>
    /// 执行宣告引用
    /// </summary>
    public string ExecOrderRef
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOffsetFlagType OffsetFlag;
    public TThostFtdcHedgeFlagType HedgeFlag;
    public TThostFtdcActionTypeType ActionType;
    public TThostFtdcPosiDirectionType PosiDirection;
    public TThostFtdcExecOrderPositionFlagType ReservePositionFlag;
    public TThostFtdcExecOrderCloseFlagType CloseFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 资金账号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 交易编码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 输入执行宣告操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInputExecOrderActionField
{
    public CThostFtdcInputExecOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 执行宣告操作引用
    /// </summary>
    public int ExecOrderActionRef;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ExecOrderRef = new byte[13];
    /// <summary>
    /// 执行宣告引用
    /// </summary>
    public string ExecOrderRef
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderRef); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ExecOrderSysID = new byte[21];
    /// <summary>
    /// 执行宣告操作编号
    /// </summary>
    public string ExecOrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderSysID); }
    }
    public TThostFtdcActionFlagType ActionFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 执行宣告
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExecOrderField
{
    public CThostFtdcExecOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ExecOrderRef = new byte[13];
    /// <summary>
    /// 执行宣告引用
    /// </summary>
    public string ExecOrderRef
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOffsetFlagType OffsetFlag;
    public TThostFtdcHedgeFlagType HedgeFlag;
    public TThostFtdcActionTypeType ActionType;
    public TThostFtdcPosiDirectionType PosiDirection;
    public TThostFtdcExecOrderPositionFlagType ReservePositionFlag;
    public TThostFtdcExecOrderCloseFlagType CloseFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ExecOrderLocalID = new byte[13];
    /// <summary>
    /// 本地执行宣告编号
    /// </summary>
    public string ExecOrderLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcOrderSubmitStatusType OrderSubmitStatus;
    /// <summary>
    /// 报单提示序号
    /// </summary>
    public int NotifySequence;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ExecOrderSysID = new byte[21];
    /// <summary>
    /// 执行宣告编号
    /// </summary>
    public string ExecOrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertDate = new byte[9];
    /// <summary>
    /// 报单日期
    /// </summary>
    public string InsertDate
    {
        get{ return GBKConvert.Instance.GetString(_InsertDate); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTime = new byte[9];
    /// <summary>
    /// 插入时间
    /// </summary>
    public string InsertTime
    {
        get{ return GBKConvert.Instance.GetString(_InsertTime); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CancelTime = new byte[9];
    /// <summary>
    /// 撤销时间
    /// </summary>
    public string CancelTime
    {
        get{ return GBKConvert.Instance.GetString(_CancelTime); }
        set{ GBKConvert.Instance.GetBytes(value, _CancelTime); }
    }
    public TThostFtdcExecResultType ExecResult;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClearingPartID = new byte[11];
    /// <summary>
    /// 结算会员编号
    /// </summary>
    public string ClearingPartID
    {
        get{ return GBKConvert.Instance.GetString(_ClearingPartID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClearingPartID); }
    }
    /// <summary>
    /// 序号
    /// </summary>
    public int SequenceNo;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UserProductInfo = new byte[11];
    /// <summary>
    /// 用户端产品信息
    /// </summary>
    public string UserProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StatusMsg = new byte[81];
    /// <summary>
    /// 状态信息
    /// </summary>
    public string StatusMsg
    {
        get{ return GBKConvert.Instance.GetString(_StatusMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _StatusMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _ActiveUserID = new byte[16];
    /// <summary>
    /// 操作用户代码
    /// </summary>
    public string ActiveUserID
    {
        get{ return GBKConvert.Instance.GetString(_ActiveUserID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActiveUserID); }
    }
    /// <summary>
    /// 经纪公司报单编号
    /// </summary>
    public int BrokerExecOrderSeq;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 资金账号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve3 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve3
    {
        get{ return GBKConvert.Instance.GetString(_reserve3); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve3); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 执行宣告操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExecOrderActionField
{
    public CThostFtdcExecOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 执行宣告操作引用
    /// </summary>
    public int ExecOrderActionRef;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ExecOrderRef = new byte[13];
    /// <summary>
    /// 执行宣告引用
    /// </summary>
    public string ExecOrderRef
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderRef); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ExecOrderSysID = new byte[21];
    /// <summary>
    /// 执行宣告操作编号
    /// </summary>
    public string ExecOrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderSysID); }
    }
    public TThostFtdcActionFlagType ActionFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDate = new byte[9];
    /// <summary>
    /// 操作日期
    /// </summary>
    public string ActionDate
    {
        get{ return GBKConvert.Instance.GetString(_ActionDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionTime = new byte[9];
    /// <summary>
    /// 操作时间
    /// </summary>
    public string ActionTime
    {
        get{ return GBKConvert.Instance.GetString(_ActionTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ExecOrderLocalID = new byte[13];
    /// <summary>
    /// 本地执行宣告编号
    /// </summary>
    public string ExecOrderLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ActionLocalID = new byte[13];
    /// <summary>
    /// 操作本地编号
    /// </summary>
    public string ActionLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ActionLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOrderActionStatusType OrderActionStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcActionTypeType ActionType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StatusMsg = new byte[81];
    /// <summary>
    /// 状态信息
    /// </summary>
    public string StatusMsg
    {
        get{ return GBKConvert.Instance.GetString(_StatusMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _StatusMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 执行宣告查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryExecOrderField
{
    public CThostFtdcQryExecOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ExecOrderSysID = new byte[21];
    /// <summary>
    /// 执行宣告编号
    /// </summary>
    public string ExecOrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTimeStart = new byte[9];
    /// <summary>
    /// 开始时间
    /// </summary>
    public string InsertTimeStart
    {
        get{ return GBKConvert.Instance.GetString(_InsertTimeStart); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTimeStart); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTimeEnd = new byte[9];
    /// <summary>
    /// 结束时间
    /// </summary>
    public string InsertTimeEnd
    {
        get{ return GBKConvert.Instance.GetString(_InsertTimeEnd); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTimeEnd); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 交易所执行宣告信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeExecOrderField
{
    public CThostFtdcExchangeExecOrderField() {}
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOffsetFlagType OffsetFlag;
    public TThostFtdcHedgeFlagType HedgeFlag;
    public TThostFtdcActionTypeType ActionType;
    public TThostFtdcPosiDirectionType PosiDirection;
    public TThostFtdcExecOrderPositionFlagType ReservePositionFlag;
    public TThostFtdcExecOrderCloseFlagType CloseFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ExecOrderLocalID = new byte[13];
    /// <summary>
    /// 本地执行宣告编号
    /// </summary>
    public string ExecOrderLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcOrderSubmitStatusType OrderSubmitStatus;
    /// <summary>
    /// 报单提示序号
    /// </summary>
    public int NotifySequence;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ExecOrderSysID = new byte[21];
    /// <summary>
    /// 执行宣告编号
    /// </summary>
    public string ExecOrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertDate = new byte[9];
    /// <summary>
    /// 报单日期
    /// </summary>
    public string InsertDate
    {
        get{ return GBKConvert.Instance.GetString(_InsertDate); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTime = new byte[9];
    /// <summary>
    /// 插入时间
    /// </summary>
    public string InsertTime
    {
        get{ return GBKConvert.Instance.GetString(_InsertTime); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CancelTime = new byte[9];
    /// <summary>
    /// 撤销时间
    /// </summary>
    public string CancelTime
    {
        get{ return GBKConvert.Instance.GetString(_CancelTime); }
        set{ GBKConvert.Instance.GetBytes(value, _CancelTime); }
    }
    public TThostFtdcExecResultType ExecResult;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClearingPartID = new byte[11];
    /// <summary>
    /// 结算会员编号
    /// </summary>
    public string ClearingPartID
    {
        get{ return GBKConvert.Instance.GetString(_ClearingPartID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClearingPartID); }
    }
    /// <summary>
    /// 序号
    /// </summary>
    public int SequenceNo;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 交易所执行宣告查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryExchangeExecOrderField
{
    public CThostFtdcQryExchangeExecOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
}
/// <summary>
/// 执行宣告操作查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryExecOrderActionField
{
    public CThostFtdcQryExecOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
}
/// <summary>
/// 交易所执行宣告操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeExecOrderActionField
{
    public CThostFtdcExchangeExecOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ExecOrderSysID = new byte[21];
    /// <summary>
    /// 执行宣告操作编号
    /// </summary>
    public string ExecOrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderSysID); }
    }
    public TThostFtdcActionFlagType ActionFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDate = new byte[9];
    /// <summary>
    /// 操作日期
    /// </summary>
    public string ActionDate
    {
        get{ return GBKConvert.Instance.GetString(_ActionDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionTime = new byte[9];
    /// <summary>
    /// 操作时间
    /// </summary>
    public string ActionTime
    {
        get{ return GBKConvert.Instance.GetString(_ActionTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ExecOrderLocalID = new byte[13];
    /// <summary>
    /// 本地执行宣告编号
    /// </summary>
    public string ExecOrderLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ActionLocalID = new byte[13];
    /// <summary>
    /// 操作本地编号
    /// </summary>
    public string ActionLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ActionLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOrderActionStatusType OrderActionStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcActionTypeType ActionType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
}
/// <summary>
/// 交易所执行宣告操作查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryExchangeExecOrderActionField
{
    public CThostFtdcQryExchangeExecOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
}
/// <summary>
/// 错误执行宣告
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcErrExecOrderField
{
    public CThostFtdcErrExecOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ExecOrderRef = new byte[13];
    /// <summary>
    /// 执行宣告引用
    /// </summary>
    public string ExecOrderRef
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOffsetFlagType OffsetFlag;
    public TThostFtdcHedgeFlagType HedgeFlag;
    public TThostFtdcActionTypeType ActionType;
    public TThostFtdcPosiDirectionType PosiDirection;
    public TThostFtdcExecOrderPositionFlagType ReservePositionFlag;
    public TThostFtdcExecOrderCloseFlagType CloseFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 资金账号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 交易编码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 查询错误执行宣告
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryErrExecOrderField
{
    public CThostFtdcQryErrExecOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
}
/// <summary>
/// 错误执行宣告操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcErrExecOrderActionField
{
    public CThostFtdcErrExecOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 执行宣告操作引用
    /// </summary>
    public int ExecOrderActionRef;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ExecOrderRef = new byte[13];
    /// <summary>
    /// 执行宣告引用
    /// </summary>
    public string ExecOrderRef
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderRef); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ExecOrderSysID = new byte[21];
    /// <summary>
    /// 执行宣告操作编号
    /// </summary>
    public string ExecOrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_ExecOrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExecOrderSysID); }
    }
    public TThostFtdcActionFlagType ActionFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 查询错误执行宣告操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryErrExecOrderActionField
{
    public CThostFtdcQryErrExecOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
}
/// <summary>
/// 投资者期权合约交易权限
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcOptionInstrTradingRightField
{
    public CThostFtdcOptionInstrTradingRightField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcDirectionType Direction;
    public TThostFtdcTradingRightType TradingRight;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询期权合约交易权限
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryOptionInstrTradingRightField
{
    public CThostFtdcQryOptionInstrTradingRightField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcDirectionType Direction;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 输入的询价
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInputForQuoteField
{
    public CThostFtdcInputForQuoteField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ForQuoteRef = new byte[13];
    /// <summary>
    /// 询价引用
    /// </summary>
    public string ForQuoteRef
    {
        get{ return GBKConvert.Instance.GetString(_ForQuoteRef); }
        set{ GBKConvert.Instance.GetBytes(value, _ForQuoteRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 询价
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcForQuoteField
{
    public CThostFtdcForQuoteField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ForQuoteRef = new byte[13];
    /// <summary>
    /// 询价引用
    /// </summary>
    public string ForQuoteRef
    {
        get{ return GBKConvert.Instance.GetString(_ForQuoteRef); }
        set{ GBKConvert.Instance.GetBytes(value, _ForQuoteRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ForQuoteLocalID = new byte[13];
    /// <summary>
    /// 本地询价编号
    /// </summary>
    public string ForQuoteLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ForQuoteLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ForQuoteLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertDate = new byte[9];
    /// <summary>
    /// 报单日期
    /// </summary>
    public string InsertDate
    {
        get{ return GBKConvert.Instance.GetString(_InsertDate); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTime = new byte[9];
    /// <summary>
    /// 插入时间
    /// </summary>
    public string InsertTime
    {
        get{ return GBKConvert.Instance.GetString(_InsertTime); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTime); }
    }
    public TThostFtdcForQuoteStatusType ForQuoteStatus;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StatusMsg = new byte[81];
    /// <summary>
    /// 状态信息
    /// </summary>
    public string StatusMsg
    {
        get{ return GBKConvert.Instance.GetString(_StatusMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _StatusMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _ActiveUserID = new byte[16];
    /// <summary>
    /// 操作用户代码
    /// </summary>
    public string ActiveUserID
    {
        get{ return GBKConvert.Instance.GetString(_ActiveUserID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActiveUserID); }
    }
    /// <summary>
    /// 经纪公司询价编号
    /// </summary>
    public int BrokerForQutoSeq;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve3 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve3
    {
        get{ return GBKConvert.Instance.GetString(_reserve3); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve3); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 询价查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryForQuoteField
{
    public CThostFtdcQryForQuoteField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTimeStart = new byte[9];
    /// <summary>
    /// 开始时间
    /// </summary>
    public string InsertTimeStart
    {
        get{ return GBKConvert.Instance.GetString(_InsertTimeStart); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTimeStart); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTimeEnd = new byte[9];
    /// <summary>
    /// 结束时间
    /// </summary>
    public string InsertTimeEnd
    {
        get{ return GBKConvert.Instance.GetString(_InsertTimeEnd); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTimeEnd); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 交易所询价信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeForQuoteField
{
    public CThostFtdcExchangeForQuoteField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ForQuoteLocalID = new byte[13];
    /// <summary>
    /// 本地询价编号
    /// </summary>
    public string ForQuoteLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ForQuoteLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ForQuoteLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertDate = new byte[9];
    /// <summary>
    /// 报单日期
    /// </summary>
    public string InsertDate
    {
        get{ return GBKConvert.Instance.GetString(_InsertDate); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTime = new byte[9];
    /// <summary>
    /// 插入时间
    /// </summary>
    public string InsertTime
    {
        get{ return GBKConvert.Instance.GetString(_InsertTime); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTime); }
    }
    public TThostFtdcForQuoteStatusType ForQuoteStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 交易所询价查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryExchangeForQuoteField
{
    public CThostFtdcQryExchangeForQuoteField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
}
/// <summary>
/// 输入的报价
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInputQuoteField
{
    public CThostFtdcInputQuoteField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _QuoteRef = new byte[13];
    /// <summary>
    /// 报价引用
    /// </summary>
    public string QuoteRef
    {
        get{ return GBKConvert.Instance.GetString(_QuoteRef); }
        set{ GBKConvert.Instance.GetBytes(value, _QuoteRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    /// <summary>
    /// 卖价格
    /// </summary>
    public double AskPrice;
    /// <summary>
    /// 买价格
    /// </summary>
    public double BidPrice;
    /// <summary>
    /// 卖数量
    /// </summary>
    public int AskVolume;
    /// <summary>
    /// 买数量
    /// </summary>
    public int BidVolume;
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOffsetFlagType AskOffsetFlag;
    public TThostFtdcOffsetFlagType BidOffsetFlag;
    public TThostFtdcHedgeFlagType AskHedgeFlag;
    public TThostFtdcHedgeFlagType BidHedgeFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AskOrderRef = new byte[13];
    /// <summary>
    /// 衍生卖报单引用
    /// </summary>
    public string AskOrderRef
    {
        get{ return GBKConvert.Instance.GetString(_AskOrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _AskOrderRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BidOrderRef = new byte[13];
    /// <summary>
    /// 衍生买报单引用
    /// </summary>
    public string BidOrderRef
    {
        get{ return GBKConvert.Instance.GetString(_BidOrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _BidOrderRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ForQuoteSysID = new byte[21];
    /// <summary>
    /// 应价编号
    /// </summary>
    public string ForQuoteSysID
    {
        get{ return GBKConvert.Instance.GetString(_ForQuoteSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _ForQuoteSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 交易编码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ReplaceSysID = new byte[21];
    /// <summary>
    /// 被顶单编号
    /// </summary>
    public string ReplaceSysID
    {
        get{ return GBKConvert.Instance.GetString(_ReplaceSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _ReplaceSysID); }
    }
    public TThostFtdcTimeConditionType TimeCondition;
}
/// <summary>
/// 输入报价操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInputQuoteActionField
{
    public CThostFtdcInputQuoteActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 报价操作引用
    /// </summary>
    public int QuoteActionRef;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _QuoteRef = new byte[13];
    /// <summary>
    /// 报价引用
    /// </summary>
    public string QuoteRef
    {
        get{ return GBKConvert.Instance.GetString(_QuoteRef); }
        set{ GBKConvert.Instance.GetBytes(value, _QuoteRef); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _QuoteSysID = new byte[21];
    /// <summary>
    /// 报价操作编号
    /// </summary>
    public string QuoteSysID
    {
        get{ return GBKConvert.Instance.GetString(_QuoteSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _QuoteSysID); }
    }
    public TThostFtdcActionFlagType ActionFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 交易编码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 报价
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQuoteField
{
    public CThostFtdcQuoteField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _QuoteRef = new byte[13];
    /// <summary>
    /// 报价引用
    /// </summary>
    public string QuoteRef
    {
        get{ return GBKConvert.Instance.GetString(_QuoteRef); }
        set{ GBKConvert.Instance.GetBytes(value, _QuoteRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    /// <summary>
    /// 卖价格
    /// </summary>
    public double AskPrice;
    /// <summary>
    /// 买价格
    /// </summary>
    public double BidPrice;
    /// <summary>
    /// 卖数量
    /// </summary>
    public int AskVolume;
    /// <summary>
    /// 买数量
    /// </summary>
    public int BidVolume;
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOffsetFlagType AskOffsetFlag;
    public TThostFtdcOffsetFlagType BidOffsetFlag;
    public TThostFtdcHedgeFlagType AskHedgeFlag;
    public TThostFtdcHedgeFlagType BidHedgeFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _QuoteLocalID = new byte[13];
    /// <summary>
    /// 本地报价编号
    /// </summary>
    public string QuoteLocalID
    {
        get{ return GBKConvert.Instance.GetString(_QuoteLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _QuoteLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    /// <summary>
    /// 报价提示序号
    /// </summary>
    public int NotifySequence;
    public TThostFtdcOrderSubmitStatusType OrderSubmitStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _QuoteSysID = new byte[21];
    /// <summary>
    /// 报价编号
    /// </summary>
    public string QuoteSysID
    {
        get{ return GBKConvert.Instance.GetString(_QuoteSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _QuoteSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertDate = new byte[9];
    /// <summary>
    /// 报单日期
    /// </summary>
    public string InsertDate
    {
        get{ return GBKConvert.Instance.GetString(_InsertDate); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTime = new byte[9];
    /// <summary>
    /// 插入时间
    /// </summary>
    public string InsertTime
    {
        get{ return GBKConvert.Instance.GetString(_InsertTime); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CancelTime = new byte[9];
    /// <summary>
    /// 撤销时间
    /// </summary>
    public string CancelTime
    {
        get{ return GBKConvert.Instance.GetString(_CancelTime); }
        set{ GBKConvert.Instance.GetBytes(value, _CancelTime); }
    }
    public TThostFtdcOrderStatusType QuoteStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClearingPartID = new byte[11];
    /// <summary>
    /// 结算会员编号
    /// </summary>
    public string ClearingPartID
    {
        get{ return GBKConvert.Instance.GetString(_ClearingPartID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClearingPartID); }
    }
    /// <summary>
    /// 序号
    /// </summary>
    public int SequenceNo;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _AskOrderSysID = new byte[21];
    /// <summary>
    /// 卖方报单编号
    /// </summary>
    public string AskOrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_AskOrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _AskOrderSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BidOrderSysID = new byte[21];
    /// <summary>
    /// 买方报单编号
    /// </summary>
    public string BidOrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_BidOrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _BidOrderSysID); }
    }
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UserProductInfo = new byte[11];
    /// <summary>
    /// 用户端产品信息
    /// </summary>
    public string UserProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StatusMsg = new byte[81];
    /// <summary>
    /// 状态信息
    /// </summary>
    public string StatusMsg
    {
        get{ return GBKConvert.Instance.GetString(_StatusMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _StatusMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _ActiveUserID = new byte[16];
    /// <summary>
    /// 操作用户代码
    /// </summary>
    public string ActiveUserID
    {
        get{ return GBKConvert.Instance.GetString(_ActiveUserID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActiveUserID); }
    }
    /// <summary>
    /// 经纪公司报价编号
    /// </summary>
    public int BrokerQuoteSeq;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AskOrderRef = new byte[13];
    /// <summary>
    /// 衍生卖报单引用
    /// </summary>
    public string AskOrderRef
    {
        get{ return GBKConvert.Instance.GetString(_AskOrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _AskOrderRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BidOrderRef = new byte[13];
    /// <summary>
    /// 衍生买报单引用
    /// </summary>
    public string BidOrderRef
    {
        get{ return GBKConvert.Instance.GetString(_BidOrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _BidOrderRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ForQuoteSysID = new byte[21];
    /// <summary>
    /// 应价编号
    /// </summary>
    public string ForQuoteSysID
    {
        get{ return GBKConvert.Instance.GetString(_ForQuoteSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _ForQuoteSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 资金账号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve3 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve3
    {
        get{ return GBKConvert.Instance.GetString(_reserve3); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve3); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ReplaceSysID = new byte[21];
    /// <summary>
    /// 被顶单编号
    /// </summary>
    public string ReplaceSysID
    {
        get{ return GBKConvert.Instance.GetString(_ReplaceSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _ReplaceSysID); }
    }
    public TThostFtdcTimeConditionType TimeCondition;
}
/// <summary>
/// 报价操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQuoteActionField
{
    public CThostFtdcQuoteActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 报价操作引用
    /// </summary>
    public int QuoteActionRef;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _QuoteRef = new byte[13];
    /// <summary>
    /// 报价引用
    /// </summary>
    public string QuoteRef
    {
        get{ return GBKConvert.Instance.GetString(_QuoteRef); }
        set{ GBKConvert.Instance.GetBytes(value, _QuoteRef); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _QuoteSysID = new byte[21];
    /// <summary>
    /// 报价操作编号
    /// </summary>
    public string QuoteSysID
    {
        get{ return GBKConvert.Instance.GetString(_QuoteSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _QuoteSysID); }
    }
    public TThostFtdcActionFlagType ActionFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDate = new byte[9];
    /// <summary>
    /// 操作日期
    /// </summary>
    public string ActionDate
    {
        get{ return GBKConvert.Instance.GetString(_ActionDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionTime = new byte[9];
    /// <summary>
    /// 操作时间
    /// </summary>
    public string ActionTime
    {
        get{ return GBKConvert.Instance.GetString(_ActionTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _QuoteLocalID = new byte[13];
    /// <summary>
    /// 本地报价编号
    /// </summary>
    public string QuoteLocalID
    {
        get{ return GBKConvert.Instance.GetString(_QuoteLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _QuoteLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ActionLocalID = new byte[13];
    /// <summary>
    /// 操作本地编号
    /// </summary>
    public string ActionLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ActionLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOrderActionStatusType OrderActionStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StatusMsg = new byte[81];
    /// <summary>
    /// 状态信息
    /// </summary>
    public string StatusMsg
    {
        get{ return GBKConvert.Instance.GetString(_StatusMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _StatusMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 报价查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryQuoteField
{
    public CThostFtdcQryQuoteField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _QuoteSysID = new byte[21];
    /// <summary>
    /// 报价编号
    /// </summary>
    public string QuoteSysID
    {
        get{ return GBKConvert.Instance.GetString(_QuoteSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _QuoteSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTimeStart = new byte[9];
    /// <summary>
    /// 开始时间
    /// </summary>
    public string InsertTimeStart
    {
        get{ return GBKConvert.Instance.GetString(_InsertTimeStart); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTimeStart); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTimeEnd = new byte[9];
    /// <summary>
    /// 结束时间
    /// </summary>
    public string InsertTimeEnd
    {
        get{ return GBKConvert.Instance.GetString(_InsertTimeEnd); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTimeEnd); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 交易所报价信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeQuoteField
{
    public CThostFtdcExchangeQuoteField() {}
    /// <summary>
    /// 卖价格
    /// </summary>
    public double AskPrice;
    /// <summary>
    /// 买价格
    /// </summary>
    public double BidPrice;
    /// <summary>
    /// 卖数量
    /// </summary>
    public int AskVolume;
    /// <summary>
    /// 买数量
    /// </summary>
    public int BidVolume;
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOffsetFlagType AskOffsetFlag;
    public TThostFtdcOffsetFlagType BidOffsetFlag;
    public TThostFtdcHedgeFlagType AskHedgeFlag;
    public TThostFtdcHedgeFlagType BidHedgeFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _QuoteLocalID = new byte[13];
    /// <summary>
    /// 本地报价编号
    /// </summary>
    public string QuoteLocalID
    {
        get{ return GBKConvert.Instance.GetString(_QuoteLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _QuoteLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    /// <summary>
    /// 报价提示序号
    /// </summary>
    public int NotifySequence;
    public TThostFtdcOrderSubmitStatusType OrderSubmitStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _QuoteSysID = new byte[21];
    /// <summary>
    /// 报价编号
    /// </summary>
    public string QuoteSysID
    {
        get{ return GBKConvert.Instance.GetString(_QuoteSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _QuoteSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertDate = new byte[9];
    /// <summary>
    /// 报单日期
    /// </summary>
    public string InsertDate
    {
        get{ return GBKConvert.Instance.GetString(_InsertDate); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTime = new byte[9];
    /// <summary>
    /// 插入时间
    /// </summary>
    public string InsertTime
    {
        get{ return GBKConvert.Instance.GetString(_InsertTime); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CancelTime = new byte[9];
    /// <summary>
    /// 撤销时间
    /// </summary>
    public string CancelTime
    {
        get{ return GBKConvert.Instance.GetString(_CancelTime); }
        set{ GBKConvert.Instance.GetBytes(value, _CancelTime); }
    }
    public TThostFtdcOrderStatusType QuoteStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClearingPartID = new byte[11];
    /// <summary>
    /// 结算会员编号
    /// </summary>
    public string ClearingPartID
    {
        get{ return GBKConvert.Instance.GetString(_ClearingPartID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClearingPartID); }
    }
    /// <summary>
    /// 序号
    /// </summary>
    public int SequenceNo;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _AskOrderSysID = new byte[21];
    /// <summary>
    /// 卖方报单编号
    /// </summary>
    public string AskOrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_AskOrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _AskOrderSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BidOrderSysID = new byte[21];
    /// <summary>
    /// 买方报单编号
    /// </summary>
    public string BidOrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_BidOrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _BidOrderSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ForQuoteSysID = new byte[21];
    /// <summary>
    /// 应价编号
    /// </summary>
    public string ForQuoteSysID
    {
        get{ return GBKConvert.Instance.GetString(_ForQuoteSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _ForQuoteSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
    public TThostFtdcTimeConditionType TimeCondition;
}
/// <summary>
/// 交易所报价查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryExchangeQuoteField
{
    public CThostFtdcQryExchangeQuoteField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
}
/// <summary>
/// 报价操作查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryQuoteActionField
{
    public CThostFtdcQryQuoteActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
}
/// <summary>
/// 交易所报价操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeQuoteActionField
{
    public CThostFtdcExchangeQuoteActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _QuoteSysID = new byte[21];
    /// <summary>
    /// 报价操作编号
    /// </summary>
    public string QuoteSysID
    {
        get{ return GBKConvert.Instance.GetString(_QuoteSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _QuoteSysID); }
    }
    public TThostFtdcActionFlagType ActionFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDate = new byte[9];
    /// <summary>
    /// 操作日期
    /// </summary>
    public string ActionDate
    {
        get{ return GBKConvert.Instance.GetString(_ActionDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionTime = new byte[9];
    /// <summary>
    /// 操作时间
    /// </summary>
    public string ActionTime
    {
        get{ return GBKConvert.Instance.GetString(_ActionTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _QuoteLocalID = new byte[13];
    /// <summary>
    /// 本地报价编号
    /// </summary>
    public string QuoteLocalID
    {
        get{ return GBKConvert.Instance.GetString(_QuoteLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _QuoteLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ActionLocalID = new byte[13];
    /// <summary>
    /// 操作本地编号
    /// </summary>
    public string ActionLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ActionLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOrderActionStatusType OrderActionStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 交易所报价操作查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryExchangeQuoteActionField
{
    public CThostFtdcQryExchangeQuoteActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
}
/// <summary>
/// 期权合约delta值
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcOptionInstrDeltaField
{
    public CThostFtdcOptionInstrDeltaField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// Delta值
    /// </summary>
    public double Delta;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 发给做市商的询价请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcForQuoteRspField
{
    public CThostFtdcForQuoteRspField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ForQuoteSysID = new byte[21];
    /// <summary>
    /// 询价编号
    /// </summary>
    public string ForQuoteSysID
    {
        get{ return GBKConvert.Instance.GetString(_ForQuoteSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _ForQuoteSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ForQuoteTime = new byte[9];
    /// <summary>
    /// 询价时间
    /// </summary>
    public string ForQuoteTime
    {
        get{ return GBKConvert.Instance.GetString(_ForQuoteTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ForQuoteTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDay = new byte[9];
    /// <summary>
    /// 业务日期
    /// </summary>
    public string ActionDay
    {
        get{ return GBKConvert.Instance.GetString(_ActionDay); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 当前期权合约执行偏移值的详细内容
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcStrikeOffsetField
{
    public CThostFtdcStrikeOffsetField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 执行偏移值
    /// </summary>
    public double Offset;
    public TThostFtdcStrikeOffsetTypeType OffsetType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 期权执行偏移值查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryStrikeOffsetField
{
    public CThostFtdcQryStrikeOffsetField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 输入批量报单操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInputBatchOrderActionField
{
    public CThostFtdcInputBatchOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 报单操作引用
    /// </summary>
    public int OrderActionRef;
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 批量报单操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcBatchOrderActionField
{
    public CThostFtdcBatchOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 报单操作引用
    /// </summary>
    public int OrderActionRef;
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDate = new byte[9];
    /// <summary>
    /// 操作日期
    /// </summary>
    public string ActionDate
    {
        get{ return GBKConvert.Instance.GetString(_ActionDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionTime = new byte[9];
    /// <summary>
    /// 操作时间
    /// </summary>
    public string ActionTime
    {
        get{ return GBKConvert.Instance.GetString(_ActionTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ActionLocalID = new byte[13];
    /// <summary>
    /// 操作本地编号
    /// </summary>
    public string ActionLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ActionLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOrderActionStatusType OrderActionStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StatusMsg = new byte[81];
    /// <summary>
    /// 状态信息
    /// </summary>
    public string StatusMsg
    {
        get{ return GBKConvert.Instance.GetString(_StatusMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _StatusMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 交易所批量报单操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeBatchOrderActionField
{
    public CThostFtdcExchangeBatchOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDate = new byte[9];
    /// <summary>
    /// 操作日期
    /// </summary>
    public string ActionDate
    {
        get{ return GBKConvert.Instance.GetString(_ActionDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionTime = new byte[9];
    /// <summary>
    /// 操作时间
    /// </summary>
    public string ActionTime
    {
        get{ return GBKConvert.Instance.GetString(_ActionTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ActionLocalID = new byte[13];
    /// <summary>
    /// 操作本地编号
    /// </summary>
    public string ActionLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ActionLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOrderActionStatusType OrderActionStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 查询批量报单操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryBatchOrderActionField
{
    public CThostFtdcQryBatchOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
}
/// <summary>
/// 组合合约安全系数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcCombInstrumentGuardField
{
    public CThostFtdcCombInstrumentGuardField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    /// <summary>
    /// 
    /// </summary>
    public double GuarantRatio;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 组合合约安全系数查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryCombInstrumentGuardField
{
    public CThostFtdcQryCombInstrumentGuardField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 输入的申请组合
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInputCombActionField
{
    public CThostFtdcInputCombActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _CombActionRef = new byte[13];
    /// <summary>
    /// 组合引用
    /// </summary>
    public string CombActionRef
    {
        get{ return GBKConvert.Instance.GetString(_CombActionRef); }
        set{ GBKConvert.Instance.GetBytes(value, _CombActionRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcDirectionType Direction;
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    public TThostFtdcCombDirectionType CombDirection;
    public TThostFtdcHedgeFlagType HedgeFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 申请组合
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcCombActionField
{
    public CThostFtdcCombActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _CombActionRef = new byte[13];
    /// <summary>
    /// 组合引用
    /// </summary>
    public string CombActionRef
    {
        get{ return GBKConvert.Instance.GetString(_CombActionRef); }
        set{ GBKConvert.Instance.GetBytes(value, _CombActionRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcDirectionType Direction;
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    public TThostFtdcCombDirectionType CombDirection;
    public TThostFtdcHedgeFlagType HedgeFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ActionLocalID = new byte[13];
    /// <summary>
    /// 本地申请组合编号
    /// </summary>
    public string ActionLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ActionLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcOrderActionStatusType ActionStatus;
    /// <summary>
    /// 报单提示序号
    /// </summary>
    public int NotifySequence;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    /// <summary>
    /// 序号
    /// </summary>
    public int SequenceNo;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UserProductInfo = new byte[11];
    /// <summary>
    /// 用户端产品信息
    /// </summary>
    public string UserProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StatusMsg = new byte[81];
    /// <summary>
    /// 状态信息
    /// </summary>
    public string StatusMsg
    {
        get{ return GBKConvert.Instance.GetString(_StatusMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _StatusMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve3 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve3
    {
        get{ return GBKConvert.Instance.GetString(_reserve3); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve3); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ComTradeID = new byte[21];
    /// <summary>
    /// 组合编号
    /// </summary>
    public string ComTradeID
    {
        get{ return GBKConvert.Instance.GetString(_ComTradeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ComTradeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 申请组合查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryCombActionField
{
    public CThostFtdcQryCombActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 交易所申请组合信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeCombActionField
{
    public CThostFtdcExchangeCombActionField() {}
    public TThostFtdcDirectionType Direction;
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    public TThostFtdcCombDirectionType CombDirection;
    public TThostFtdcHedgeFlagType HedgeFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ActionLocalID = new byte[13];
    /// <summary>
    /// 本地申请组合编号
    /// </summary>
    public string ActionLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ActionLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcOrderActionStatusType ActionStatus;
    /// <summary>
    /// 报单提示序号
    /// </summary>
    public int NotifySequence;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    /// <summary>
    /// 序号
    /// </summary>
    public int SequenceNo;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ComTradeID = new byte[21];
    /// <summary>
    /// 组合编号
    /// </summary>
    public string ComTradeID
    {
        get{ return GBKConvert.Instance.GetString(_ComTradeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ComTradeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 交易所申请组合查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryExchangeCombActionField
{
    public CThostFtdcQryExchangeCombActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
}
/// <summary>
/// 产品报价汇率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcProductExchRateField
{
    public CThostFtdcProductExchRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _QuoteCurrencyID = new byte[4];
    /// <summary>
    /// 报价币种类型
    /// </summary>
    public string QuoteCurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_QuoteCurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _QuoteCurrencyID); }
    }
    /// <summary>
    /// 汇率
    /// </summary>
    public double ExchangeRate;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductID = new byte[81];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
}
/// <summary>
/// 产品报价汇率查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryProductExchRateField
{
    public CThostFtdcQryProductExchRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductID = new byte[81];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
}
/// <summary>
/// 查询询价价差参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryForQuoteParamField
{
    public CThostFtdcQryForQuoteParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 询价价差参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcForQuoteParamField
{
    public CThostFtdcForQuoteParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 最新价
    /// </summary>
    public double LastPrice;
    /// <summary>
    /// 价差
    /// </summary>
    public double PriceInterval;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 当前做市商期权合约手续费的详细内容
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMMOptionInstrCommRateField
{
    public CThostFtdcMMOptionInstrCommRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 开仓手续费率
    /// </summary>
    public double OpenRatioByMoney;
    /// <summary>
    /// 开仓手续费
    /// </summary>
    public double OpenRatioByVolume;
    /// <summary>
    /// 平仓手续费率
    /// </summary>
    public double CloseRatioByMoney;
    /// <summary>
    /// 平仓手续费
    /// </summary>
    public double CloseRatioByVolume;
    /// <summary>
    /// 平今手续费率
    /// </summary>
    public double CloseTodayRatioByMoney;
    /// <summary>
    /// 平今手续费
    /// </summary>
    public double CloseTodayRatioByVolume;
    /// <summary>
    /// 执行手续费率
    /// </summary>
    public double StrikeRatioByMoney;
    /// <summary>
    /// 执行手续费
    /// </summary>
    public double StrikeRatioByVolume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 做市商期权手续费率查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryMMOptionInstrCommRateField
{
    public CThostFtdcQryMMOptionInstrCommRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 做市商合约手续费率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMMInstrumentCommissionRateField
{
    public CThostFtdcMMInstrumentCommissionRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 开仓手续费率
    /// </summary>
    public double OpenRatioByMoney;
    /// <summary>
    /// 开仓手续费
    /// </summary>
    public double OpenRatioByVolume;
    /// <summary>
    /// 平仓手续费率
    /// </summary>
    public double CloseRatioByMoney;
    /// <summary>
    /// 平仓手续费
    /// </summary>
    public double CloseRatioByVolume;
    /// <summary>
    /// 平今手续费率
    /// </summary>
    public double CloseTodayRatioByMoney;
    /// <summary>
    /// 平今手续费
    /// </summary>
    public double CloseTodayRatioByVolume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询做市商合约手续费率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryMMInstrumentCommissionRateField
{
    public CThostFtdcQryMMInstrumentCommissionRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 当前报单手续费的详细内容
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInstrumentOrderCommRateField
{
    public CThostFtdcInstrumentOrderCommRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 报单手续费
    /// </summary>
    public double OrderCommByVolume;
    /// <summary>
    /// 撤单手续费
    /// </summary>
    public double OrderActionCommByVolume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    /// <summary>
    /// 报单手续费
    /// </summary>
    public double OrderCommByTrade;
    /// <summary>
    /// 撤单手续费
    /// </summary>
    public double OrderActionCommByTrade;
}
/// <summary>
/// 报单手续费率查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInstrumentOrderCommRateField
{
    public CThostFtdcQryInstrumentOrderCommRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 交易参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTradeParamField
{
    public CThostFtdcTradeParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    public TThostFtdcTradeParamIDType TradeParamID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=256)]
    public readonly byte[] _TradeParamValue = new byte[256];
    /// <summary>
    /// 参数代码值
    /// </summary>
    public string TradeParamValue
    {
        get{ return GBKConvert.Instance.GetString(_TradeParamValue); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeParamValue); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _Memo = new byte[161];
    /// <summary>
    /// 备注
    /// </summary>
    public string Memo
    {
        get{ return GBKConvert.Instance.GetString(_Memo); }
        set{ GBKConvert.Instance.GetBytes(value, _Memo); }
    }
}
/// <summary>
/// 合约保证金率调整
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInstrumentMarginRateULField
{
    public CThostFtdcInstrumentMarginRateULField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 多头保证金率
    /// </summary>
    public double LongMarginRatioByMoney;
    /// <summary>
    /// 多头保证金费
    /// </summary>
    public double LongMarginRatioByVolume;
    /// <summary>
    /// 空头保证金率
    /// </summary>
    public double ShortMarginRatioByMoney;
    /// <summary>
    /// 空头保证金费
    /// </summary>
    public double ShortMarginRatioByVolume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 期货持仓限制参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcFutureLimitPosiParamField
{
    public CThostFtdcFutureLimitPosiParamField() {}
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    /// <summary>
    /// 当日投机开仓数量限制
    /// </summary>
    public int SpecOpenVolume;
    /// <summary>
    /// 当日套利开仓数量限制
    /// </summary>
    public int ArbiOpenVolume;
    /// <summary>
    /// 当日投机+套利开仓数量限制
    /// </summary>
    public int OpenVolume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductID = new byte[81];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
}
/// <summary>
/// 禁止登录IP
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcLoginForbiddenIPField
{
    public CThostFtdcLoginForbiddenIPField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// IP列表
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcIPListField
{
    public CThostFtdcIPListField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    /// <summary>
    /// 是否白名单
    /// </summary>
    public int IsWhite;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 输入的期权自对冲
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInputOptionSelfCloseField
{
    public CThostFtdcInputOptionSelfCloseField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OptionSelfCloseRef = new byte[13];
    /// <summary>
    /// 期权自对冲引用
    /// </summary>
    public string OptionSelfCloseRef
    {
        get{ return GBKConvert.Instance.GetString(_OptionSelfCloseRef); }
        set{ GBKConvert.Instance.GetBytes(value, _OptionSelfCloseRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    public TThostFtdcOptSelfCloseFlagType OptSelfCloseFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 资金账号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 交易编码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 输入期权自对冲操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInputOptionSelfCloseActionField
{
    public CThostFtdcInputOptionSelfCloseActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 期权自对冲操作引用
    /// </summary>
    public int OptionSelfCloseActionRef;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OptionSelfCloseRef = new byte[13];
    /// <summary>
    /// 期权自对冲引用
    /// </summary>
    public string OptionSelfCloseRef
    {
        get{ return GBKConvert.Instance.GetString(_OptionSelfCloseRef); }
        set{ GBKConvert.Instance.GetBytes(value, _OptionSelfCloseRef); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OptionSelfCloseSysID = new byte[21];
    /// <summary>
    /// 期权自对冲操作编号
    /// </summary>
    public string OptionSelfCloseSysID
    {
        get{ return GBKConvert.Instance.GetString(_OptionSelfCloseSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OptionSelfCloseSysID); }
    }
    public TThostFtdcActionFlagType ActionFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 期权自对冲
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcOptionSelfCloseField
{
    public CThostFtdcOptionSelfCloseField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OptionSelfCloseRef = new byte[13];
    /// <summary>
    /// 期权自对冲引用
    /// </summary>
    public string OptionSelfCloseRef
    {
        get{ return GBKConvert.Instance.GetString(_OptionSelfCloseRef); }
        set{ GBKConvert.Instance.GetBytes(value, _OptionSelfCloseRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    public TThostFtdcOptSelfCloseFlagType OptSelfCloseFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OptionSelfCloseLocalID = new byte[13];
    /// <summary>
    /// 本地期权自对冲编号
    /// </summary>
    public string OptionSelfCloseLocalID
    {
        get{ return GBKConvert.Instance.GetString(_OptionSelfCloseLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _OptionSelfCloseLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcOrderSubmitStatusType OrderSubmitStatus;
    /// <summary>
    /// 报单提示序号
    /// </summary>
    public int NotifySequence;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OptionSelfCloseSysID = new byte[21];
    /// <summary>
    /// 期权自对冲编号
    /// </summary>
    public string OptionSelfCloseSysID
    {
        get{ return GBKConvert.Instance.GetString(_OptionSelfCloseSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OptionSelfCloseSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertDate = new byte[9];
    /// <summary>
    /// 报单日期
    /// </summary>
    public string InsertDate
    {
        get{ return GBKConvert.Instance.GetString(_InsertDate); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTime = new byte[9];
    /// <summary>
    /// 插入时间
    /// </summary>
    public string InsertTime
    {
        get{ return GBKConvert.Instance.GetString(_InsertTime); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CancelTime = new byte[9];
    /// <summary>
    /// 撤销时间
    /// </summary>
    public string CancelTime
    {
        get{ return GBKConvert.Instance.GetString(_CancelTime); }
        set{ GBKConvert.Instance.GetBytes(value, _CancelTime); }
    }
    public TThostFtdcExecResultType ExecResult;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClearingPartID = new byte[11];
    /// <summary>
    /// 结算会员编号
    /// </summary>
    public string ClearingPartID
    {
        get{ return GBKConvert.Instance.GetString(_ClearingPartID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClearingPartID); }
    }
    /// <summary>
    /// 序号
    /// </summary>
    public int SequenceNo;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UserProductInfo = new byte[11];
    /// <summary>
    /// 用户端产品信息
    /// </summary>
    public string UserProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StatusMsg = new byte[81];
    /// <summary>
    /// 状态信息
    /// </summary>
    public string StatusMsg
    {
        get{ return GBKConvert.Instance.GetString(_StatusMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _StatusMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _ActiveUserID = new byte[16];
    /// <summary>
    /// 操作用户代码
    /// </summary>
    public string ActiveUserID
    {
        get{ return GBKConvert.Instance.GetString(_ActiveUserID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActiveUserID); }
    }
    /// <summary>
    /// 经纪公司报单编号
    /// </summary>
    public int BrokerOptionSelfCloseSeq;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 资金账号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve3 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve3
    {
        get{ return GBKConvert.Instance.GetString(_reserve3); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve3); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 期权自对冲操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcOptionSelfCloseActionField
{
    public CThostFtdcOptionSelfCloseActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 期权自对冲操作引用
    /// </summary>
    public int OptionSelfCloseActionRef;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OptionSelfCloseRef = new byte[13];
    /// <summary>
    /// 期权自对冲引用
    /// </summary>
    public string OptionSelfCloseRef
    {
        get{ return GBKConvert.Instance.GetString(_OptionSelfCloseRef); }
        set{ GBKConvert.Instance.GetBytes(value, _OptionSelfCloseRef); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OptionSelfCloseSysID = new byte[21];
    /// <summary>
    /// 期权自对冲操作编号
    /// </summary>
    public string OptionSelfCloseSysID
    {
        get{ return GBKConvert.Instance.GetString(_OptionSelfCloseSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OptionSelfCloseSysID); }
    }
    public TThostFtdcActionFlagType ActionFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDate = new byte[9];
    /// <summary>
    /// 操作日期
    /// </summary>
    public string ActionDate
    {
        get{ return GBKConvert.Instance.GetString(_ActionDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionTime = new byte[9];
    /// <summary>
    /// 操作时间
    /// </summary>
    public string ActionTime
    {
        get{ return GBKConvert.Instance.GetString(_ActionTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OptionSelfCloseLocalID = new byte[13];
    /// <summary>
    /// 本地期权自对冲编号
    /// </summary>
    public string OptionSelfCloseLocalID
    {
        get{ return GBKConvert.Instance.GetString(_OptionSelfCloseLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _OptionSelfCloseLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ActionLocalID = new byte[13];
    /// <summary>
    /// 操作本地编号
    /// </summary>
    public string ActionLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ActionLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOrderActionStatusType OrderActionStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StatusMsg = new byte[81];
    /// <summary>
    /// 状态信息
    /// </summary>
    public string StatusMsg
    {
        get{ return GBKConvert.Instance.GetString(_StatusMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _StatusMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 期权自对冲查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryOptionSelfCloseField
{
    public CThostFtdcQryOptionSelfCloseField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OptionSelfCloseSysID = new byte[21];
    /// <summary>
    /// 期权自对冲编号
    /// </summary>
    public string OptionSelfCloseSysID
    {
        get{ return GBKConvert.Instance.GetString(_OptionSelfCloseSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OptionSelfCloseSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTimeStart = new byte[9];
    /// <summary>
    /// 开始时间
    /// </summary>
    public string InsertTimeStart
    {
        get{ return GBKConvert.Instance.GetString(_InsertTimeStart); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTimeStart); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTimeEnd = new byte[9];
    /// <summary>
    /// 结束时间
    /// </summary>
    public string InsertTimeEnd
    {
        get{ return GBKConvert.Instance.GetString(_InsertTimeEnd); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTimeEnd); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 交易所期权自对冲信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeOptionSelfCloseField
{
    public CThostFtdcExchangeOptionSelfCloseField() {}
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    public TThostFtdcOptSelfCloseFlagType OptSelfCloseFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OptionSelfCloseLocalID = new byte[13];
    /// <summary>
    /// 本地期权自对冲编号
    /// </summary>
    public string OptionSelfCloseLocalID
    {
        get{ return GBKConvert.Instance.GetString(_OptionSelfCloseLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _OptionSelfCloseLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcOrderSubmitStatusType OrderSubmitStatus;
    /// <summary>
    /// 报单提示序号
    /// </summary>
    public int NotifySequence;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OptionSelfCloseSysID = new byte[21];
    /// <summary>
    /// 期权自对冲编号
    /// </summary>
    public string OptionSelfCloseSysID
    {
        get{ return GBKConvert.Instance.GetString(_OptionSelfCloseSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OptionSelfCloseSysID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertDate = new byte[9];
    /// <summary>
    /// 报单日期
    /// </summary>
    public string InsertDate
    {
        get{ return GBKConvert.Instance.GetString(_InsertDate); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTime = new byte[9];
    /// <summary>
    /// 插入时间
    /// </summary>
    public string InsertTime
    {
        get{ return GBKConvert.Instance.GetString(_InsertTime); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CancelTime = new byte[9];
    /// <summary>
    /// 撤销时间
    /// </summary>
    public string CancelTime
    {
        get{ return GBKConvert.Instance.GetString(_CancelTime); }
        set{ GBKConvert.Instance.GetBytes(value, _CancelTime); }
    }
    public TThostFtdcExecResultType ExecResult;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClearingPartID = new byte[11];
    /// <summary>
    /// 结算会员编号
    /// </summary>
    public string ClearingPartID
    {
        get{ return GBKConvert.Instance.GetString(_ClearingPartID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClearingPartID); }
    }
    /// <summary>
    /// 序号
    /// </summary>
    public int SequenceNo;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 期权自对冲操作查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryOptionSelfCloseActionField
{
    public CThostFtdcQryOptionSelfCloseActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
}
/// <summary>
/// 交易所期权自对冲操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeOptionSelfCloseActionField
{
    public CThostFtdcExchangeOptionSelfCloseActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OptionSelfCloseSysID = new byte[21];
    /// <summary>
    /// 期权自对冲操作编号
    /// </summary>
    public string OptionSelfCloseSysID
    {
        get{ return GBKConvert.Instance.GetString(_OptionSelfCloseSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OptionSelfCloseSysID); }
    }
    public TThostFtdcActionFlagType ActionFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDate = new byte[9];
    /// <summary>
    /// 操作日期
    /// </summary>
    public string ActionDate
    {
        get{ return GBKConvert.Instance.GetString(_ActionDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionTime = new byte[9];
    /// <summary>
    /// 操作时间
    /// </summary>
    public string ActionTime
    {
        get{ return GBKConvert.Instance.GetString(_ActionTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OptionSelfCloseLocalID = new byte[13];
    /// <summary>
    /// 本地期权自对冲编号
    /// </summary>
    public string OptionSelfCloseLocalID
    {
        get{ return GBKConvert.Instance.GetString(_OptionSelfCloseLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _OptionSelfCloseLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ActionLocalID = new byte[13];
    /// <summary>
    /// 操作本地编号
    /// </summary>
    public string ActionLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ActionLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOrderActionStatusType OrderActionStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    public TThostFtdcOptSelfCloseFlagType OptSelfCloseFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
}
/// <summary>
/// 延时换汇同步
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDelaySwapField
{
    public CThostFtdcSyncDelaySwapField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=15)]
    public readonly byte[] _DelaySwapSeqNo = new byte[15];
    /// <summary>
    /// 换汇流水号
    /// </summary>
    public string DelaySwapSeqNo
    {
        get{ return GBKConvert.Instance.GetString(_DelaySwapSeqNo); }
        set{ GBKConvert.Instance.GetBytes(value, _DelaySwapSeqNo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _FromCurrencyID = new byte[4];
    /// <summary>
    /// 源币种
    /// </summary>
    public string FromCurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_FromCurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _FromCurrencyID); }
    }
    /// <summary>
    /// 源金额
    /// </summary>
    public double FromAmount;
    /// <summary>
    /// 源换汇冻结金额(可用冻结)
    /// </summary>
    public double FromFrozenSwap;
    /// <summary>
    /// 源剩余换汇额度(可提冻结)
    /// </summary>
    public double FromRemainSwap;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _ToCurrencyID = new byte[4];
    /// <summary>
    /// 目标币种
    /// </summary>
    public string ToCurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_ToCurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _ToCurrencyID); }
    }
    /// <summary>
    /// 目标金额
    /// </summary>
    public double ToAmount;
    /// <summary>
    /// 是否手工换汇
    /// </summary>
    public int IsManualSwap;
    /// <summary>
    /// 是否将所有外币的剩余换汇额度设置为0
    /// </summary>
    public int IsAllRemainSetZero;
}
/// <summary>
/// 查询延时换汇同步
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySyncDelaySwapField
{
    public CThostFtdcQrySyncDelaySwapField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=15)]
    public readonly byte[] _DelaySwapSeqNo = new byte[15];
    /// <summary>
    /// 延时换汇流水号
    /// </summary>
    public string DelaySwapSeqNo
    {
        get{ return GBKConvert.Instance.GetString(_DelaySwapSeqNo); }
        set{ GBKConvert.Instance.GetBytes(value, _DelaySwapSeqNo); }
    }
}
/// <summary>
/// 投资单元
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestUnitField
{
    public CThostFtdcInvestUnitField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InvestorUnitName = new byte[81];
    /// <summary>
    /// 投资者单元名称
    /// </summary>
    public string InvestorUnitName
    {
        get{ return GBKConvert.Instance.GetString(_InvestorUnitName); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorUnitName); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorGroupID = new byte[13];
    /// <summary>
    /// 投资者分组代码
    /// </summary>
    public string InvestorGroupID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorGroupID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _CommModelID = new byte[13];
    /// <summary>
    /// 手续费率模板代码
    /// </summary>
    public string CommModelID
    {
        get{ return GBKConvert.Instance.GetString(_CommModelID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommModelID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _MarginModelID = new byte[13];
    /// <summary>
    /// 保证金率模板代码
    /// </summary>
    public string MarginModelID
    {
        get{ return GBKConvert.Instance.GetString(_MarginModelID); }
        set{ GBKConvert.Instance.GetBytes(value, _MarginModelID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 资金账号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
}
/// <summary>
/// 查询投资单元
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInvestUnitField
{
    public CThostFtdcQryInvestUnitField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
}
/// <summary>
/// 二级代理商资金校验模式
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSecAgentCheckModeField
{
    public CThostFtdcSecAgentCheckModeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BrokerSecAgentID = new byte[13];
    /// <summary>
    /// 境外中介机构资金帐号
    /// </summary>
    public string BrokerSecAgentID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerSecAgentID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerSecAgentID); }
    }
    /// <summary>
    /// 是否需要校验自己的资金账户
    /// </summary>
    public int CheckSelfAccount;
}
/// <summary>
/// 二级代理商信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSecAgentTradeInfoField
{
    public CThostFtdcSecAgentTradeInfoField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BrokerSecAgentID = new byte[13];
    /// <summary>
    /// 境外中介机构资金帐号
    /// </summary>
    public string BrokerSecAgentID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerSecAgentID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerSecAgentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 二级代理商姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 市场行情
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMarketDataField
{
    public CThostFtdcMarketDataField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    /// <summary>
    /// 最新价
    /// </summary>
    public double LastPrice;
    /// <summary>
    /// 上次结算价
    /// </summary>
    public double PreSettlementPrice;
    /// <summary>
    /// 昨收盘
    /// </summary>
    public double PreClosePrice;
    /// <summary>
    /// 昨持仓量
    /// </summary>
    public double PreOpenInterest;
    /// <summary>
    /// 今开盘
    /// </summary>
    public double OpenPrice;
    /// <summary>
    /// 最高价
    /// </summary>
    public double HighestPrice;
    /// <summary>
    /// 最低价
    /// </summary>
    public double LowestPrice;
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    /// <summary>
    /// 成交金额
    /// </summary>
    public double Turnover;
    /// <summary>
    /// 持仓量
    /// </summary>
    public double OpenInterest;
    /// <summary>
    /// 今收盘
    /// </summary>
    public double ClosePrice;
    /// <summary>
    /// 本次结算价
    /// </summary>
    public double SettlementPrice;
    /// <summary>
    /// 涨停板价
    /// </summary>
    public double UpperLimitPrice;
    /// <summary>
    /// 跌停板价
    /// </summary>
    public double LowerLimitPrice;
    /// <summary>
    /// 昨虚实度
    /// </summary>
    public double PreDelta;
    /// <summary>
    /// 今虚实度
    /// </summary>
    public double CurrDelta;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _UpdateTime = new byte[9];
    /// <summary>
    /// 最后修改时间
    /// </summary>
    public string UpdateTime
    {
        get{ return GBKConvert.Instance.GetString(_UpdateTime); }
        set{ GBKConvert.Instance.GetBytes(value, _UpdateTime); }
    }
    /// <summary>
    /// 最后修改毫秒
    /// </summary>
    public int UpdateMillisec;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDay = new byte[9];
    /// <summary>
    /// 业务日期
    /// </summary>
    public string ActionDay
    {
        get{ return GBKConvert.Instance.GetString(_ActionDay); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
}
/// <summary>
/// 行情基础属性
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMarketDataBaseField
{
    public CThostFtdcMarketDataBaseField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 上次结算价
    /// </summary>
    public double PreSettlementPrice;
    /// <summary>
    /// 昨收盘
    /// </summary>
    public double PreClosePrice;
    /// <summary>
    /// 昨持仓量
    /// </summary>
    public double PreOpenInterest;
    /// <summary>
    /// 昨虚实度
    /// </summary>
    public double PreDelta;
}
/// <summary>
/// 行情静态属性
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMarketDataStaticField
{
    public CThostFtdcMarketDataStaticField() {}
    /// <summary>
    /// 今开盘
    /// </summary>
    public double OpenPrice;
    /// <summary>
    /// 最高价
    /// </summary>
    public double HighestPrice;
    /// <summary>
    /// 最低价
    /// </summary>
    public double LowestPrice;
    /// <summary>
    /// 今收盘
    /// </summary>
    public double ClosePrice;
    /// <summary>
    /// 涨停板价
    /// </summary>
    public double UpperLimitPrice;
    /// <summary>
    /// 跌停板价
    /// </summary>
    public double LowerLimitPrice;
    /// <summary>
    /// 本次结算价
    /// </summary>
    public double SettlementPrice;
    /// <summary>
    /// 今虚实度
    /// </summary>
    public double CurrDelta;
}
/// <summary>
/// 行情最新成交属性
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMarketDataLastMatchField
{
    public CThostFtdcMarketDataLastMatchField() {}
    /// <summary>
    /// 最新价
    /// </summary>
    public double LastPrice;
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    /// <summary>
    /// 成交金额
    /// </summary>
    public double Turnover;
    /// <summary>
    /// 持仓量
    /// </summary>
    public double OpenInterest;
}
/// <summary>
/// 行情最优价属性
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMarketDataBestPriceField
{
    public CThostFtdcMarketDataBestPriceField() {}
    /// <summary>
    /// 申买价一
    /// </summary>
    public double BidPrice1;
    /// <summary>
    /// 申买量一
    /// </summary>
    public int BidVolume1;
    /// <summary>
    /// 申卖价一
    /// </summary>
    public double AskPrice1;
    /// <summary>
    /// 申卖量一
    /// </summary>
    public int AskVolume1;
}
/// <summary>
/// 行情申买二、三属性
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMarketDataBid23Field
{
    public CThostFtdcMarketDataBid23Field() {}
    /// <summary>
    /// 申买价二
    /// </summary>
    public double BidPrice2;
    /// <summary>
    /// 申买量二
    /// </summary>
    public int BidVolume2;
    /// <summary>
    /// 申买价三
    /// </summary>
    public double BidPrice3;
    /// <summary>
    /// 申买量三
    /// </summary>
    public int BidVolume3;
}
/// <summary>
/// 行情申卖二、三属性
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMarketDataAsk23Field
{
    public CThostFtdcMarketDataAsk23Field() {}
    /// <summary>
    /// 申卖价二
    /// </summary>
    public double AskPrice2;
    /// <summary>
    /// 申卖量二
    /// </summary>
    public int AskVolume2;
    /// <summary>
    /// 申卖价三
    /// </summary>
    public double AskPrice3;
    /// <summary>
    /// 申卖量三
    /// </summary>
    public int AskVolume3;
}
/// <summary>
/// 行情申买四、五属性
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMarketDataBid45Field
{
    public CThostFtdcMarketDataBid45Field() {}
    /// <summary>
    /// 申买价四
    /// </summary>
    public double BidPrice4;
    /// <summary>
    /// 申买量四
    /// </summary>
    public int BidVolume4;
    /// <summary>
    /// 申买价五
    /// </summary>
    public double BidPrice5;
    /// <summary>
    /// 申买量五
    /// </summary>
    public int BidVolume5;
}
/// <summary>
/// 行情申卖四、五属性
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMarketDataAsk45Field
{
    public CThostFtdcMarketDataAsk45Field() {}
    /// <summary>
    /// 申卖价四
    /// </summary>
    public double AskPrice4;
    /// <summary>
    /// 申卖量四
    /// </summary>
    public int AskVolume4;
    /// <summary>
    /// 申卖价五
    /// </summary>
    public double AskPrice5;
    /// <summary>
    /// 申卖量五
    /// </summary>
    public int AskVolume5;
}
/// <summary>
/// 行情更新时间属性
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMarketDataUpdateTimeField
{
    public CThostFtdcMarketDataUpdateTimeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _UpdateTime = new byte[9];
    /// <summary>
    /// 最后修改时间
    /// </summary>
    public string UpdateTime
    {
        get{ return GBKConvert.Instance.GetString(_UpdateTime); }
        set{ GBKConvert.Instance.GetBytes(value, _UpdateTime); }
    }
    /// <summary>
    /// 最后修改毫秒
    /// </summary>
    public int UpdateMillisec;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDay = new byte[9];
    /// <summary>
    /// 业务日期
    /// </summary>
    public string ActionDay
    {
        get{ return GBKConvert.Instance.GetString(_ActionDay); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 行情上下带价
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMarketDataBandingPriceField
{
    public CThostFtdcMarketDataBandingPriceField() {}
    /// <summary>
    /// 上带价
    /// </summary>
    public double BandingUpperPrice;
    /// <summary>
    /// 下带价
    /// </summary>
    public double BandingLowerPrice;
}
/// <summary>
/// 行情交易所代码属性
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMarketDataExchangeField
{
    public CThostFtdcMarketDataExchangeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
}
/// <summary>
/// 指定的合约
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSpecificInstrumentField
{
    public CThostFtdcSpecificInstrumentField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 合约状态
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInstrumentStatusField
{
    public CThostFtdcInstrumentStatusField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _SettlementGroupID = new byte[9];
    /// <summary>
    /// 结算组代码
    /// </summary>
    public string SettlementGroupID
    {
        get{ return GBKConvert.Instance.GetString(_SettlementGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _SettlementGroupID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    public TThostFtdcInstrumentStatusType InstrumentStatus;
    /// <summary>
    /// 交易阶段编号
    /// </summary>
    public int TradingSegmentSN;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _EnterTime = new byte[9];
    /// <summary>
    /// 进入本状态时间
    /// </summary>
    public string EnterTime
    {
        get{ return GBKConvert.Instance.GetString(_EnterTime); }
        set{ GBKConvert.Instance.GetBytes(value, _EnterTime); }
    }
    public TThostFtdcInstStatusEnterReasonType EnterReason;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询合约状态
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInstrumentStatusField
{
    public CThostFtdcQryInstrumentStatusField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
}
/// <summary>
/// 投资者账户
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestorAccountField
{
    public CThostFtdcInvestorAccountField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
}
/// <summary>
/// 浮动盈亏算法
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcPositionProfitAlgorithmField
{
    public CThostFtdcPositionProfitAlgorithmField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    public TThostFtdcAlgorithmType Algorithm;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _Memo = new byte[161];
    /// <summary>
    /// 备注
    /// </summary>
    public string Memo
    {
        get{ return GBKConvert.Instance.GetString(_Memo); }
        set{ GBKConvert.Instance.GetBytes(value, _Memo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
}
/// <summary>
/// 会员资金折扣
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcDiscountField
{
    public CThostFtdcDiscountField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 资金折扣比例
    /// </summary>
    public double Discount;
}
/// <summary>
/// 查询转帐银行
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryTransferBankField
{
    public CThostFtdcQryTransferBankField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBrchID = new byte[5];
    /// <summary>
    /// 银行分中心代码
    /// </summary>
    public string BankBrchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBrchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBrchID); }
    }
}
/// <summary>
/// 转帐银行
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTransferBankField
{
    public CThostFtdcTransferBankField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBrchID = new byte[5];
    /// <summary>
    /// 银行分中心代码
    /// </summary>
    public string BankBrchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBrchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBrchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=101)]
    public readonly byte[] _BankName = new byte[101];
    /// <summary>
    /// 银行名称
    /// </summary>
    public string BankName
    {
        get{ return GBKConvert.Instance.GetString(_BankName); }
        set{ GBKConvert.Instance.GetBytes(value, _BankName); }
    }
    /// <summary>
    /// 是否活跃
    /// </summary>
    public int IsActive;
}
/// <summary>
/// 查询投资者持仓明细
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInvestorPositionDetailField
{
    public CThostFtdcQryInvestorPositionDetailField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 投资者持仓明细
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestorPositionDetailField
{
    public CThostFtdcInvestorPositionDetailField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    public TThostFtdcDirectionType Direction;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _OpenDate = new byte[9];
    /// <summary>
    /// 开仓日期
    /// </summary>
    public string OpenDate
    {
        get{ return GBKConvert.Instance.GetString(_OpenDate); }
        set{ GBKConvert.Instance.GetBytes(value, _OpenDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TradeID = new byte[21];
    /// <summary>
    /// 成交编号
    /// </summary>
    public string TradeID
    {
        get{ return GBKConvert.Instance.GetString(_TradeID); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeID); }
    }
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    /// <summary>
    /// 开仓价
    /// </summary>
    public double OpenPrice;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    public TThostFtdcTradeTypeType TradeType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 逐日盯市平仓盈亏
    /// </summary>
    public double CloseProfitByDate;
    /// <summary>
    /// 逐笔对冲平仓盈亏
    /// </summary>
    public double CloseProfitByTrade;
    /// <summary>
    /// 逐日盯市持仓盈亏
    /// </summary>
    public double PositionProfitByDate;
    /// <summary>
    /// 逐笔对冲持仓盈亏
    /// </summary>
    public double PositionProfitByTrade;
    /// <summary>
    /// 投资者保证金
    /// </summary>
    public double Margin;
    /// <summary>
    /// 交易所保证金
    /// </summary>
    public double ExchMargin;
    /// <summary>
    /// 保证金率
    /// </summary>
    public double MarginRateByMoney;
    /// <summary>
    /// 保证金率(按手数)
    /// </summary>
    public double MarginRateByVolume;
    /// <summary>
    /// 昨结算价
    /// </summary>
    public double LastSettlementPrice;
    /// <summary>
    /// 结算价
    /// </summary>
    public double SettlementPrice;
    /// <summary>
    /// 平仓量
    /// </summary>
    public int CloseVolume;
    /// <summary>
    /// 平仓金额
    /// </summary>
    public double CloseAmount;
    /// <summary>
    /// 先开先平剩余数量
    /// </summary>
    public int TimeFirstVolume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    public TThostFtdcSpecPosiTypeType SpecPosiType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _CombInstrumentID = new byte[81];
    /// <summary>
    /// 组合合约代码
    /// </summary>
    public string CombInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_CombInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombInstrumentID); }
    }
}
/// <summary>
/// 资金账户口令域
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTradingAccountPasswordField
{
    public CThostFtdcTradingAccountPasswordField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
}
/// <summary>
/// 交易所行情报盘机
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMDTraderOfferField
{
    public CThostFtdcMDTraderOfferField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderLocalID = new byte[13];
    /// <summary>
    /// 本地报单编号
    /// </summary>
    public string OrderLocalID
    {
        get{ return GBKConvert.Instance.GetString(_OrderLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderLocalID); }
    }
    public TThostFtdcTraderConnectStatusType TraderConnectStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ConnectRequestDate = new byte[9];
    /// <summary>
    /// 发出连接请求的日期
    /// </summary>
    public string ConnectRequestDate
    {
        get{ return GBKConvert.Instance.GetString(_ConnectRequestDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ConnectRequestDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ConnectRequestTime = new byte[9];
    /// <summary>
    /// 发出连接请求的时间
    /// </summary>
    public string ConnectRequestTime
    {
        get{ return GBKConvert.Instance.GetString(_ConnectRequestTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ConnectRequestTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _LastReportDate = new byte[9];
    /// <summary>
    /// 上次报告日期
    /// </summary>
    public string LastReportDate
    {
        get{ return GBKConvert.Instance.GetString(_LastReportDate); }
        set{ GBKConvert.Instance.GetBytes(value, _LastReportDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _LastReportTime = new byte[9];
    /// <summary>
    /// 上次报告时间
    /// </summary>
    public string LastReportTime
    {
        get{ return GBKConvert.Instance.GetString(_LastReportTime); }
        set{ GBKConvert.Instance.GetBytes(value, _LastReportTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ConnectDate = new byte[9];
    /// <summary>
    /// 完成连接日期
    /// </summary>
    public string ConnectDate
    {
        get{ return GBKConvert.Instance.GetString(_ConnectDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ConnectDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ConnectTime = new byte[9];
    /// <summary>
    /// 完成连接时间
    /// </summary>
    public string ConnectTime
    {
        get{ return GBKConvert.Instance.GetString(_ConnectTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ConnectTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _StartDate = new byte[9];
    /// <summary>
    /// 启动日期
    /// </summary>
    public string StartDate
    {
        get{ return GBKConvert.Instance.GetString(_StartDate); }
        set{ GBKConvert.Instance.GetBytes(value, _StartDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _StartTime = new byte[9];
    /// <summary>
    /// 启动时间
    /// </summary>
    public string StartTime
    {
        get{ return GBKConvert.Instance.GetString(_StartTime); }
        set{ GBKConvert.Instance.GetBytes(value, _StartTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MaxTradeID = new byte[21];
    /// <summary>
    /// 本席位最大成交编号
    /// </summary>
    public string MaxTradeID
    {
        get{ return GBKConvert.Instance.GetString(_MaxTradeID); }
        set{ GBKConvert.Instance.GetBytes(value, _MaxTradeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _MaxOrderMessageReference = new byte[7];
    /// <summary>
    /// 本席位最大报单备拷
    /// </summary>
    public string MaxOrderMessageReference
    {
        get{ return GBKConvert.Instance.GetString(_MaxOrderMessageReference); }
        set{ GBKConvert.Instance.GetBytes(value, _MaxOrderMessageReference); }
    }
    public TThostFtdcOrderCancelAlgType OrderCancelAlg;
}
/// <summary>
/// 查询行情报盘机
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryMDTraderOfferField
{
    public CThostFtdcQryMDTraderOfferField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
}
/// <summary>
/// 查询客户通知
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryNoticeField
{
    public CThostFtdcQryNoticeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
}
/// <summary>
/// 客户通知
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcNoticeField
{
    public CThostFtdcNoticeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=501)]
    public readonly byte[] _Content = new byte[501];
    /// <summary>
    /// 消息正文
    /// </summary>
    public string Content
    {
        get{ return GBKConvert.Instance.GetString(_Content); }
        set{ GBKConvert.Instance.GetBytes(value, _Content); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=2)]
    public readonly byte[] _SequenceLabel = new byte[2];
    /// <summary>
    /// 经纪公司通知内容序列号
    /// </summary>
    public string SequenceLabel
    {
        get{ return GBKConvert.Instance.GetString(_SequenceLabel); }
        set{ GBKConvert.Instance.GetBytes(value, _SequenceLabel); }
    }
}
/// <summary>
/// 用户权限
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcUserRightField
{
    public CThostFtdcUserRightField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcUserRightTypeType UserRightType;
    /// <summary>
    /// 是否禁止
    /// </summary>
    public int IsForbidden;
}
/// <summary>
/// 查询结算信息确认域
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySettlementInfoConfirmField
{
    public CThostFtdcQrySettlementInfoConfirmField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
}
/// <summary>
/// 装载结算信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcLoadSettlementInfoField
{
    public CThostFtdcLoadSettlementInfoField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
}
/// <summary>
/// 经纪公司可提资金算法表
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcBrokerWithdrawAlgorithmField
{
    public CThostFtdcBrokerWithdrawAlgorithmField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    public TThostFtdcAlgorithmType WithdrawAlgorithm;
    /// <summary>
    /// 资金使用率
    /// </summary>
    public double UsingRatio;
    public TThostFtdcIncludeCloseProfitType IncludeCloseProfit;
    public TThostFtdcAllWithoutTradeType AllWithoutTrade;
    public TThostFtdcIncludeCloseProfitType AvailIncludeCloseProfit;
    /// <summary>
    /// 是否启用用户事件
    /// </summary>
    public int IsBrokerUserEvent;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    /// <summary>
    /// 货币质押比率
    /// </summary>
    public double FundMortgageRatio;
    public TThostFtdcBalanceAlgorithmType BalanceAlgorithm;
}
/// <summary>
/// 资金账户口令变更域
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTradingAccountPasswordUpdateV1Field
{
    public CThostFtdcTradingAccountPasswordUpdateV1Field() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _OldPassword = new byte[41];
    /// <summary>
    /// 原来的口令
    /// </summary>
    public string OldPassword
    {
        get{ return GBKConvert.Instance.GetString(_OldPassword); }
        set{ GBKConvert.Instance.GetBytes(value, _OldPassword); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _NewPassword = new byte[41];
    /// <summary>
    /// 新的口令
    /// </summary>
    public string NewPassword
    {
        get{ return GBKConvert.Instance.GetString(_NewPassword); }
        set{ GBKConvert.Instance.GetBytes(value, _NewPassword); }
    }
}
/// <summary>
/// 资金账户口令变更域
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTradingAccountPasswordUpdateField
{
    public CThostFtdcTradingAccountPasswordUpdateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _OldPassword = new byte[41];
    /// <summary>
    /// 原来的口令
    /// </summary>
    public string OldPassword
    {
        get{ return GBKConvert.Instance.GetString(_OldPassword); }
        set{ GBKConvert.Instance.GetBytes(value, _OldPassword); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _NewPassword = new byte[41];
    /// <summary>
    /// 新的口令
    /// </summary>
    public string NewPassword
    {
        get{ return GBKConvert.Instance.GetString(_NewPassword); }
        set{ GBKConvert.Instance.GetBytes(value, _NewPassword); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
}
/// <summary>
/// 查询组合合约分腿
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryCombinationLegField
{
    public CThostFtdcQryCombinationLegField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    /// <summary>
    /// 单腿编号
    /// </summary>
    public int LegID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _CombInstrumentID = new byte[81];
    /// <summary>
    /// 组合合约代码
    /// </summary>
    public string CombInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_CombInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombInstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _LegInstrumentID = new byte[81];
    /// <summary>
    /// 单腿合约代码
    /// </summary>
    public string LegInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_LegInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _LegInstrumentID); }
    }
}
/// <summary>
/// 查询组合合约分腿
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySyncStatusField
{
    public CThostFtdcQrySyncStatusField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
}
/// <summary>
/// 组合交易合约的单腿
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcCombinationLegField
{
    public CThostFtdcCombinationLegField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    /// <summary>
    /// 单腿编号
    /// </summary>
    public int LegID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    public TThostFtdcDirectionType Direction;
    /// <summary>
    /// 单腿乘数
    /// </summary>
    public int LegMultiple;
    /// <summary>
    /// 派生层数
    /// </summary>
    public int ImplyLevel;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _CombInstrumentID = new byte[81];
    /// <summary>
    /// 组合合约代码
    /// </summary>
    public string CombInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_CombInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombInstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _LegInstrumentID = new byte[81];
    /// <summary>
    /// 单腿合约代码
    /// </summary>
    public string LegInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_LegInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _LegInstrumentID); }
    }
}
/// <summary>
/// 数据同步状态
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncStatusField
{
    public CThostFtdcSyncStatusField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    public TThostFtdcDataSyncStatusType DataSyncStatus;
}
/// <summary>
/// 查询联系人
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryLinkManField
{
    public CThostFtdcQryLinkManField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
}
/// <summary>
/// 联系人
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcLinkManField
{
    public CThostFtdcLinkManField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcPersonTypeType PersonType;
    public TThostFtdcIdCardTypeType IdentifiedCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _PersonName = new byte[81];
    /// <summary>
    /// 名称
    /// </summary>
    public string PersonName
    {
        get{ return GBKConvert.Instance.GetString(_PersonName); }
        set{ GBKConvert.Instance.GetBytes(value, _PersonName); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Telephone = new byte[41];
    /// <summary>
    /// 联系电话
    /// </summary>
    public string Telephone
    {
        get{ return GBKConvert.Instance.GetString(_Telephone); }
        set{ GBKConvert.Instance.GetBytes(value, _Telephone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=101)]
    public readonly byte[] _Address = new byte[101];
    /// <summary>
    /// 通讯地址
    /// </summary>
    public string Address
    {
        get{ return GBKConvert.Instance.GetString(_Address); }
        set{ GBKConvert.Instance.GetBytes(value, _Address); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _ZipCode = new byte[7];
    /// <summary>
    /// 邮政编码
    /// </summary>
    public string ZipCode
    {
        get{ return GBKConvert.Instance.GetString(_ZipCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ZipCode); }
    }
    /// <summary>
    /// 优先级
    /// </summary>
    public int Priority;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UOAZipCode = new byte[11];
    /// <summary>
    /// 开户邮政编码
    /// </summary>
    public string UOAZipCode
    {
        get{ return GBKConvert.Instance.GetString(_UOAZipCode); }
        set{ GBKConvert.Instance.GetBytes(value, _UOAZipCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=101)]
    public readonly byte[] _PersonFullName = new byte[101];
    /// <summary>
    /// 全称
    /// </summary>
    public string PersonFullName
    {
        get{ return GBKConvert.Instance.GetString(_PersonFullName); }
        set{ GBKConvert.Instance.GetBytes(value, _PersonFullName); }
    }
}
/// <summary>
/// 查询经纪公司用户事件
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryBrokerUserEventField
{
    public CThostFtdcQryBrokerUserEventField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcUserEventTypeType UserEventType;
}
/// <summary>
/// 查询经纪公司用户事件
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcBrokerUserEventField
{
    public CThostFtdcBrokerUserEventField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcUserEventTypeType UserEventType;
    /// <summary>
    /// 用户事件序号
    /// </summary>
    public int EventSequenceNo;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _EventDate = new byte[9];
    /// <summary>
    /// 事件发生日期
    /// </summary>
    public string EventDate
    {
        get{ return GBKConvert.Instance.GetString(_EventDate); }
        set{ GBKConvert.Instance.GetBytes(value, _EventDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _EventTime = new byte[9];
    /// <summary>
    /// 事件发生时间
    /// </summary>
    public string EventTime
    {
        get{ return GBKConvert.Instance.GetString(_EventTime); }
        set{ GBKConvert.Instance.GetBytes(value, _EventTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=1025)]
    public readonly byte[] _UserEventInfo = new byte[1025];
    /// <summary>
    /// 用户事件信息
    /// </summary>
    public string UserEventInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserEventInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserEventInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    /// <summary>
    /// 交易中心代码
    /// </summary>
    public int DRIdentityID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
}
/// <summary>
/// 查询签约银行请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryContractBankField
{
    public CThostFtdcQryContractBankField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBrchID = new byte[5];
    /// <summary>
    /// 银行分中心代码
    /// </summary>
    public string BankBrchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBrchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBrchID); }
    }
}
/// <summary>
/// 查询签约银行响应
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcContractBankField
{
    public CThostFtdcContractBankField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBrchID = new byte[5];
    /// <summary>
    /// 银行分中心代码
    /// </summary>
    public string BankBrchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBrchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBrchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=101)]
    public readonly byte[] _BankName = new byte[101];
    /// <summary>
    /// 银行名称
    /// </summary>
    public string BankName
    {
        get{ return GBKConvert.Instance.GetString(_BankName); }
        set{ GBKConvert.Instance.GetBytes(value, _BankName); }
    }
}
/// <summary>
/// 投资者组合持仓明细
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestorPositionCombineDetailField
{
    public CThostFtdcInvestorPositionCombineDetailField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _OpenDate = new byte[9];
    /// <summary>
    /// 开仓日期
    /// </summary>
    public string OpenDate
    {
        get{ return GBKConvert.Instance.GetString(_OpenDate); }
        set{ GBKConvert.Instance.GetBytes(value, _OpenDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ComTradeID = new byte[21];
    /// <summary>
    /// 组合编号
    /// </summary>
    public string ComTradeID
    {
        get{ return GBKConvert.Instance.GetString(_ComTradeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ComTradeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TradeID = new byte[21];
    /// <summary>
    /// 撮合编号
    /// </summary>
    public string TradeID
    {
        get{ return GBKConvert.Instance.GetString(_TradeID); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    public TThostFtdcDirectionType Direction;
    /// <summary>
    /// 持仓量
    /// </summary>
    public int TotalAmt;
    /// <summary>
    /// 投资者保证金
    /// </summary>
    public double Margin;
    /// <summary>
    /// 交易所保证金
    /// </summary>
    public double ExchMargin;
    /// <summary>
    /// 保证金率
    /// </summary>
    public double MarginRateByMoney;
    /// <summary>
    /// 保证金率(按手数)
    /// </summary>
    public double MarginRateByVolume;
    /// <summary>
    /// 单腿编号
    /// </summary>
    public int LegID;
    /// <summary>
    /// 单腿乘数
    /// </summary>
    public int LegMultiple;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    /// <summary>
    /// 成交组号
    /// </summary>
    public int TradeGroupID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _CombInstrumentID = new byte[81];
    /// <summary>
    /// 组合持仓合约编码
    /// </summary>
    public string CombInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_CombInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombInstrumentID); }
    }
}
/// <summary>
/// 预埋单
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcParkedOrderField
{
    public CThostFtdcParkedOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderRef = new byte[13];
    /// <summary>
    /// 报单引用
    /// </summary>
    public string OrderRef
    {
        get{ return GBKConvert.Instance.GetString(_OrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcOrderPriceTypeType OrderPriceType;
    public TThostFtdcDirectionType Direction;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _CombOffsetFlag = new byte[5];
    /// <summary>
    /// 组合开平标志
    /// </summary>
    public string CombOffsetFlag
    {
        get{ return GBKConvert.Instance.GetString(_CombOffsetFlag); }
        set{ GBKConvert.Instance.GetBytes(value, _CombOffsetFlag); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _CombHedgeFlag = new byte[5];
    /// <summary>
    /// 组合投机套保标志
    /// </summary>
    public string CombHedgeFlag
    {
        get{ return GBKConvert.Instance.GetString(_CombHedgeFlag); }
        set{ GBKConvert.Instance.GetBytes(value, _CombHedgeFlag); }
    }
    /// <summary>
    /// 价格
    /// </summary>
    public double LimitPrice;
    /// <summary>
    /// 数量
    /// </summary>
    public int VolumeTotalOriginal;
    public TThostFtdcTimeConditionType TimeCondition;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _GTDDate = new byte[9];
    /// <summary>
    /// GTD日期
    /// </summary>
    public string GTDDate
    {
        get{ return GBKConvert.Instance.GetString(_GTDDate); }
        set{ GBKConvert.Instance.GetBytes(value, _GTDDate); }
    }
    public TThostFtdcVolumeConditionType VolumeCondition;
    /// <summary>
    /// 最小成交量
    /// </summary>
    public int MinVolume;
    public TThostFtdcContingentConditionType ContingentCondition;
    /// <summary>
    /// 止损价
    /// </summary>
    public double StopPrice;
    public TThostFtdcForceCloseReasonType ForceCloseReason;
    /// <summary>
    /// 自动挂起标志
    /// </summary>
    public int IsAutoSuspend;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 用户强评标志
    /// </summary>
    public int UserForceClose;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ParkedOrderID = new byte[13];
    /// <summary>
    /// 预埋报单编号
    /// </summary>
    public string ParkedOrderID
    {
        get{ return GBKConvert.Instance.GetString(_ParkedOrderID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParkedOrderID); }
    }
    public TThostFtdcUserTypeType UserType;
    public TThostFtdcParkedOrderStatusType Status;
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
    /// <summary>
    /// 互换单标志
    /// </summary>
    public int IsSwapOrder;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 资金账号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 交易编码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 输入预埋单操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcParkedOrderActionField
{
    public CThostFtdcParkedOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 报单操作引用
    /// </summary>
    public int OrderActionRef;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderRef = new byte[13];
    /// <summary>
    /// 报单引用
    /// </summary>
    public string OrderRef
    {
        get{ return GBKConvert.Instance.GetString(_OrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderRef); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OrderSysID = new byte[21];
    /// <summary>
    /// 报单编号
    /// </summary>
    public string OrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_OrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderSysID); }
    }
    public TThostFtdcActionFlagType ActionFlag;
    /// <summary>
    /// 价格
    /// </summary>
    public double LimitPrice;
    /// <summary>
    /// 数量变化
    /// </summary>
    public int VolumeChange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ParkedOrderActionID = new byte[13];
    /// <summary>
    /// 预埋撤单单编号
    /// </summary>
    public string ParkedOrderActionID
    {
        get{ return GBKConvert.Instance.GetString(_ParkedOrderActionID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParkedOrderActionID); }
    }
    public TThostFtdcUserTypeType UserType;
    public TThostFtdcParkedOrderStatusType Status;
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 查询预埋单
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryParkedOrderField
{
    public CThostFtdcQryParkedOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询预埋撤单
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryParkedOrderActionField
{
    public CThostFtdcQryParkedOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 删除预埋单
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRemoveParkedOrderField
{
    public CThostFtdcRemoveParkedOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ParkedOrderID = new byte[13];
    /// <summary>
    /// 预埋报单编号
    /// </summary>
    public string ParkedOrderID
    {
        get{ return GBKConvert.Instance.GetString(_ParkedOrderID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParkedOrderID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
}
/// <summary>
/// 删除预埋撤单
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRemoveParkedOrderActionField
{
    public CThostFtdcRemoveParkedOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ParkedOrderActionID = new byte[13];
    /// <summary>
    /// 预埋撤单编号
    /// </summary>
    public string ParkedOrderActionID
    {
        get{ return GBKConvert.Instance.GetString(_ParkedOrderActionID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParkedOrderActionID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
}
/// <summary>
/// 经纪公司可提资金算法表
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestorWithdrawAlgorithmField
{
    public CThostFtdcInvestorWithdrawAlgorithmField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 可提资金比例
    /// </summary>
    public double UsingRatio;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    /// <summary>
    /// 货币质押比率
    /// </summary>
    public double FundMortgageRatio;
}
/// <summary>
/// 查询组合持仓明细
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInvestorPositionCombineDetailField
{
    public CThostFtdcQryInvestorPositionCombineDetailField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _CombInstrumentID = new byte[81];
    /// <summary>
    /// 组合持仓合约编码
    /// </summary>
    public string CombInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_CombInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombInstrumentID); }
    }
}
/// <summary>
/// 成交均价
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMarketDataAveragePriceField
{
    public CThostFtdcMarketDataAveragePriceField() {}
    /// <summary>
    /// 当日均价
    /// </summary>
    public double AveragePrice;
}
/// <summary>
/// 校验投资者密码
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcVerifyInvestorPasswordField
{
    public CThostFtdcVerifyInvestorPasswordField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
}
/// <summary>
/// 用户IP
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcUserIPField
{
    public CThostFtdcUserIPField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPMask = new byte[33];
    /// <summary>
    /// IP地址掩码
    /// </summary>
    public string IPMask
    {
        get{ return GBKConvert.Instance.GetString(_IPMask); }
        set{ GBKConvert.Instance.GetBytes(value, _IPMask); }
    }
}
/// <summary>
/// 用户事件通知信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTradingNoticeInfoField
{
    public CThostFtdcTradingNoticeInfoField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _SendTime = new byte[9];
    /// <summary>
    /// 发送时间
    /// </summary>
    public string SendTime
    {
        get{ return GBKConvert.Instance.GetString(_SendTime); }
        set{ GBKConvert.Instance.GetBytes(value, _SendTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=501)]
    public readonly byte[] _FieldContent = new byte[501];
    /// <summary>
    /// 消息正文
    /// </summary>
    public string FieldContent
    {
        get{ return GBKConvert.Instance.GetString(_FieldContent); }
        set{ GBKConvert.Instance.GetBytes(value, _FieldContent); }
    }
    /// <summary>
    /// 序列系列号
    /// </summary>
    public short SequenceSeries;
    /// <summary>
    /// 序列号
    /// </summary>
    public int SequenceNo;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
}
/// <summary>
/// 用户事件通知
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTradingNoticeField
{
    public CThostFtdcTradingNoticeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 序列系列号
    /// </summary>
    public short SequenceSeries;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _SendTime = new byte[9];
    /// <summary>
    /// 发送时间
    /// </summary>
    public string SendTime
    {
        get{ return GBKConvert.Instance.GetString(_SendTime); }
        set{ GBKConvert.Instance.GetBytes(value, _SendTime); }
    }
    /// <summary>
    /// 序列号
    /// </summary>
    public int SequenceNo;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=501)]
    public readonly byte[] _FieldContent = new byte[501];
    /// <summary>
    /// 消息正文
    /// </summary>
    public string FieldContent
    {
        get{ return GBKConvert.Instance.GetString(_FieldContent); }
        set{ GBKConvert.Instance.GetBytes(value, _FieldContent); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
}
/// <summary>
/// 查询交易事件通知
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryTradingNoticeField
{
    public CThostFtdcQryTradingNoticeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
}
/// <summary>
/// 查询错误报单
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryErrOrderField
{
    public CThostFtdcQryErrOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
}
/// <summary>
/// 错误报单
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcErrOrderField
{
    public CThostFtdcErrOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderRef = new byte[13];
    /// <summary>
    /// 报单引用
    /// </summary>
    public string OrderRef
    {
        get{ return GBKConvert.Instance.GetString(_OrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcOrderPriceTypeType OrderPriceType;
    public TThostFtdcDirectionType Direction;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _CombOffsetFlag = new byte[5];
    /// <summary>
    /// 组合开平标志
    /// </summary>
    public string CombOffsetFlag
    {
        get{ return GBKConvert.Instance.GetString(_CombOffsetFlag); }
        set{ GBKConvert.Instance.GetBytes(value, _CombOffsetFlag); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _CombHedgeFlag = new byte[5];
    /// <summary>
    /// 组合投机套保标志
    /// </summary>
    public string CombHedgeFlag
    {
        get{ return GBKConvert.Instance.GetString(_CombHedgeFlag); }
        set{ GBKConvert.Instance.GetBytes(value, _CombHedgeFlag); }
    }
    /// <summary>
    /// 价格
    /// </summary>
    public double LimitPrice;
    /// <summary>
    /// 数量
    /// </summary>
    public int VolumeTotalOriginal;
    public TThostFtdcTimeConditionType TimeCondition;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _GTDDate = new byte[9];
    /// <summary>
    /// GTD日期
    /// </summary>
    public string GTDDate
    {
        get{ return GBKConvert.Instance.GetString(_GTDDate); }
        set{ GBKConvert.Instance.GetBytes(value, _GTDDate); }
    }
    public TThostFtdcVolumeConditionType VolumeCondition;
    /// <summary>
    /// 最小成交量
    /// </summary>
    public int MinVolume;
    public TThostFtdcContingentConditionType ContingentCondition;
    /// <summary>
    /// 止损价
    /// </summary>
    public double StopPrice;
    public TThostFtdcForceCloseReasonType ForceCloseReason;
    /// <summary>
    /// 自动挂起标志
    /// </summary>
    public int IsAutoSuspend;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 用户强评标志
    /// </summary>
    public int UserForceClose;
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
    /// <summary>
    /// 互换单标志
    /// </summary>
    public int IsSwapOrder;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 资金账号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 交易编码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 查询错误报单操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcErrorConditionalOrderField
{
    public CThostFtdcErrorConditionalOrderField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderRef = new byte[13];
    /// <summary>
    /// 报单引用
    /// </summary>
    public string OrderRef
    {
        get{ return GBKConvert.Instance.GetString(_OrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderRef); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcOrderPriceTypeType OrderPriceType;
    public TThostFtdcDirectionType Direction;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _CombOffsetFlag = new byte[5];
    /// <summary>
    /// 组合开平标志
    /// </summary>
    public string CombOffsetFlag
    {
        get{ return GBKConvert.Instance.GetString(_CombOffsetFlag); }
        set{ GBKConvert.Instance.GetBytes(value, _CombOffsetFlag); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _CombHedgeFlag = new byte[5];
    /// <summary>
    /// 组合投机套保标志
    /// </summary>
    public string CombHedgeFlag
    {
        get{ return GBKConvert.Instance.GetString(_CombHedgeFlag); }
        set{ GBKConvert.Instance.GetBytes(value, _CombHedgeFlag); }
    }
    /// <summary>
    /// 价格
    /// </summary>
    public double LimitPrice;
    /// <summary>
    /// 数量
    /// </summary>
    public int VolumeTotalOriginal;
    public TThostFtdcTimeConditionType TimeCondition;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _GTDDate = new byte[9];
    /// <summary>
    /// GTD日期
    /// </summary>
    public string GTDDate
    {
        get{ return GBKConvert.Instance.GetString(_GTDDate); }
        set{ GBKConvert.Instance.GetBytes(value, _GTDDate); }
    }
    public TThostFtdcVolumeConditionType VolumeCondition;
    /// <summary>
    /// 最小成交量
    /// </summary>
    public int MinVolume;
    public TThostFtdcContingentConditionType ContingentCondition;
    /// <summary>
    /// 止损价
    /// </summary>
    public double StopPrice;
    public TThostFtdcForceCloseReasonType ForceCloseReason;
    /// <summary>
    /// 自动挂起标志
    /// </summary>
    public int IsAutoSuspend;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderLocalID = new byte[13];
    /// <summary>
    /// 本地报单编号
    /// </summary>
    public string OrderLocalID
    {
        get{ return GBKConvert.Instance.GetString(_OrderLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcOrderSubmitStatusType OrderSubmitStatus;
    /// <summary>
    /// 报单提示序号
    /// </summary>
    public int NotifySequence;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OrderSysID = new byte[21];
    /// <summary>
    /// 报单编号
    /// </summary>
    public string OrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_OrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderSysID); }
    }
    public TThostFtdcOrderSourceType OrderSource;
    public TThostFtdcOrderStatusType OrderStatus;
    public TThostFtdcOrderTypeType OrderType;
    /// <summary>
    /// 今成交数量
    /// </summary>
    public int VolumeTraded;
    /// <summary>
    /// 剩余数量
    /// </summary>
    public int VolumeTotal;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertDate = new byte[9];
    /// <summary>
    /// 报单日期
    /// </summary>
    public string InsertDate
    {
        get{ return GBKConvert.Instance.GetString(_InsertDate); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _InsertTime = new byte[9];
    /// <summary>
    /// 委托时间
    /// </summary>
    public string InsertTime
    {
        get{ return GBKConvert.Instance.GetString(_InsertTime); }
        set{ GBKConvert.Instance.GetBytes(value, _InsertTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActiveTime = new byte[9];
    /// <summary>
    /// 激活时间
    /// </summary>
    public string ActiveTime
    {
        get{ return GBKConvert.Instance.GetString(_ActiveTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ActiveTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _SuspendTime = new byte[9];
    /// <summary>
    /// 挂起时间
    /// </summary>
    public string SuspendTime
    {
        get{ return GBKConvert.Instance.GetString(_SuspendTime); }
        set{ GBKConvert.Instance.GetBytes(value, _SuspendTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _UpdateTime = new byte[9];
    /// <summary>
    /// 最后修改时间
    /// </summary>
    public string UpdateTime
    {
        get{ return GBKConvert.Instance.GetString(_UpdateTime); }
        set{ GBKConvert.Instance.GetBytes(value, _UpdateTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CancelTime = new byte[9];
    /// <summary>
    /// 撤销时间
    /// </summary>
    public string CancelTime
    {
        get{ return GBKConvert.Instance.GetString(_CancelTime); }
        set{ GBKConvert.Instance.GetBytes(value, _CancelTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ActiveTraderID = new byte[21];
    /// <summary>
    /// 最后修改交易所交易员代码
    /// </summary>
    public string ActiveTraderID
    {
        get{ return GBKConvert.Instance.GetString(_ActiveTraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActiveTraderID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClearingPartID = new byte[11];
    /// <summary>
    /// 结算会员编号
    /// </summary>
    public string ClearingPartID
    {
        get{ return GBKConvert.Instance.GetString(_ClearingPartID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClearingPartID); }
    }
    /// <summary>
    /// 序号
    /// </summary>
    public int SequenceNo;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UserProductInfo = new byte[11];
    /// <summary>
    /// 用户端产品信息
    /// </summary>
    public string UserProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StatusMsg = new byte[81];
    /// <summary>
    /// 状态信息
    /// </summary>
    public string StatusMsg
    {
        get{ return GBKConvert.Instance.GetString(_StatusMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _StatusMsg); }
    }
    /// <summary>
    /// 用户强评标志
    /// </summary>
    public int UserForceClose;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _ActiveUserID = new byte[16];
    /// <summary>
    /// 操作用户代码
    /// </summary>
    public string ActiveUserID
    {
        get{ return GBKConvert.Instance.GetString(_ActiveUserID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActiveUserID); }
    }
    /// <summary>
    /// 经纪公司报单编号
    /// </summary>
    public int BrokerOrderSeq;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _RelativeOrderSysID = new byte[21];
    /// <summary>
    /// 相关报单
    /// </summary>
    public string RelativeOrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_RelativeOrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _RelativeOrderSysID); }
    }
    /// <summary>
    /// 郑商所成交数量
    /// </summary>
    public int ZCETotalTradedVolume;
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
    /// <summary>
    /// 互换单标志
    /// </summary>
    public int IsSwapOrder;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 资金账号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve3 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve3
    {
        get{ return GBKConvert.Instance.GetString(_reserve3); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve3); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 查询错误报单操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryErrOrderActionField
{
    public CThostFtdcQryErrOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
}
/// <summary>
/// 错误报单操作
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcErrOrderActionField
{
    public CThostFtdcErrOrderActionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 报单操作引用
    /// </summary>
    public int OrderActionRef;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderRef = new byte[13];
    /// <summary>
    /// 报单引用
    /// </summary>
    public string OrderRef
    {
        get{ return GBKConvert.Instance.GetString(_OrderRef); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderRef); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 前置编号
    /// </summary>
    public int FrontID;
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _OrderSysID = new byte[21];
    /// <summary>
    /// 报单编号
    /// </summary>
    public string OrderSysID
    {
        get{ return GBKConvert.Instance.GetString(_OrderSysID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderSysID); }
    }
    public TThostFtdcActionFlagType ActionFlag;
    /// <summary>
    /// 价格
    /// </summary>
    public double LimitPrice;
    /// <summary>
    /// 数量变化
    /// </summary>
    public int VolumeChange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDate = new byte[9];
    /// <summary>
    /// 操作日期
    /// </summary>
    public string ActionDate
    {
        get{ return GBKConvert.Instance.GetString(_ActionDate); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionTime = new byte[9];
    /// <summary>
    /// 操作时间
    /// </summary>
    public string ActionTime
    {
        get{ return GBKConvert.Instance.GetString(_ActionTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _OrderLocalID = new byte[13];
    /// <summary>
    /// 本地报单编号
    /// </summary>
    public string OrderLocalID
    {
        get{ return GBKConvert.Instance.GetString(_OrderLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrderLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _ActionLocalID = new byte[13];
    /// <summary>
    /// 操作本地编号
    /// </summary>
    public string ActionLocalID
    {
        get{ return GBKConvert.Instance.GetString(_ActionLocalID); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionLocalID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ClientID = new byte[11];
    /// <summary>
    /// 客户代码
    /// </summary>
    public string ClientID
    {
        get{ return GBKConvert.Instance.GetString(_ClientID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _BusinessUnit = new byte[21];
    /// <summary>
    /// 业务单元
    /// </summary>
    public string BusinessUnit
    {
        get{ return GBKConvert.Instance.GetString(_BusinessUnit); }
        set{ GBKConvert.Instance.GetBytes(value, _BusinessUnit); }
    }
    public TThostFtdcOrderActionStatusType OrderActionStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StatusMsg = new byte[81];
    /// <summary>
    /// 状态信息
    /// </summary>
    public string StatusMsg
    {
        get{ return GBKConvert.Instance.GetString(_StatusMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _StatusMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BranchID = new byte[9];
    /// <summary>
    /// 营业部编号
    /// </summary>
    public string BranchID
    {
        get{ return GBKConvert.Instance.GetString(_BranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve2 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 查询交易所状态
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryExchangeSequenceField
{
    public CThostFtdcQryExchangeSequenceField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
}
/// <summary>
/// 交易所状态
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcExchangeSequenceField
{
    public CThostFtdcExchangeSequenceField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 序号
    /// </summary>
    public int SequenceNo;
    public TThostFtdcInstrumentStatusType MarketStatus;
}
/// <summary>
/// 根据价格查询最大报单数量
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryMaxOrderVolumeWithPriceField
{
    public CThostFtdcQryMaxOrderVolumeWithPriceField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcDirectionType Direction;
    public TThostFtdcOffsetFlagType OffsetFlag;
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 最大允许报单数量
    /// </summary>
    public int MaxVolume;
    /// <summary>
    /// 报单价格
    /// </summary>
    public double Price;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询经纪公司交易参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryBrokerTradingParamsField
{
    public CThostFtdcQryBrokerTradingParamsField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
}
/// <summary>
/// 经纪公司交易参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcBrokerTradingParamsField
{
    public CThostFtdcBrokerTradingParamsField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcMarginPriceTypeType MarginPriceType;
    public TThostFtdcAlgorithmType Algorithm;
    public TThostFtdcIncludeCloseProfitType AvailIncludeCloseProfit;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    public TThostFtdcOptionRoyaltyPriceTypeType OptionRoyaltyPriceType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
}
/// <summary>
/// 查询经纪公司交易算法
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryBrokerTradingAlgosField
{
    public CThostFtdcQryBrokerTradingAlgosField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 经纪公司交易算法
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcBrokerTradingAlgosField
{
    public CThostFtdcBrokerTradingAlgosField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcHandlePositionAlgoIDType HandlePositionAlgoID;
    public TThostFtdcFindMarginRateAlgoIDType FindMarginRateAlgoID;
    public TThostFtdcHandleTradingAccountAlgoIDType HandleTradingAccountAlgoID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询经纪公司资金
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQueryBrokerDepositField
{
    public CThostFtdcQueryBrokerDepositField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
}
/// <summary>
/// 经纪公司资金
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcBrokerDepositField
{
    public CThostFtdcBrokerDepositField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 上次结算准备金
    /// </summary>
    public double PreBalance;
    /// <summary>
    /// 当前保证金总额
    /// </summary>
    public double CurrMargin;
    /// <summary>
    /// 平仓盈亏
    /// </summary>
    public double CloseProfit;
    /// <summary>
    /// 期货结算准备金
    /// </summary>
    public double Balance;
    /// <summary>
    /// 入金金额
    /// </summary>
    public double Deposit;
    /// <summary>
    /// 出金金额
    /// </summary>
    public double Withdraw;
    /// <summary>
    /// 可提资金
    /// </summary>
    public double Available;
    /// <summary>
    /// 基本准备金
    /// </summary>
    public double Reserve;
    /// <summary>
    /// 冻结的保证金
    /// </summary>
    public double FrozenMargin;
}
/// <summary>
/// 查询保证金监管系统经纪公司密钥
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryCFMMCBrokerKeyField
{
    public CThostFtdcQryCFMMCBrokerKeyField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
}
/// <summary>
/// 保证金监管系统经纪公司密钥
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcCFMMCBrokerKeyField
{
    public CThostFtdcCFMMCBrokerKeyField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 经纪公司统一编码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CreateDate = new byte[9];
    /// <summary>
    /// 密钥生成日期
    /// </summary>
    public string CreateDate
    {
        get{ return GBKConvert.Instance.GetString(_CreateDate); }
        set{ GBKConvert.Instance.GetBytes(value, _CreateDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CreateTime = new byte[9];
    /// <summary>
    /// 密钥生成时间
    /// </summary>
    public string CreateTime
    {
        get{ return GBKConvert.Instance.GetString(_CreateTime); }
        set{ GBKConvert.Instance.GetBytes(value, _CreateTime); }
    }
    /// <summary>
    /// 密钥编号
    /// </summary>
    public int KeyID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _CurrentKey = new byte[21];
    /// <summary>
    /// 动态密钥
    /// </summary>
    public string CurrentKey
    {
        get{ return GBKConvert.Instance.GetString(_CurrentKey); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrentKey); }
    }
    public TThostFtdcCFMMCKeyKindType KeyKind;
}
/// <summary>
/// 保证金监管系统经纪公司资金账户密钥
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcCFMMCTradingAccountKeyField
{
    public CThostFtdcCFMMCTradingAccountKeyField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 经纪公司统一编码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    /// <summary>
    /// 密钥编号
    /// </summary>
    public int KeyID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _CurrentKey = new byte[21];
    /// <summary>
    /// 动态密钥
    /// </summary>
    public string CurrentKey
    {
        get{ return GBKConvert.Instance.GetString(_CurrentKey); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrentKey); }
    }
}
/// <summary>
/// 请求查询保证金监管系统经纪公司资金账户密钥
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryCFMMCTradingAccountKeyField
{
    public CThostFtdcQryCFMMCTradingAccountKeyField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
}
/// <summary>
/// 用户动态令牌参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcBrokerUserOTPParamField
{
    public CThostFtdcBrokerUserOTPParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=2)]
    public readonly byte[] _OTPVendorsID = new byte[2];
    /// <summary>
    /// 动态令牌提供商
    /// </summary>
    public string OTPVendorsID
    {
        get{ return GBKConvert.Instance.GetString(_OTPVendorsID); }
        set{ GBKConvert.Instance.GetBytes(value, _OTPVendorsID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _SerialNumber = new byte[17];
    /// <summary>
    /// 动态令牌序列号
    /// </summary>
    public string SerialNumber
    {
        get{ return GBKConvert.Instance.GetString(_SerialNumber); }
        set{ GBKConvert.Instance.GetBytes(value, _SerialNumber); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _AuthKey = new byte[41];
    /// <summary>
    /// 令牌密钥
    /// </summary>
    public string AuthKey
    {
        get{ return GBKConvert.Instance.GetString(_AuthKey); }
        set{ GBKConvert.Instance.GetBytes(value, _AuthKey); }
    }
    /// <summary>
    /// 漂移值
    /// </summary>
    public int LastDrift;
    /// <summary>
    /// 成功值
    /// </summary>
    public int LastSuccess;
    public TThostFtdcOTPTypeType OTPType;
}
/// <summary>
/// 手工同步用户动态令牌
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcManualSyncBrokerUserOTPField
{
    public CThostFtdcManualSyncBrokerUserOTPField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcOTPTypeType OTPType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _FirstOTP = new byte[41];
    /// <summary>
    /// 第一个动态密码
    /// </summary>
    public string FirstOTP
    {
        get{ return GBKConvert.Instance.GetString(_FirstOTP); }
        set{ GBKConvert.Instance.GetBytes(value, _FirstOTP); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _SecondOTP = new byte[41];
    /// <summary>
    /// 第二个动态密码
    /// </summary>
    public string SecondOTP
    {
        get{ return GBKConvert.Instance.GetString(_SecondOTP); }
        set{ GBKConvert.Instance.GetBytes(value, _SecondOTP); }
    }
}
/// <summary>
/// 投资者手续费率模板
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcCommRateModelField
{
    public CThostFtdcCommRateModelField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _CommModelID = new byte[13];
    /// <summary>
    /// 手续费率模板代码
    /// </summary>
    public string CommModelID
    {
        get{ return GBKConvert.Instance.GetString(_CommModelID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommModelID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _CommModelName = new byte[161];
    /// <summary>
    /// 模板名称
    /// </summary>
    public string CommModelName
    {
        get{ return GBKConvert.Instance.GetString(_CommModelName); }
        set{ GBKConvert.Instance.GetBytes(value, _CommModelName); }
    }
}
/// <summary>
/// 请求查询投资者手续费率模板
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryCommRateModelField
{
    public CThostFtdcQryCommRateModelField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _CommModelID = new byte[13];
    /// <summary>
    /// 手续费率模板代码
    /// </summary>
    public string CommModelID
    {
        get{ return GBKConvert.Instance.GetString(_CommModelID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommModelID); }
    }
}
/// <summary>
/// 投资者保证金率模板
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMarginModelField
{
    public CThostFtdcMarginModelField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _MarginModelID = new byte[13];
    /// <summary>
    /// 保证金率模板代码
    /// </summary>
    public string MarginModelID
    {
        get{ return GBKConvert.Instance.GetString(_MarginModelID); }
        set{ GBKConvert.Instance.GetBytes(value, _MarginModelID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _MarginModelName = new byte[161];
    /// <summary>
    /// 模板名称
    /// </summary>
    public string MarginModelName
    {
        get{ return GBKConvert.Instance.GetString(_MarginModelName); }
        set{ GBKConvert.Instance.GetBytes(value, _MarginModelName); }
    }
}
/// <summary>
/// 请求查询投资者保证金率模板
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryMarginModelField
{
    public CThostFtdcQryMarginModelField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _MarginModelID = new byte[13];
    /// <summary>
    /// 保证金率模板代码
    /// </summary>
    public string MarginModelID
    {
        get{ return GBKConvert.Instance.GetString(_MarginModelID); }
        set{ GBKConvert.Instance.GetBytes(value, _MarginModelID); }
    }
}
/// <summary>
/// 仓单折抵信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcEWarrantOffsetField
{
    public CThostFtdcEWarrantOffsetField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcDirectionType Direction;
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询仓单折抵信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryEWarrantOffsetField
{
    public CThostFtdcQryEWarrantOffsetField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 查询投资者品种/跨品种保证金
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInvestorProductGroupMarginField
{
    public CThostFtdcQryInvestorProductGroupMarginField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductGroupID = new byte[81];
    /// <summary>
    /// 品种/跨品种标示
    /// </summary>
    public string ProductGroupID
    {
        get{ return GBKConvert.Instance.GetString(_ProductGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductGroupID); }
    }
}
/// <summary>
/// 投资者品种/跨品种保证金
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestorProductGroupMarginField
{
    public CThostFtdcInvestorProductGroupMarginField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    /// <summary>
    /// 冻结的保证金
    /// </summary>
    public double FrozenMargin;
    /// <summary>
    /// 多头冻结的保证金
    /// </summary>
    public double LongFrozenMargin;
    /// <summary>
    /// 空头冻结的保证金
    /// </summary>
    public double ShortFrozenMargin;
    /// <summary>
    /// 占用的保证金
    /// </summary>
    public double UseMargin;
    /// <summary>
    /// 多头保证金
    /// </summary>
    public double LongUseMargin;
    /// <summary>
    /// 空头保证金
    /// </summary>
    public double ShortUseMargin;
    /// <summary>
    /// 交易所保证金
    /// </summary>
    public double ExchMargin;
    /// <summary>
    /// 交易所多头保证金
    /// </summary>
    public double LongExchMargin;
    /// <summary>
    /// 交易所空头保证金
    /// </summary>
    public double ShortExchMargin;
    /// <summary>
    /// 平仓盈亏
    /// </summary>
    public double CloseProfit;
    /// <summary>
    /// 冻结的手续费
    /// </summary>
    public double FrozenCommission;
    /// <summary>
    /// 手续费
    /// </summary>
    public double Commission;
    /// <summary>
    /// 冻结的资金
    /// </summary>
    public double FrozenCash;
    /// <summary>
    /// 资金差额
    /// </summary>
    public double CashIn;
    /// <summary>
    /// 持仓盈亏
    /// </summary>
    public double PositionProfit;
    /// <summary>
    /// 折抵总金额
    /// </summary>
    public double OffsetAmount;
    /// <summary>
    /// 多头折抵总金额
    /// </summary>
    public double LongOffsetAmount;
    /// <summary>
    /// 空头折抵总金额
    /// </summary>
    public double ShortOffsetAmount;
    /// <summary>
    /// 交易所折抵总金额
    /// </summary>
    public double ExchOffsetAmount;
    /// <summary>
    /// 交易所多头折抵总金额
    /// </summary>
    public double LongExchOffsetAmount;
    /// <summary>
    /// 交易所空头折抵总金额
    /// </summary>
    public double ShortExchOffsetAmount;
    public TThostFtdcHedgeFlagType HedgeFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductGroupID = new byte[81];
    /// <summary>
    /// 品种/跨品种标示
    /// </summary>
    public string ProductGroupID
    {
        get{ return GBKConvert.Instance.GetString(_ProductGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductGroupID); }
    }
}
/// <summary>
/// 查询监控中心用户令牌
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQueryCFMMCTradingAccountTokenField
{
    public CThostFtdcQueryCFMMCTradingAccountTokenField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
}
/// <summary>
/// 监控中心用户令牌
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcCFMMCTradingAccountTokenField
{
    public CThostFtdcCFMMCTradingAccountTokenField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 经纪公司统一编码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    /// <summary>
    /// 密钥编号
    /// </summary>
    public int KeyID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _Token = new byte[21];
    /// <summary>
    /// 动态令牌
    /// </summary>
    public string Token
    {
        get{ return GBKConvert.Instance.GetString(_Token); }
        set{ GBKConvert.Instance.GetBytes(value, _Token); }
    }
}
/// <summary>
/// 查询产品组
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryProductGroupField
{
    public CThostFtdcQryProductGroupField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductID = new byte[81];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
}
/// <summary>
/// 投资者品种/跨品种保证金产品组
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcProductGroupField
{
    public CThostFtdcProductGroupField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve2 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve2
    {
        get{ return GBKConvert.Instance.GetString(_reserve2); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve2); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductID = new byte[81];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductGroupID = new byte[81];
    /// <summary>
    /// 产品组代码
    /// </summary>
    public string ProductGroupID
    {
        get{ return GBKConvert.Instance.GetString(_ProductGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductGroupID); }
    }
}
/// <summary>
/// 交易所公告
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcBulletinField
{
    public CThostFtdcBulletinField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 公告编号
    /// </summary>
    public int BulletinID;
    /// <summary>
    /// 序列号
    /// </summary>
    public int SequenceNo;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _NewsType = new byte[3];
    /// <summary>
    /// 公告类型
    /// </summary>
    public string NewsType
    {
        get{ return GBKConvert.Instance.GetString(_NewsType); }
        set{ GBKConvert.Instance.GetBytes(value, _NewsType); }
    }
    /// <summary>
    /// 紧急程度
    /// </summary>
    public byte NewsUrgency;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _SendTime = new byte[9];
    /// <summary>
    /// 发送时间
    /// </summary>
    public string SendTime
    {
        get{ return GBKConvert.Instance.GetString(_SendTime); }
        set{ GBKConvert.Instance.GetBytes(value, _SendTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Abstract = new byte[81];
    /// <summary>
    /// 消息摘要
    /// </summary>
    public string Abstract
    {
        get{ return GBKConvert.Instance.GetString(_Abstract); }
        set{ GBKConvert.Instance.GetBytes(value, _Abstract); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ComeFrom = new byte[21];
    /// <summary>
    /// 消息来源
    /// </summary>
    public string ComeFrom
    {
        get{ return GBKConvert.Instance.GetString(_ComeFrom); }
        set{ GBKConvert.Instance.GetBytes(value, _ComeFrom); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=501)]
    public readonly byte[] _Content = new byte[501];
    /// <summary>
    /// 消息正文
    /// </summary>
    public string Content
    {
        get{ return GBKConvert.Instance.GetString(_Content); }
        set{ GBKConvert.Instance.GetBytes(value, _Content); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=201)]
    public readonly byte[] _URLLink = new byte[201];
    /// <summary>
    /// WEB地址
    /// </summary>
    public string URLLink
    {
        get{ return GBKConvert.Instance.GetString(_URLLink); }
        set{ GBKConvert.Instance.GetBytes(value, _URLLink); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _MarketID = new byte[31];
    /// <summary>
    /// 市场代码
    /// </summary>
    public string MarketID
    {
        get{ return GBKConvert.Instance.GetString(_MarketID); }
        set{ GBKConvert.Instance.GetBytes(value, _MarketID); }
    }
}
/// <summary>
/// 查询交易所公告
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryBulletinField
{
    public CThostFtdcQryBulletinField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 公告编号
    /// </summary>
    public int BulletinID;
    /// <summary>
    /// 序列号
    /// </summary>
    public int SequenceNo;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _NewsType = new byte[3];
    /// <summary>
    /// 公告类型
    /// </summary>
    public string NewsType
    {
        get{ return GBKConvert.Instance.GetString(_NewsType); }
        set{ GBKConvert.Instance.GetBytes(value, _NewsType); }
    }
    /// <summary>
    /// 紧急程度
    /// </summary>
    public byte NewsUrgency;
}
/// <summary>
/// MulticastInstrument
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMulticastInstrumentField
{
    public CThostFtdcMulticastInstrumentField() {}
    /// <summary>
    /// 主题号
    /// </summary>
    public int TopicID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    /// <summary>
    /// 合约编号
    /// </summary>
    public int InstrumentNo;
    /// <summary>
    /// 基准价
    /// </summary>
    public double CodePrice;
    /// <summary>
    /// 合约数量乘数
    /// </summary>
    public int VolumeMultiple;
    /// <summary>
    /// 最小变动价位
    /// </summary>
    public double PriceTick;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// QryMulticastInstrument
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryMulticastInstrumentField
{
    public CThostFtdcQryMulticastInstrumentField() {}
    /// <summary>
    /// 主题号
    /// </summary>
    public int TopicID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _reserve1 = new byte[31];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// App客户端权限分配
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcAppIDAuthAssignField
{
    public CThostFtdcAppIDAuthAssignField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _AppID = new byte[33];
    /// <summary>
    /// App代码
    /// </summary>
    public string AppID
    {
        get{ return GBKConvert.Instance.GetString(_AppID); }
        set{ GBKConvert.Instance.GetBytes(value, _AppID); }
    }
    /// <summary>
    /// 交易中心代码
    /// </summary>
    public int DRIdentityID;
}
/// <summary>
/// 转帐开户请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqOpenAccountField
{
    public CThostFtdcReqOpenAccountField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcGenderType Gender;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _CountryCode = new byte[21];
    /// <summary>
    /// 国家代码
    /// </summary>
    public string CountryCode
    {
        get{ return GBKConvert.Instance.GetString(_CountryCode); }
        set{ GBKConvert.Instance.GetBytes(value, _CountryCode); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=101)]
    public readonly byte[] _Address = new byte[101];
    /// <summary>
    /// 地址
    /// </summary>
    public string Address
    {
        get{ return GBKConvert.Instance.GetString(_Address); }
        set{ GBKConvert.Instance.GetBytes(value, _Address); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _ZipCode = new byte[7];
    /// <summary>
    /// 邮编
    /// </summary>
    public string ZipCode
    {
        get{ return GBKConvert.Instance.GetString(_ZipCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ZipCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Telephone = new byte[41];
    /// <summary>
    /// 电话号码
    /// </summary>
    public string Telephone
    {
        get{ return GBKConvert.Instance.GetString(_Telephone); }
        set{ GBKConvert.Instance.GetBytes(value, _Telephone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MobilePhone = new byte[21];
    /// <summary>
    /// 手机
    /// </summary>
    public string MobilePhone
    {
        get{ return GBKConvert.Instance.GetString(_MobilePhone); }
        set{ GBKConvert.Instance.GetBytes(value, _MobilePhone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Fax = new byte[41];
    /// <summary>
    /// 传真
    /// </summary>
    public string Fax
    {
        get{ return GBKConvert.Instance.GetString(_Fax); }
        set{ GBKConvert.Instance.GetBytes(value, _Fax); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _EMail = new byte[41];
    /// <summary>
    /// 电子邮件
    /// </summary>
    public string EMail
    {
        get{ return GBKConvert.Instance.GetString(_EMail); }
        set{ GBKConvert.Instance.GetBytes(value, _EMail); }
    }
    public TThostFtdcMoneyAccountStatusType MoneyAccountStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcYesNoIndicatorType VerifyCertNoFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    public TThostFtdcCashExchangeCodeType CashExchangeCode;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    public TThostFtdcBankAccTypeType BankAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    public TThostFtdcBankAccTypeType BankSecuAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankSecuAcc = new byte[41];
    /// <summary>
    /// 期货单位帐号
    /// </summary>
    public string BankSecuAcc
    {
        get{ return GBKConvert.Instance.GetString(_BankSecuAcc); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSecuAcc); }
    }
    public TThostFtdcPwdFlagType BankPwdFlag;
    public TThostFtdcPwdFlagType SecuPwdFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 转帐销户请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqCancelAccountField
{
    public CThostFtdcReqCancelAccountField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcGenderType Gender;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _CountryCode = new byte[21];
    /// <summary>
    /// 国家代码
    /// </summary>
    public string CountryCode
    {
        get{ return GBKConvert.Instance.GetString(_CountryCode); }
        set{ GBKConvert.Instance.GetBytes(value, _CountryCode); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=101)]
    public readonly byte[] _Address = new byte[101];
    /// <summary>
    /// 地址
    /// </summary>
    public string Address
    {
        get{ return GBKConvert.Instance.GetString(_Address); }
        set{ GBKConvert.Instance.GetBytes(value, _Address); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _ZipCode = new byte[7];
    /// <summary>
    /// 邮编
    /// </summary>
    public string ZipCode
    {
        get{ return GBKConvert.Instance.GetString(_ZipCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ZipCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Telephone = new byte[41];
    /// <summary>
    /// 电话号码
    /// </summary>
    public string Telephone
    {
        get{ return GBKConvert.Instance.GetString(_Telephone); }
        set{ GBKConvert.Instance.GetBytes(value, _Telephone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MobilePhone = new byte[21];
    /// <summary>
    /// 手机
    /// </summary>
    public string MobilePhone
    {
        get{ return GBKConvert.Instance.GetString(_MobilePhone); }
        set{ GBKConvert.Instance.GetBytes(value, _MobilePhone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Fax = new byte[41];
    /// <summary>
    /// 传真
    /// </summary>
    public string Fax
    {
        get{ return GBKConvert.Instance.GetString(_Fax); }
        set{ GBKConvert.Instance.GetBytes(value, _Fax); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _EMail = new byte[41];
    /// <summary>
    /// 电子邮件
    /// </summary>
    public string EMail
    {
        get{ return GBKConvert.Instance.GetString(_EMail); }
        set{ GBKConvert.Instance.GetBytes(value, _EMail); }
    }
    public TThostFtdcMoneyAccountStatusType MoneyAccountStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcYesNoIndicatorType VerifyCertNoFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    public TThostFtdcCashExchangeCodeType CashExchangeCode;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    public TThostFtdcBankAccTypeType BankAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    public TThostFtdcBankAccTypeType BankSecuAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankSecuAcc = new byte[41];
    /// <summary>
    /// 期货单位帐号
    /// </summary>
    public string BankSecuAcc
    {
        get{ return GBKConvert.Instance.GetString(_BankSecuAcc); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSecuAcc); }
    }
    public TThostFtdcPwdFlagType BankPwdFlag;
    public TThostFtdcPwdFlagType SecuPwdFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 变更银行账户请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqChangeAccountField
{
    public CThostFtdcReqChangeAccountField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcGenderType Gender;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _CountryCode = new byte[21];
    /// <summary>
    /// 国家代码
    /// </summary>
    public string CountryCode
    {
        get{ return GBKConvert.Instance.GetString(_CountryCode); }
        set{ GBKConvert.Instance.GetBytes(value, _CountryCode); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=101)]
    public readonly byte[] _Address = new byte[101];
    /// <summary>
    /// 地址
    /// </summary>
    public string Address
    {
        get{ return GBKConvert.Instance.GetString(_Address); }
        set{ GBKConvert.Instance.GetBytes(value, _Address); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _ZipCode = new byte[7];
    /// <summary>
    /// 邮编
    /// </summary>
    public string ZipCode
    {
        get{ return GBKConvert.Instance.GetString(_ZipCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ZipCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Telephone = new byte[41];
    /// <summary>
    /// 电话号码
    /// </summary>
    public string Telephone
    {
        get{ return GBKConvert.Instance.GetString(_Telephone); }
        set{ GBKConvert.Instance.GetBytes(value, _Telephone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MobilePhone = new byte[21];
    /// <summary>
    /// 手机
    /// </summary>
    public string MobilePhone
    {
        get{ return GBKConvert.Instance.GetString(_MobilePhone); }
        set{ GBKConvert.Instance.GetBytes(value, _MobilePhone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Fax = new byte[41];
    /// <summary>
    /// 传真
    /// </summary>
    public string Fax
    {
        get{ return GBKConvert.Instance.GetString(_Fax); }
        set{ GBKConvert.Instance.GetBytes(value, _Fax); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _EMail = new byte[41];
    /// <summary>
    /// 电子邮件
    /// </summary>
    public string EMail
    {
        get{ return GBKConvert.Instance.GetString(_EMail); }
        set{ GBKConvert.Instance.GetBytes(value, _EMail); }
    }
    public TThostFtdcMoneyAccountStatusType MoneyAccountStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _NewBankAccount = new byte[41];
    /// <summary>
    /// 新银行帐号
    /// </summary>
    public string NewBankAccount
    {
        get{ return GBKConvert.Instance.GetString(_NewBankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _NewBankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _NewBankPassWord = new byte[41];
    /// <summary>
    /// 新银行密码
    /// </summary>
    public string NewBankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_NewBankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _NewBankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    public TThostFtdcBankAccTypeType BankAccType;
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcYesNoIndicatorType VerifyCertNoFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    public TThostFtdcPwdFlagType BankPwdFlag;
    public TThostFtdcPwdFlagType SecuPwdFlag;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 转账请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqTransferField
{
    public CThostFtdcReqTransferField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    /// <summary>
    /// 期货公司流水号
    /// </summary>
    public int FutureSerial;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcYesNoIndicatorType VerifyCertNoFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    /// <summary>
    /// 转帐金额
    /// </summary>
    public double TradeAmount;
    /// <summary>
    /// 期货可取金额
    /// </summary>
    public double FutureFetchAmount;
    public TThostFtdcFeePayFlagType FeePayFlag;
    /// <summary>
    /// 应收客户费用
    /// </summary>
    public double CustFee;
    /// <summary>
    /// 应收期货公司费用
    /// </summary>
    public double BrokerFee;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _Message = new byte[129];
    /// <summary>
    /// 发送方给接收方的消息
    /// </summary>
    public string Message
    {
        get{ return GBKConvert.Instance.GetString(_Message); }
        set{ GBKConvert.Instance.GetBytes(value, _Message); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    public TThostFtdcBankAccTypeType BankAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    public TThostFtdcBankAccTypeType BankSecuAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankSecuAcc = new byte[41];
    /// <summary>
    /// 期货单位帐号
    /// </summary>
    public string BankSecuAcc
    {
        get{ return GBKConvert.Instance.GetString(_BankSecuAcc); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSecuAcc); }
    }
    public TThostFtdcPwdFlagType BankPwdFlag;
    public TThostFtdcPwdFlagType SecuPwdFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    public TThostFtdcTransferStatusType TransferStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 银行发起银行资金转期货响应
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRspTransferField
{
    public CThostFtdcRspTransferField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    /// <summary>
    /// 期货公司流水号
    /// </summary>
    public int FutureSerial;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcYesNoIndicatorType VerifyCertNoFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    /// <summary>
    /// 转帐金额
    /// </summary>
    public double TradeAmount;
    /// <summary>
    /// 期货可取金额
    /// </summary>
    public double FutureFetchAmount;
    public TThostFtdcFeePayFlagType FeePayFlag;
    /// <summary>
    /// 应收客户费用
    /// </summary>
    public double CustFee;
    /// <summary>
    /// 应收期货公司费用
    /// </summary>
    public double BrokerFee;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _Message = new byte[129];
    /// <summary>
    /// 发送方给接收方的消息
    /// </summary>
    public string Message
    {
        get{ return GBKConvert.Instance.GetString(_Message); }
        set{ GBKConvert.Instance.GetBytes(value, _Message); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    public TThostFtdcBankAccTypeType BankAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    public TThostFtdcBankAccTypeType BankSecuAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankSecuAcc = new byte[41];
    /// <summary>
    /// 期货单位帐号
    /// </summary>
    public string BankSecuAcc
    {
        get{ return GBKConvert.Instance.GetString(_BankSecuAcc); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSecuAcc); }
    }
    public TThostFtdcPwdFlagType BankPwdFlag;
    public TThostFtdcPwdFlagType SecuPwdFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    public TThostFtdcTransferStatusType TransferStatus;
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 冲正请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqRepealField
{
    public CThostFtdcReqRepealField() {}
    /// <summary>
    /// 冲正时间间隔
    /// </summary>
    public int RepealTimeInterval;
    /// <summary>
    /// 已经冲正次数
    /// </summary>
    public int RepealedTimes;
    public TThostFtdcBankRepealFlagType BankRepealFlag;
    public TThostFtdcBrokerRepealFlagType BrokerRepealFlag;
    /// <summary>
    /// 被冲正平台流水号
    /// </summary>
    public int PlateRepealSerial;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankRepealSerial = new byte[13];
    /// <summary>
    /// 被冲正银行流水号
    /// </summary>
    public string BankRepealSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankRepealSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankRepealSerial); }
    }
    /// <summary>
    /// 被冲正期货流水号
    /// </summary>
    public int FutureRepealSerial;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    /// <summary>
    /// 期货公司流水号
    /// </summary>
    public int FutureSerial;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcYesNoIndicatorType VerifyCertNoFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    /// <summary>
    /// 转帐金额
    /// </summary>
    public double TradeAmount;
    /// <summary>
    /// 期货可取金额
    /// </summary>
    public double FutureFetchAmount;
    public TThostFtdcFeePayFlagType FeePayFlag;
    /// <summary>
    /// 应收客户费用
    /// </summary>
    public double CustFee;
    /// <summary>
    /// 应收期货公司费用
    /// </summary>
    public double BrokerFee;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _Message = new byte[129];
    /// <summary>
    /// 发送方给接收方的消息
    /// </summary>
    public string Message
    {
        get{ return GBKConvert.Instance.GetString(_Message); }
        set{ GBKConvert.Instance.GetBytes(value, _Message); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    public TThostFtdcBankAccTypeType BankAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    public TThostFtdcBankAccTypeType BankSecuAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankSecuAcc = new byte[41];
    /// <summary>
    /// 期货单位帐号
    /// </summary>
    public string BankSecuAcc
    {
        get{ return GBKConvert.Instance.GetString(_BankSecuAcc); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSecuAcc); }
    }
    public TThostFtdcPwdFlagType BankPwdFlag;
    public TThostFtdcPwdFlagType SecuPwdFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    public TThostFtdcTransferStatusType TransferStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 冲正响应
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRspRepealField
{
    public CThostFtdcRspRepealField() {}
    /// <summary>
    /// 冲正时间间隔
    /// </summary>
    public int RepealTimeInterval;
    /// <summary>
    /// 已经冲正次数
    /// </summary>
    public int RepealedTimes;
    public TThostFtdcBankRepealFlagType BankRepealFlag;
    public TThostFtdcBrokerRepealFlagType BrokerRepealFlag;
    /// <summary>
    /// 被冲正平台流水号
    /// </summary>
    public int PlateRepealSerial;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankRepealSerial = new byte[13];
    /// <summary>
    /// 被冲正银行流水号
    /// </summary>
    public string BankRepealSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankRepealSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankRepealSerial); }
    }
    /// <summary>
    /// 被冲正期货流水号
    /// </summary>
    public int FutureRepealSerial;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    /// <summary>
    /// 期货公司流水号
    /// </summary>
    public int FutureSerial;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcYesNoIndicatorType VerifyCertNoFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    /// <summary>
    /// 转帐金额
    /// </summary>
    public double TradeAmount;
    /// <summary>
    /// 期货可取金额
    /// </summary>
    public double FutureFetchAmount;
    public TThostFtdcFeePayFlagType FeePayFlag;
    /// <summary>
    /// 应收客户费用
    /// </summary>
    public double CustFee;
    /// <summary>
    /// 应收期货公司费用
    /// </summary>
    public double BrokerFee;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _Message = new byte[129];
    /// <summary>
    /// 发送方给接收方的消息
    /// </summary>
    public string Message
    {
        get{ return GBKConvert.Instance.GetString(_Message); }
        set{ GBKConvert.Instance.GetBytes(value, _Message); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    public TThostFtdcBankAccTypeType BankAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    public TThostFtdcBankAccTypeType BankSecuAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankSecuAcc = new byte[41];
    /// <summary>
    /// 期货单位帐号
    /// </summary>
    public string BankSecuAcc
    {
        get{ return GBKConvert.Instance.GetString(_BankSecuAcc); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSecuAcc); }
    }
    public TThostFtdcPwdFlagType BankPwdFlag;
    public TThostFtdcPwdFlagType SecuPwdFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    public TThostFtdcTransferStatusType TransferStatus;
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 查询账户信息请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqQueryAccountField
{
    public CThostFtdcReqQueryAccountField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    /// <summary>
    /// 期货公司流水号
    /// </summary>
    public int FutureSerial;
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcYesNoIndicatorType VerifyCertNoFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    public TThostFtdcBankAccTypeType BankAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    public TThostFtdcBankAccTypeType BankSecuAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankSecuAcc = new byte[41];
    /// <summary>
    /// 期货单位帐号
    /// </summary>
    public string BankSecuAcc
    {
        get{ return GBKConvert.Instance.GetString(_BankSecuAcc); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSecuAcc); }
    }
    public TThostFtdcPwdFlagType BankPwdFlag;
    public TThostFtdcPwdFlagType SecuPwdFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 查询账户信息响应
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRspQueryAccountField
{
    public CThostFtdcRspQueryAccountField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    /// <summary>
    /// 期货公司流水号
    /// </summary>
    public int FutureSerial;
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcYesNoIndicatorType VerifyCertNoFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    public TThostFtdcBankAccTypeType BankAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    public TThostFtdcBankAccTypeType BankSecuAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankSecuAcc = new byte[41];
    /// <summary>
    /// 期货单位帐号
    /// </summary>
    public string BankSecuAcc
    {
        get{ return GBKConvert.Instance.GetString(_BankSecuAcc); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSecuAcc); }
    }
    public TThostFtdcPwdFlagType BankPwdFlag;
    public TThostFtdcPwdFlagType SecuPwdFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    /// <summary>
    /// 银行可用金额
    /// </summary>
    public double BankUseAmount;
    /// <summary>
    /// 银行可取金额
    /// </summary>
    public double BankFetchAmount;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 期商签到签退
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcFutureSignIOField
{
    public CThostFtdcFutureSignIOField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
}
/// <summary>
/// 期商签到响应
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRspFutureSignInField
{
    public CThostFtdcRspFutureSignInField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _PinKey = new byte[129];
    /// <summary>
    /// PIN密钥
    /// </summary>
    public string PinKey
    {
        get{ return GBKConvert.Instance.GetString(_PinKey); }
        set{ GBKConvert.Instance.GetBytes(value, _PinKey); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _MacKey = new byte[129];
    /// <summary>
    /// MAC密钥
    /// </summary>
    public string MacKey
    {
        get{ return GBKConvert.Instance.GetString(_MacKey); }
        set{ GBKConvert.Instance.GetBytes(value, _MacKey); }
    }
}
/// <summary>
/// 期商签退请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqFutureSignOutField
{
    public CThostFtdcReqFutureSignOutField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
}
/// <summary>
/// 期商签退响应
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRspFutureSignOutField
{
    public CThostFtdcRspFutureSignOutField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
}
/// <summary>
/// 查询指定流水号的交易结果请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqQueryTradeResultBySerialField
{
    public CThostFtdcReqQueryTradeResultBySerialField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    /// <summary>
    /// 流水号
    /// </summary>
    public int Reference;
    public TThostFtdcInstitutionTypeType RefrenceIssureType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _RefrenceIssure = new byte[36];
    /// <summary>
    /// 本流水号发布者机构编码
    /// </summary>
    public string RefrenceIssure
    {
        get{ return GBKConvert.Instance.GetString(_RefrenceIssure); }
        set{ GBKConvert.Instance.GetBytes(value, _RefrenceIssure); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    /// <summary>
    /// 转帐金额
    /// </summary>
    public double TradeAmount;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 查询指定流水号的交易结果响应
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRspQueryTradeResultBySerialField
{
    public CThostFtdcRspQueryTradeResultBySerialField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
    /// <summary>
    /// 流水号
    /// </summary>
    public int Reference;
    public TThostFtdcInstitutionTypeType RefrenceIssureType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _RefrenceIssure = new byte[36];
    /// <summary>
    /// 本流水号发布者机构编码
    /// </summary>
    public string RefrenceIssure
    {
        get{ return GBKConvert.Instance.GetString(_RefrenceIssure); }
        set{ GBKConvert.Instance.GetBytes(value, _RefrenceIssure); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _OriginReturnCode = new byte[7];
    /// <summary>
    /// 原始返回代码
    /// </summary>
    public string OriginReturnCode
    {
        get{ return GBKConvert.Instance.GetString(_OriginReturnCode); }
        set{ GBKConvert.Instance.GetBytes(value, _OriginReturnCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _OriginDescrInfoForReturnCode = new byte[129];
    /// <summary>
    /// 原始返回码描述
    /// </summary>
    public string OriginDescrInfoForReturnCode
    {
        get{ return GBKConvert.Instance.GetString(_OriginDescrInfoForReturnCode); }
        set{ GBKConvert.Instance.GetBytes(value, _OriginDescrInfoForReturnCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    /// <summary>
    /// 转帐金额
    /// </summary>
    public double TradeAmount;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
}
/// <summary>
/// 日终文件就绪请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqDayEndFileReadyField
{
    public CThostFtdcReqDayEndFileReadyField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    public TThostFtdcFileBusinessCodeType FileBusinessCode;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
}
/// <summary>
/// 返回结果
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReturnResultField
{
    public CThostFtdcReturnResultField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _ReturnCode = new byte[7];
    /// <summary>
    /// 返回代码
    /// </summary>
    public string ReturnCode
    {
        get{ return GBKConvert.Instance.GetString(_ReturnCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ReturnCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _DescrInfoForReturnCode = new byte[129];
    /// <summary>
    /// 返回码描述
    /// </summary>
    public string DescrInfoForReturnCode
    {
        get{ return GBKConvert.Instance.GetString(_DescrInfoForReturnCode); }
        set{ GBKConvert.Instance.GetBytes(value, _DescrInfoForReturnCode); }
    }
}
/// <summary>
/// 验证期货资金密码
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcVerifyFuturePasswordField
{
    public CThostFtdcVerifyFuturePasswordField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
}
/// <summary>
/// 验证客户信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcVerifyCustInfoField
{
    public CThostFtdcVerifyCustInfoField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 验证期货资金密码和客户信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcVerifyFuturePasswordAndCustInfoField
{
    public CThostFtdcVerifyFuturePasswordAndCustInfoField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 验证期货资金密码和客户信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcDepositResultInformField
{
    public CThostFtdcDepositResultInformField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=15)]
    public readonly byte[] _DepositSeqNo = new byte[15];
    /// <summary>
    /// 出入金流水号，该流水号为银期报盘返回的流水号
    /// </summary>
    public string DepositSeqNo
    {
        get{ return GBKConvert.Instance.GetString(_DepositSeqNo); }
        set{ GBKConvert.Instance.GetBytes(value, _DepositSeqNo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 入金金额
    /// </summary>
    public double Deposit;
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _ReturnCode = new byte[7];
    /// <summary>
    /// 返回代码
    /// </summary>
    public string ReturnCode
    {
        get{ return GBKConvert.Instance.GetString(_ReturnCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ReturnCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _DescrInfoForReturnCode = new byte[129];
    /// <summary>
    /// 返回码描述
    /// </summary>
    public string DescrInfoForReturnCode
    {
        get{ return GBKConvert.Instance.GetString(_DescrInfoForReturnCode); }
        set{ GBKConvert.Instance.GetBytes(value, _DescrInfoForReturnCode); }
    }
}
/// <summary>
/// 交易核心向银期报盘发出密钥同步请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqSyncKeyField
{
    public CThostFtdcReqSyncKeyField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _Message = new byte[129];
    /// <summary>
    /// 交易核心给银期报盘的消息
    /// </summary>
    public string Message
    {
        get{ return GBKConvert.Instance.GetString(_Message); }
        set{ GBKConvert.Instance.GetBytes(value, _Message); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
}
/// <summary>
/// 交易核心向银期报盘发出密钥同步响应
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRspSyncKeyField
{
    public CThostFtdcRspSyncKeyField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _Message = new byte[129];
    /// <summary>
    /// 交易核心给银期报盘的消息
    /// </summary>
    public string Message
    {
        get{ return GBKConvert.Instance.GetString(_Message); }
        set{ GBKConvert.Instance.GetBytes(value, _Message); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
}
/// <summary>
/// 查询账户信息通知
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcNotifyQueryAccountField
{
    public CThostFtdcNotifyQueryAccountField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    /// <summary>
    /// 期货公司流水号
    /// </summary>
    public int FutureSerial;
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcYesNoIndicatorType VerifyCertNoFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    public TThostFtdcBankAccTypeType BankAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    public TThostFtdcBankAccTypeType BankSecuAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankSecuAcc = new byte[41];
    /// <summary>
    /// 期货单位帐号
    /// </summary>
    public string BankSecuAcc
    {
        get{ return GBKConvert.Instance.GetString(_BankSecuAcc); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSecuAcc); }
    }
    public TThostFtdcPwdFlagType BankPwdFlag;
    public TThostFtdcPwdFlagType SecuPwdFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    /// <summary>
    /// 银行可用金额
    /// </summary>
    public double BankUseAmount;
    /// <summary>
    /// 银行可取金额
    /// </summary>
    public double BankFetchAmount;
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 银期转账交易流水表
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTransferSerialField
{
    public CThostFtdcTransferSerialField() {}
    /// <summary>
    /// 平台流水号
    /// </summary>
    public int PlateSerial;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易发起方日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 交易代码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    /// <summary>
    /// 会话编号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行编码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构编码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    public TThostFtdcBankAccTypeType BankAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期货公司编码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    public TThostFtdcFutureAccTypeType FutureAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 期货公司流水号
    /// </summary>
    public int FutureSerial;
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    /// <summary>
    /// 交易金额
    /// </summary>
    public double TradeAmount;
    /// <summary>
    /// 应收客户费用
    /// </summary>
    public double CustFee;
    /// <summary>
    /// 应收期货公司费用
    /// </summary>
    public double BrokerFee;
    public TThostFtdcAvailabilityFlagType AvailabilityFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperatorCode = new byte[17];
    /// <summary>
    /// 操作员
    /// </summary>
    public string OperatorCode
    {
        get{ return GBKConvert.Instance.GetString(_OperatorCode); }
        set{ GBKConvert.Instance.GetBytes(value, _OperatorCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankNewAccount = new byte[41];
    /// <summary>
    /// 新银行帐号
    /// </summary>
    public string BankNewAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankNewAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankNewAccount); }
    }
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
}
/// <summary>
/// 请求查询转帐流水
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryTransferSerialField
{
    public CThostFtdcQryTransferSerialField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行编码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
}
/// <summary>
/// 期商签到通知
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcNotifyFutureSignInField
{
    public CThostFtdcNotifyFutureSignInField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _PinKey = new byte[129];
    /// <summary>
    /// PIN密钥
    /// </summary>
    public string PinKey
    {
        get{ return GBKConvert.Instance.GetString(_PinKey); }
        set{ GBKConvert.Instance.GetBytes(value, _PinKey); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _MacKey = new byte[129];
    /// <summary>
    /// MAC密钥
    /// </summary>
    public string MacKey
    {
        get{ return GBKConvert.Instance.GetString(_MacKey); }
        set{ GBKConvert.Instance.GetBytes(value, _MacKey); }
    }
}
/// <summary>
/// 期商签退通知
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcNotifyFutureSignOutField
{
    public CThostFtdcNotifyFutureSignOutField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
}
/// <summary>
/// 交易核心向银期报盘发出密钥同步处理结果的通知
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcNotifySyncKeyField
{
    public CThostFtdcNotifySyncKeyField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=129)]
    public readonly byte[] _Message = new byte[129];
    /// <summary>
    /// 交易核心给银期报盘的消息
    /// </summary>
    public string Message
    {
        get{ return GBKConvert.Instance.GetString(_Message); }
        set{ GBKConvert.Instance.GetBytes(value, _Message); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 请求编号
    /// </summary>
    public int RequestID;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
}
/// <summary>
/// 请求查询银期签约关系
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryAccountregisterField
{
    public CThostFtdcQryAccountregisterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行编码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构编码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
}
/// <summary>
/// 客户开销户信息表
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcAccountregisterField
{
    public CThostFtdcAccountregisterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDay = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDay
    {
        get{ return GBKConvert.Instance.GetString(_TradeDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行编码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构编码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期货公司编码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期货公司分支机构编码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    public TThostFtdcOpenOrDestroyType OpenOrDestroy;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _RegDate = new byte[9];
    /// <summary>
    /// 签约日期
    /// </summary>
    public string RegDate
    {
        get{ return GBKConvert.Instance.GetString(_RegDate); }
        set{ GBKConvert.Instance.GetBytes(value, _RegDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _OutDate = new byte[9];
    /// <summary>
    /// 解约日期
    /// </summary>
    public string OutDate
    {
        get{ return GBKConvert.Instance.GetString(_OutDate); }
        set{ GBKConvert.Instance.GetBytes(value, _OutDate); }
    }
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    public TThostFtdcCustTypeType CustType;
    public TThostFtdcBankAccTypeType BankAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 银期开户信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcOpenAccountField
{
    public CThostFtdcOpenAccountField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcGenderType Gender;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _CountryCode = new byte[21];
    /// <summary>
    /// 国家代码
    /// </summary>
    public string CountryCode
    {
        get{ return GBKConvert.Instance.GetString(_CountryCode); }
        set{ GBKConvert.Instance.GetBytes(value, _CountryCode); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=101)]
    public readonly byte[] _Address = new byte[101];
    /// <summary>
    /// 地址
    /// </summary>
    public string Address
    {
        get{ return GBKConvert.Instance.GetString(_Address); }
        set{ GBKConvert.Instance.GetBytes(value, _Address); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _ZipCode = new byte[7];
    /// <summary>
    /// 邮编
    /// </summary>
    public string ZipCode
    {
        get{ return GBKConvert.Instance.GetString(_ZipCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ZipCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Telephone = new byte[41];
    /// <summary>
    /// 电话号码
    /// </summary>
    public string Telephone
    {
        get{ return GBKConvert.Instance.GetString(_Telephone); }
        set{ GBKConvert.Instance.GetBytes(value, _Telephone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MobilePhone = new byte[21];
    /// <summary>
    /// 手机
    /// </summary>
    public string MobilePhone
    {
        get{ return GBKConvert.Instance.GetString(_MobilePhone); }
        set{ GBKConvert.Instance.GetBytes(value, _MobilePhone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Fax = new byte[41];
    /// <summary>
    /// 传真
    /// </summary>
    public string Fax
    {
        get{ return GBKConvert.Instance.GetString(_Fax); }
        set{ GBKConvert.Instance.GetBytes(value, _Fax); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _EMail = new byte[41];
    /// <summary>
    /// 电子邮件
    /// </summary>
    public string EMail
    {
        get{ return GBKConvert.Instance.GetString(_EMail); }
        set{ GBKConvert.Instance.GetBytes(value, _EMail); }
    }
    public TThostFtdcMoneyAccountStatusType MoneyAccountStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcYesNoIndicatorType VerifyCertNoFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    public TThostFtdcCashExchangeCodeType CashExchangeCode;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    public TThostFtdcBankAccTypeType BankAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    public TThostFtdcBankAccTypeType BankSecuAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankSecuAcc = new byte[41];
    /// <summary>
    /// 期货单位帐号
    /// </summary>
    public string BankSecuAcc
    {
        get{ return GBKConvert.Instance.GetString(_BankSecuAcc); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSecuAcc); }
    }
    public TThostFtdcPwdFlagType BankPwdFlag;
    public TThostFtdcPwdFlagType SecuPwdFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 银期销户信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcCancelAccountField
{
    public CThostFtdcCancelAccountField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcGenderType Gender;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _CountryCode = new byte[21];
    /// <summary>
    /// 国家代码
    /// </summary>
    public string CountryCode
    {
        get{ return GBKConvert.Instance.GetString(_CountryCode); }
        set{ GBKConvert.Instance.GetBytes(value, _CountryCode); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=101)]
    public readonly byte[] _Address = new byte[101];
    /// <summary>
    /// 地址
    /// </summary>
    public string Address
    {
        get{ return GBKConvert.Instance.GetString(_Address); }
        set{ GBKConvert.Instance.GetBytes(value, _Address); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _ZipCode = new byte[7];
    /// <summary>
    /// 邮编
    /// </summary>
    public string ZipCode
    {
        get{ return GBKConvert.Instance.GetString(_ZipCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ZipCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Telephone = new byte[41];
    /// <summary>
    /// 电话号码
    /// </summary>
    public string Telephone
    {
        get{ return GBKConvert.Instance.GetString(_Telephone); }
        set{ GBKConvert.Instance.GetBytes(value, _Telephone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MobilePhone = new byte[21];
    /// <summary>
    /// 手机
    /// </summary>
    public string MobilePhone
    {
        get{ return GBKConvert.Instance.GetString(_MobilePhone); }
        set{ GBKConvert.Instance.GetBytes(value, _MobilePhone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Fax = new byte[41];
    /// <summary>
    /// 传真
    /// </summary>
    public string Fax
    {
        get{ return GBKConvert.Instance.GetString(_Fax); }
        set{ GBKConvert.Instance.GetBytes(value, _Fax); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _EMail = new byte[41];
    /// <summary>
    /// 电子邮件
    /// </summary>
    public string EMail
    {
        get{ return GBKConvert.Instance.GetString(_EMail); }
        set{ GBKConvert.Instance.GetBytes(value, _EMail); }
    }
    public TThostFtdcMoneyAccountStatusType MoneyAccountStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcYesNoIndicatorType VerifyCertNoFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    public TThostFtdcCashExchangeCodeType CashExchangeCode;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    public TThostFtdcBankAccTypeType BankAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=3)]
    public readonly byte[] _DeviceID = new byte[3];
    /// <summary>
    /// 渠道标志
    /// </summary>
    public string DeviceID
    {
        get{ return GBKConvert.Instance.GetString(_DeviceID); }
        set{ GBKConvert.Instance.GetBytes(value, _DeviceID); }
    }
    public TThostFtdcBankAccTypeType BankSecuAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankSecuAcc = new byte[41];
    /// <summary>
    /// 期货单位帐号
    /// </summary>
    public string BankSecuAcc
    {
        get{ return GBKConvert.Instance.GetString(_BankSecuAcc); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSecuAcc); }
    }
    public TThostFtdcPwdFlagType BankPwdFlag;
    public TThostFtdcPwdFlagType SecuPwdFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _OperNo = new byte[17];
    /// <summary>
    /// 交易柜员
    /// </summary>
    public string OperNo
    {
        get{ return GBKConvert.Instance.GetString(_OperNo); }
        set{ GBKConvert.Instance.GetBytes(value, _OperNo); }
    }
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户标识
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 银期变更银行账号信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcChangeAccountField
{
    public CThostFtdcChangeAccountField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _CustomerName = new byte[51];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcGenderType Gender;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _CountryCode = new byte[21];
    /// <summary>
    /// 国家代码
    /// </summary>
    public string CountryCode
    {
        get{ return GBKConvert.Instance.GetString(_CountryCode); }
        set{ GBKConvert.Instance.GetBytes(value, _CountryCode); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=101)]
    public readonly byte[] _Address = new byte[101];
    /// <summary>
    /// 地址
    /// </summary>
    public string Address
    {
        get{ return GBKConvert.Instance.GetString(_Address); }
        set{ GBKConvert.Instance.GetBytes(value, _Address); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _ZipCode = new byte[7];
    /// <summary>
    /// 邮编
    /// </summary>
    public string ZipCode
    {
        get{ return GBKConvert.Instance.GetString(_ZipCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ZipCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Telephone = new byte[41];
    /// <summary>
    /// 电话号码
    /// </summary>
    public string Telephone
    {
        get{ return GBKConvert.Instance.GetString(_Telephone); }
        set{ GBKConvert.Instance.GetBytes(value, _Telephone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MobilePhone = new byte[21];
    /// <summary>
    /// 手机
    /// </summary>
    public string MobilePhone
    {
        get{ return GBKConvert.Instance.GetString(_MobilePhone); }
        set{ GBKConvert.Instance.GetBytes(value, _MobilePhone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Fax = new byte[41];
    /// <summary>
    /// 传真
    /// </summary>
    public string Fax
    {
        get{ return GBKConvert.Instance.GetString(_Fax); }
        set{ GBKConvert.Instance.GetBytes(value, _Fax); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _EMail = new byte[41];
    /// <summary>
    /// 电子邮件
    /// </summary>
    public string EMail
    {
        get{ return GBKConvert.Instance.GetString(_EMail); }
        set{ GBKConvert.Instance.GetBytes(value, _EMail); }
    }
    public TThostFtdcMoneyAccountStatusType MoneyAccountStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _NewBankAccount = new byte[41];
    /// <summary>
    /// 新银行帐号
    /// </summary>
    public string NewBankAccount
    {
        get{ return GBKConvert.Instance.GetString(_NewBankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _NewBankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _NewBankPassWord = new byte[41];
    /// <summary>
    /// 新银行密码
    /// </summary>
    public string NewBankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_NewBankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _NewBankPassWord); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    public TThostFtdcBankAccTypeType BankAccType;
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcYesNoIndicatorType VerifyCertNoFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    public TThostFtdcPwdFlagType BankPwdFlag;
    public TThostFtdcPwdFlagType SecuPwdFlag;
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _LongCustomerName = new byte[161];
    /// <summary>
    /// 长客户姓名
    /// </summary>
    public string LongCustomerName
    {
        get{ return GBKConvert.Instance.GetString(_LongCustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _LongCustomerName); }
    }
}
/// <summary>
/// 二级代理操作员银期权限
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSecAgentACIDMapField
{
    public CThostFtdcSecAgentACIDMapField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 资金账户
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BrokerSecAgentID = new byte[13];
    /// <summary>
    /// 境外中介机构资金帐号
    /// </summary>
    public string BrokerSecAgentID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerSecAgentID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerSecAgentID); }
    }
}
/// <summary>
/// 二级代理操作员银期权限查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySecAgentACIDMapField
{
    public CThostFtdcQrySecAgentACIDMapField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 资金账户
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
}
/// <summary>
/// 灾备中心交易权限
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcUserRightsAssignField
{
    public CThostFtdcUserRightsAssignField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 应用单元代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    /// <summary>
    /// 交易中心代码
    /// </summary>
    public int DRIdentityID;
}
/// <summary>
/// 经济公司是否有在本标示的交易权限
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcBrokerUserRightAssignField
{
    public CThostFtdcBrokerUserRightAssignField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 应用单元代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    /// <summary>
    /// 交易中心代码
    /// </summary>
    public int DRIdentityID;
    /// <summary>
    /// 能否交易
    /// </summary>
    public int Tradeable;
}
/// <summary>
/// 灾备交易转换报文
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcDRTransferField
{
    public CThostFtdcDRTransferField() {}
    /// <summary>
    /// 原交易中心代码
    /// </summary>
    public int OrigDRIdentityID;
    /// <summary>
    /// 目标交易中心代码
    /// </summary>
    public int DestDRIdentityID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _OrigBrokerID = new byte[11];
    /// <summary>
    /// 原应用单元代码
    /// </summary>
    public string OrigBrokerID
    {
        get{ return GBKConvert.Instance.GetString(_OrigBrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _OrigBrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _DestBrokerID = new byte[11];
    /// <summary>
    /// 目标易用单元代码
    /// </summary>
    public string DestBrokerID
    {
        get{ return GBKConvert.Instance.GetString(_DestBrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _DestBrokerID); }
    }
}
/// <summary>
/// Fens用户信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcFensUserInfoField
{
    public CThostFtdcFensUserInfoField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcLoginModeType LoginMode;
}
/// <summary>
/// 当前银期所属交易中心
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcCurrTransferIdentityField
{
    public CThostFtdcCurrTransferIdentityField() {}
    /// <summary>
    /// 交易中心代码
    /// </summary>
    public int IdentityID;
}
/// <summary>
/// 禁止登录用户
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcLoginForbiddenUserField
{
    public CThostFtdcLoginForbiddenUserField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 查询禁止登录用户
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryLoginForbiddenUserField
{
    public CThostFtdcQryLoginForbiddenUserField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
}
/// <summary>
/// 资金账户基本准备金
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTradingAccountReserveField
{
    public CThostFtdcTradingAccountReserveField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    /// <summary>
    /// 基本准备金
    /// </summary>
    public double Reserve;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
}
/// <summary>
/// 查询禁止登录IP
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryLoginForbiddenIPField
{
    public CThostFtdcQryLoginForbiddenIPField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 查询IP列表
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryIPListField
{
    public CThostFtdcQryIPListField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 查询用户下单权限分配表
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryUserRightsAssignField
{
    public CThostFtdcQryUserRightsAssignField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 应用单元代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
}
/// <summary>
/// 银期预约开户确认请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReserveOpenAccountConfirmField
{
    public CThostFtdcReserveOpenAccountConfirmField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _CustomerName = new byte[161];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcGenderType Gender;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _CountryCode = new byte[21];
    /// <summary>
    /// 国家代码
    /// </summary>
    public string CountryCode
    {
        get{ return GBKConvert.Instance.GetString(_CountryCode); }
        set{ GBKConvert.Instance.GetBytes(value, _CountryCode); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=101)]
    public readonly byte[] _Address = new byte[101];
    /// <summary>
    /// 地址
    /// </summary>
    public string Address
    {
        get{ return GBKConvert.Instance.GetString(_Address); }
        set{ GBKConvert.Instance.GetBytes(value, _Address); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _ZipCode = new byte[7];
    /// <summary>
    /// 邮编
    /// </summary>
    public string ZipCode
    {
        get{ return GBKConvert.Instance.GetString(_ZipCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ZipCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Telephone = new byte[41];
    /// <summary>
    /// 电话号码
    /// </summary>
    public string Telephone
    {
        get{ return GBKConvert.Instance.GetString(_Telephone); }
        set{ GBKConvert.Instance.GetBytes(value, _Telephone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MobilePhone = new byte[21];
    /// <summary>
    /// 手机
    /// </summary>
    public string MobilePhone
    {
        get{ return GBKConvert.Instance.GetString(_MobilePhone); }
        set{ GBKConvert.Instance.GetBytes(value, _MobilePhone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Fax = new byte[41];
    /// <summary>
    /// 传真
    /// </summary>
    public string Fax
    {
        get{ return GBKConvert.Instance.GetString(_Fax); }
        set{ GBKConvert.Instance.GetBytes(value, _Fax); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _EMail = new byte[41];
    /// <summary>
    /// 电子邮件
    /// </summary>
    public string EMail
    {
        get{ return GBKConvert.Instance.GetString(_EMail); }
        set{ GBKConvert.Instance.GetBytes(value, _EMail); }
    }
    public TThostFtdcMoneyAccountStatusType MoneyAccountStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcYesNoIndicatorType VerifyCertNoFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    public TThostFtdcBankAccTypeType BankAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 期货密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankReserveOpenSeq = new byte[13];
    /// <summary>
    /// 预约开户银行流水号
    /// </summary>
    public string BankReserveOpenSeq
    {
        get{ return GBKConvert.Instance.GetString(_BankReserveOpenSeq); }
        set{ GBKConvert.Instance.GetBytes(value, _BankReserveOpenSeq); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _BookDate = new byte[9];
    /// <summary>
    /// 预约开户日期
    /// </summary>
    public string BookDate
    {
        get{ return GBKConvert.Instance.GetString(_BookDate); }
        set{ GBKConvert.Instance.GetBytes(value, _BookDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BookPsw = new byte[41];
    /// <summary>
    /// 预约开户验证密码
    /// </summary>
    public string BookPsw
    {
        get{ return GBKConvert.Instance.GetString(_BookPsw); }
        set{ GBKConvert.Instance.GetBytes(value, _BookPsw); }
    }
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
}
/// <summary>
/// 银期预约开户
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReserveOpenAccountField
{
    public CThostFtdcReserveOpenAccountField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _TradeCode = new byte[7];
    /// <summary>
    /// 业务功能码
    /// </summary>
    public string TradeCode
    {
        get{ return GBKConvert.Instance.GetString(_TradeCode); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行代码
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _BankBranchID = new byte[5];
    /// <summary>
    /// 银行分支机构代码
    /// </summary>
    public string BankBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BankBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 期商代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _BrokerBranchID = new byte[31];
    /// <summary>
    /// 期商分支机构代码
    /// </summary>
    public string BrokerBranchID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerBranchID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerBranchID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeDate = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradeDate
    {
        get{ return GBKConvert.Instance.GetString(_TradeDate); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradeTime = new byte[9];
    /// <summary>
    /// 交易时间
    /// </summary>
    public string TradeTime
    {
        get{ return GBKConvert.Instance.GetString(_TradeTime); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BankSerial = new byte[13];
    /// <summary>
    /// 银行流水号
    /// </summary>
    public string BankSerial
    {
        get{ return GBKConvert.Instance.GetString(_BankSerial); }
        set{ GBKConvert.Instance.GetBytes(value, _BankSerial); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易系统日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 银期平台消息流水号
    /// </summary>
    public int PlateSerial;
    public TThostFtdcLastFragmentType LastFragment;
    /// <summary>
    /// 会话号
    /// </summary>
    public int SessionID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=161)]
    public readonly byte[] _CustomerName = new byte[161];
    /// <summary>
    /// 客户姓名
    /// </summary>
    public string CustomerName
    {
        get{ return GBKConvert.Instance.GetString(_CustomerName); }
        set{ GBKConvert.Instance.GetBytes(value, _CustomerName); }
    }
    public TThostFtdcIdCardTypeType IdCardType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _IdentifiedCardNo = new byte[51];
    /// <summary>
    /// 证件号码
    /// </summary>
    public string IdentifiedCardNo
    {
        get{ return GBKConvert.Instance.GetString(_IdentifiedCardNo); }
        set{ GBKConvert.Instance.GetBytes(value, _IdentifiedCardNo); }
    }
    public TThostFtdcGenderType Gender;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _CountryCode = new byte[21];
    /// <summary>
    /// 国家代码
    /// </summary>
    public string CountryCode
    {
        get{ return GBKConvert.Instance.GetString(_CountryCode); }
        set{ GBKConvert.Instance.GetBytes(value, _CountryCode); }
    }
    public TThostFtdcCustTypeType CustType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=101)]
    public readonly byte[] _Address = new byte[101];
    /// <summary>
    /// 地址
    /// </summary>
    public string Address
    {
        get{ return GBKConvert.Instance.GetString(_Address); }
        set{ GBKConvert.Instance.GetBytes(value, _Address); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=7)]
    public readonly byte[] _ZipCode = new byte[7];
    /// <summary>
    /// 邮编
    /// </summary>
    public string ZipCode
    {
        get{ return GBKConvert.Instance.GetString(_ZipCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ZipCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Telephone = new byte[41];
    /// <summary>
    /// 电话号码
    /// </summary>
    public string Telephone
    {
        get{ return GBKConvert.Instance.GetString(_Telephone); }
        set{ GBKConvert.Instance.GetBytes(value, _Telephone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MobilePhone = new byte[21];
    /// <summary>
    /// 手机
    /// </summary>
    public string MobilePhone
    {
        get{ return GBKConvert.Instance.GetString(_MobilePhone); }
        set{ GBKConvert.Instance.GetBytes(value, _MobilePhone); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Fax = new byte[41];
    /// <summary>
    /// 传真
    /// </summary>
    public string Fax
    {
        get{ return GBKConvert.Instance.GetString(_Fax); }
        set{ GBKConvert.Instance.GetBytes(value, _Fax); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _EMail = new byte[41];
    /// <summary>
    /// 电子邮件
    /// </summary>
    public string EMail
    {
        get{ return GBKConvert.Instance.GetString(_EMail); }
        set{ GBKConvert.Instance.GetBytes(value, _EMail); }
    }
    public TThostFtdcMoneyAccountStatusType MoneyAccountStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行帐号
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankPassWord = new byte[41];
    /// <summary>
    /// 银行密码
    /// </summary>
    public string BankPassWord
    {
        get{ return GBKConvert.Instance.GetString(_BankPassWord); }
        set{ GBKConvert.Instance.GetBytes(value, _BankPassWord); }
    }
    /// <summary>
    /// 安装编号
    /// </summary>
    public int InstallID;
    public TThostFtdcYesNoIndicatorType VerifyCertNoFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _Digest = new byte[36];
    /// <summary>
    /// 摘要
    /// </summary>
    public string Digest
    {
        get{ return GBKConvert.Instance.GetString(_Digest); }
        set{ GBKConvert.Instance.GetBytes(value, _Digest); }
    }
    public TThostFtdcBankAccTypeType BankAccType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _BrokerIDByBank = new byte[33];
    /// <summary>
    /// 期货公司银行编码
    /// </summary>
    public string BrokerIDByBank
    {
        get{ return GBKConvert.Instance.GetString(_BrokerIDByBank); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerIDByBank); }
    }
    /// <summary>
    /// 交易ID
    /// </summary>
    public int TID;
    public TThostFtdcReserveOpenAccStasType ReserveOpenAccStas;
    /// <summary>
    /// 错误代码
    /// </summary>
    public int ErrorID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ErrorMsg = new byte[81];
    /// <summary>
    /// 错误信息
    /// </summary>
    public string ErrorMsg
    {
        get{ return GBKConvert.Instance.GetString(_ErrorMsg); }
        set{ GBKConvert.Instance.GetBytes(value, _ErrorMsg); }
    }
}
/// <summary>
/// 银行账户属性
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcAccountPropertyField
{
    public CThostFtdcAccountPropertyField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _BankID = new byte[4];
    /// <summary>
    /// 银行统一标识类型
    /// </summary>
    public string BankID
    {
        get{ return GBKConvert.Instance.GetString(_BankID); }
        set{ GBKConvert.Instance.GetBytes(value, _BankID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _BankAccount = new byte[41];
    /// <summary>
    /// 银行账户
    /// </summary>
    public string BankAccount
    {
        get{ return GBKConvert.Instance.GetString(_BankAccount); }
        set{ GBKConvert.Instance.GetBytes(value, _BankAccount); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=101)]
    public readonly byte[] _OpenName = new byte[101];
    /// <summary>
    /// 银行账户的开户人名称
    /// </summary>
    public string OpenName
    {
        get{ return GBKConvert.Instance.GetString(_OpenName); }
        set{ GBKConvert.Instance.GetBytes(value, _OpenName); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=101)]
    public readonly byte[] _OpenBank = new byte[101];
    /// <summary>
    /// 银行账户的开户行
    /// </summary>
    public string OpenBank
    {
        get{ return GBKConvert.Instance.GetString(_OpenBank); }
        set{ GBKConvert.Instance.GetBytes(value, _OpenBank); }
    }
    /// <summary>
    /// 是否活跃
    /// </summary>
    public int IsActive;
    public TThostFtdcAccountSourceTypeType AccountSourceType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _OpenDate = new byte[9];
    /// <summary>
    /// 开户日期
    /// </summary>
    public string OpenDate
    {
        get{ return GBKConvert.Instance.GetString(_OpenDate); }
        set{ GBKConvert.Instance.GetBytes(value, _OpenDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _CancelDate = new byte[9];
    /// <summary>
    /// 注销日期
    /// </summary>
    public string CancelDate
    {
        get{ return GBKConvert.Instance.GetString(_CancelDate); }
        set{ GBKConvert.Instance.GetBytes(value, _CancelDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=65)]
    public readonly byte[] _OperatorID = new byte[65];
    /// <summary>
    /// 录入员代码
    /// </summary>
    public string OperatorID
    {
        get{ return GBKConvert.Instance.GetString(_OperatorID); }
        set{ GBKConvert.Instance.GetBytes(value, _OperatorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _OperateDate = new byte[9];
    /// <summary>
    /// 录入日期
    /// </summary>
    public string OperateDate
    {
        get{ return GBKConvert.Instance.GetString(_OperateDate); }
        set{ GBKConvert.Instance.GetBytes(value, _OperateDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _OperateTime = new byte[9];
    /// <summary>
    /// 录入时间
    /// </summary>
    public string OperateTime
    {
        get{ return GBKConvert.Instance.GetString(_OperateTime); }
        set{ GBKConvert.Instance.GetBytes(value, _OperateTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
}
/// <summary>
/// 查询当前交易中心
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryCurrDRIdentityField
{
    public CThostFtdcQryCurrDRIdentityField() {}
    /// <summary>
    /// 交易中心代码
    /// </summary>
    public int DRIdentityID;
}
/// <summary>
/// 当前交易中心
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcCurrDRIdentityField
{
    public CThostFtdcCurrDRIdentityField() {}
    /// <summary>
    /// 交易中心代码
    /// </summary>
    public int DRIdentityID;
}
/// <summary>
/// 查询二级代理商资金校验模式
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySecAgentCheckModeField
{
    public CThostFtdcQrySecAgentCheckModeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
}
/// <summary>
/// 查询二级代理商信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySecAgentTradeInfoField
{
    public CThostFtdcQrySecAgentTradeInfoField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _BrokerSecAgentID = new byte[13];
    /// <summary>
    /// 境外中介机构资金帐号
    /// </summary>
    public string BrokerSecAgentID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerSecAgentID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerSecAgentID); }
    }
}
/// <summary>
/// 用户发出获取安全安全登陆方法请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqUserAuthMethodField
{
    public CThostFtdcReqUserAuthMethodField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
}
/// <summary>
/// 用户发出获取安全安全登陆方法回复
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRspUserAuthMethodField
{
    public CThostFtdcRspUserAuthMethodField() {}
    /// <summary>
    /// 当前可以用的认证模式
    /// </summary>
    public int UsableAuthMethod;
}
/// <summary>
/// 用户发出获取安全安全登陆方法请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqGenUserCaptchaField
{
    public CThostFtdcReqGenUserCaptchaField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
}
/// <summary>
/// 生成的图片验证码信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRspGenUserCaptchaField
{
    public CThostFtdcRspGenUserCaptchaField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    /// <summary>
    /// 图片信息长度
    /// </summary>
    public int CaptchaInfoLen;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=2561)]
    public readonly byte[] _CaptchaInfo = new byte[2561];
    /// <summary>
    /// 图片信息
    /// </summary>
    public string CaptchaInfo
    {
        get{ return GBKConvert.Instance.GetString(_CaptchaInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _CaptchaInfo); }
    }
}
/// <summary>
/// 用户发出获取安全安全登陆方法请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqGenUserTextField
{
    public CThostFtdcReqGenUserTextField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
}
/// <summary>
/// 短信验证码生成的回复
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRspGenUserTextField
{
    public CThostFtdcRspGenUserTextField() {}
    /// <summary>
    /// 短信验证码序号
    /// </summary>
    public int UserTextSeq;
}
/// <summary>
/// 用户发出带图形验证码的登录请求请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqUserLoginWithCaptchaField
{
    public CThostFtdcReqUserLoginWithCaptchaField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UserProductInfo = new byte[11];
    /// <summary>
    /// 用户端产品信息
    /// </summary>
    public string UserProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _InterfaceProductInfo = new byte[11];
    /// <summary>
    /// 接口端产品信息
    /// </summary>
    public string InterfaceProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_InterfaceProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _InterfaceProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ProtocolInfo = new byte[11];
    /// <summary>
    /// 协议信息
    /// </summary>
    public string ProtocolInfo
    {
        get{ return GBKConvert.Instance.GetString(_ProtocolInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _ProtocolInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _LoginRemark = new byte[36];
    /// <summary>
    /// 登录备注
    /// </summary>
    public string LoginRemark
    {
        get{ return GBKConvert.Instance.GetString(_LoginRemark); }
        set{ GBKConvert.Instance.GetBytes(value, _LoginRemark); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Captcha = new byte[41];
    /// <summary>
    /// 图形验证码的文字内容
    /// </summary>
    public string Captcha
    {
        get{ return GBKConvert.Instance.GetString(_Captcha); }
        set{ GBKConvert.Instance.GetBytes(value, _Captcha); }
    }
    /// <summary>
    /// 终端IP端口
    /// </summary>
    public int ClientIPPort;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _ClientIPAddress = new byte[33];
    /// <summary>
    /// 终端IP地址
    /// </summary>
    public string ClientIPAddress
    {
        get{ return GBKConvert.Instance.GetString(_ClientIPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientIPAddress); }
    }
}
/// <summary>
/// 用户发出带短信验证码的登录请求请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqUserLoginWithTextField
{
    public CThostFtdcReqUserLoginWithTextField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UserProductInfo = new byte[11];
    /// <summary>
    /// 用户端产品信息
    /// </summary>
    public string UserProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _InterfaceProductInfo = new byte[11];
    /// <summary>
    /// 接口端产品信息
    /// </summary>
    public string InterfaceProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_InterfaceProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _InterfaceProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ProtocolInfo = new byte[11];
    /// <summary>
    /// 协议信息
    /// </summary>
    public string ProtocolInfo
    {
        get{ return GBKConvert.Instance.GetString(_ProtocolInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _ProtocolInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _LoginRemark = new byte[36];
    /// <summary>
    /// 登录备注
    /// </summary>
    public string LoginRemark
    {
        get{ return GBKConvert.Instance.GetString(_LoginRemark); }
        set{ GBKConvert.Instance.GetBytes(value, _LoginRemark); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Text = new byte[41];
    /// <summary>
    /// 短信验证码文字内容
    /// </summary>
    public string Text
    {
        get{ return GBKConvert.Instance.GetString(_Text); }
        set{ GBKConvert.Instance.GetBytes(value, _Text); }
    }
    /// <summary>
    /// 终端IP端口
    /// </summary>
    public int ClientIPPort;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _ClientIPAddress = new byte[33];
    /// <summary>
    /// 终端IP地址
    /// </summary>
    public string ClientIPAddress
    {
        get{ return GBKConvert.Instance.GetString(_ClientIPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientIPAddress); }
    }
}
/// <summary>
/// 用户发出带动态验证码的登录请求请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqUserLoginWithOTPField
{
    public CThostFtdcReqUserLoginWithOTPField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UserProductInfo = new byte[11];
    /// <summary>
    /// 用户端产品信息
    /// </summary>
    public string UserProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _InterfaceProductInfo = new byte[11];
    /// <summary>
    /// 接口端产品信息
    /// </summary>
    public string InterfaceProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_InterfaceProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _InterfaceProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ProtocolInfo = new byte[11];
    /// <summary>
    /// 协议信息
    /// </summary>
    public string ProtocolInfo
    {
        get{ return GBKConvert.Instance.GetString(_ProtocolInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _ProtocolInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _LoginRemark = new byte[36];
    /// <summary>
    /// 登录备注
    /// </summary>
    public string LoginRemark
    {
        get{ return GBKConvert.Instance.GetString(_LoginRemark); }
        set{ GBKConvert.Instance.GetBytes(value, _LoginRemark); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _OTPPassword = new byte[41];
    /// <summary>
    /// OTP密码
    /// </summary>
    public string OTPPassword
    {
        get{ return GBKConvert.Instance.GetString(_OTPPassword); }
        set{ GBKConvert.Instance.GetBytes(value, _OTPPassword); }
    }
    /// <summary>
    /// 终端IP端口
    /// </summary>
    public int ClientIPPort;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _ClientIPAddress = new byte[33];
    /// <summary>
    /// 终端IP地址
    /// </summary>
    public string ClientIPAddress
    {
        get{ return GBKConvert.Instance.GetString(_ClientIPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientIPAddress); }
    }
}
/// <summary>
/// api握手请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqApiHandshakeField
{
    public CThostFtdcReqApiHandshakeField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=31)]
    public readonly byte[] _CryptoKeyVersion = new byte[31];
    /// <summary>
    /// api与front通信密钥版本号
    /// </summary>
    public string CryptoKeyVersion
    {
        get{ return GBKConvert.Instance.GetString(_CryptoKeyVersion); }
        set{ GBKConvert.Instance.GetBytes(value, _CryptoKeyVersion); }
    }
}
/// <summary>
/// front发给api的握手回复
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRspApiHandshakeField
{
    public CThostFtdcRspApiHandshakeField() {}
    /// <summary>
    /// 握手回复数据长度
    /// </summary>
    public int FrontHandshakeDataLen;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=301)]
    public readonly byte[] _FrontHandshakeData = new byte[301];
    /// <summary>
    /// 握手回复数据
    /// </summary>
    public string FrontHandshakeData
    {
        get{ return GBKConvert.Instance.GetString(_FrontHandshakeData); }
        set{ GBKConvert.Instance.GetBytes(value, _FrontHandshakeData); }
    }
    /// <summary>
    /// API认证是否开启
    /// </summary>
    public int IsApiAuthEnabled;
}
/// <summary>
/// api给front的验证key的请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqVerifyApiKeyField
{
    public CThostFtdcReqVerifyApiKeyField() {}
    /// <summary>
    /// 握手回复数据长度
    /// </summary>
    public int ApiHandshakeDataLen;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=301)]
    public readonly byte[] _ApiHandshakeData = new byte[301];
    /// <summary>
    /// 握手回复数据
    /// </summary>
    public string ApiHandshakeData
    {
        get{ return GBKConvert.Instance.GetString(_ApiHandshakeData); }
        set{ GBKConvert.Instance.GetBytes(value, _ApiHandshakeData); }
    }
}
/// <summary>
/// 操作员组织架构关系
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcDepartmentUserField
{
    public CThostFtdcDepartmentUserField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcDepartmentRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
}
/// <summary>
/// 查询频率，每秒查询比数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQueryFreqField
{
    public CThostFtdcQueryFreqField() {}
    /// <summary>
    /// 查询频率
    /// </summary>
    public int QueryFreq;
}
/// <summary>
/// 禁止认证IP
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcAuthForbiddenIPField
{
    public CThostFtdcAuthForbiddenIPField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 查询禁止认证IP
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryAuthForbiddenIPField
{
    public CThostFtdcQryAuthForbiddenIPField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// IP地址
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 换汇可提冻结
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDelaySwapFrozenField
{
    public CThostFtdcSyncDelaySwapFrozenField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=15)]
    public readonly byte[] _DelaySwapSeqNo = new byte[15];
    /// <summary>
    /// 换汇流水号
    /// </summary>
    public string DelaySwapSeqNo
    {
        get{ return GBKConvert.Instance.GetString(_DelaySwapSeqNo); }
        set{ GBKConvert.Instance.GetBytes(value, _DelaySwapSeqNo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _FromCurrencyID = new byte[4];
    /// <summary>
    /// 源币种
    /// </summary>
    public string FromCurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_FromCurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _FromCurrencyID); }
    }
    /// <summary>
    /// 源剩余换汇额度(可提冻结)
    /// </summary>
    public double FromRemainSwap;
    /// <summary>
    /// 是否手工换汇
    /// </summary>
    public int IsManualSwap;
}
/// <summary>
/// 用户系统信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcUserSystemInfoField
{
    public CThostFtdcUserSystemInfoField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    /// <summary>
    /// 用户端系统内部信息长度
    /// </summary>
    public int ClientSystemInfoLen;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=273)]
    public readonly byte[] _ClientSystemInfo = new byte[273];
    /// <summary>
    /// 用户端系统内部信息
    /// </summary>
    public string ClientSystemInfo
    {
        get{ return GBKConvert.Instance.GetString(_ClientSystemInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientSystemInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _reserve1 = new byte[16];
    /// <summary>
    /// 保留的无效字段
    /// </summary>
    public string reserve1
    {
        get{ return GBKConvert.Instance.GetString(_reserve1); }
        set{ GBKConvert.Instance.GetBytes(value, _reserve1); }
    }
    /// <summary>
    /// 终端IP端口
    /// </summary>
    public int ClientIPPort;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ClientLoginTime = new byte[9];
    /// <summary>
    /// 登录成功时间
    /// </summary>
    public string ClientLoginTime
    {
        get{ return GBKConvert.Instance.GetString(_ClientLoginTime); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientLoginTime); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _ClientAppID = new byte[33];
    /// <summary>
    /// App代码
    /// </summary>
    public string ClientAppID
    {
        get{ return GBKConvert.Instance.GetString(_ClientAppID); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientAppID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _ClientPublicIP = new byte[33];
    /// <summary>
    /// 用户公网IP
    /// </summary>
    public string ClientPublicIP
    {
        get{ return GBKConvert.Instance.GetString(_ClientPublicIP); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientPublicIP); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=151)]
    public readonly byte[] _ClientLoginRemark = new byte[151];
    /// <summary>
    /// 客户登录备注2
    /// </summary>
    public string ClientLoginRemark
    {
        get{ return GBKConvert.Instance.GetString(_ClientLoginRemark); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientLoginRemark); }
    }
}
/// <summary>
/// 终端用户绑定信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcAuthUserIDField
{
    public CThostFtdcAuthUserIDField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _AppID = new byte[33];
    /// <summary>
    /// App代码
    /// </summary>
    public string AppID
    {
        get{ return GBKConvert.Instance.GetString(_AppID); }
        set{ GBKConvert.Instance.GetBytes(value, _AppID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    public TThostFtdcAuthTypeType AuthType;
}
/// <summary>
/// 用户IP绑定信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcAuthIPField
{
    public CThostFtdcAuthIPField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _AppID = new byte[33];
    /// <summary>
    /// App代码
    /// </summary>
    public string AppID
    {
        get{ return GBKConvert.Instance.GetString(_AppID); }
        set{ GBKConvert.Instance.GetBytes(value, _AppID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _IPAddress = new byte[33];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string IPAddress
    {
        get{ return GBKConvert.Instance.GetString(_IPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _IPAddress); }
    }
}
/// <summary>
/// 查询分类合约
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryClassifiedInstrumentField
{
    public CThostFtdcQryClassifiedInstrumentField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductID = new byte[81];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
    public TThostFtdcTradingTypeType TradingType;
    public TThostFtdcClassTypeType ClassType;
}
/// <summary>
/// 查询组合优惠比例
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryCombPromotionParamField
{
    public CThostFtdcQryCombPromotionParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 组合优惠比例
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcCombPromotionParamField
{
    public CThostFtdcCombPromotionParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=5)]
    public readonly byte[] _CombHedgeFlag = new byte[5];
    /// <summary>
    /// 投机套保标志
    /// </summary>
    public string CombHedgeFlag
    {
        get{ return GBKConvert.Instance.GetString(_CombHedgeFlag); }
        set{ GBKConvert.Instance.GetBytes(value, _CombHedgeFlag); }
    }
    /// <summary>
    /// 期权组合保证金比例
    /// </summary>
    public double Xparameter;
}
/// <summary>
/// 国密用户登录请求
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcReqUserLoginSCField
{
    public CThostFtdcReqUserLoginSCField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _Password = new byte[41];
    /// <summary>
    /// 密码
    /// </summary>
    public string Password
    {
        get{ return GBKConvert.Instance.GetString(_Password); }
        set{ GBKConvert.Instance.GetBytes(value, _Password); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _UserProductInfo = new byte[11];
    /// <summary>
    /// 用户端产品信息
    /// </summary>
    public string UserProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_UserProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _UserProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _InterfaceProductInfo = new byte[11];
    /// <summary>
    /// 接口端产品信息
    /// </summary>
    public string InterfaceProductInfo
    {
        get{ return GBKConvert.Instance.GetString(_InterfaceProductInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _InterfaceProductInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ProtocolInfo = new byte[11];
    /// <summary>
    /// 协议信息
    /// </summary>
    public string ProtocolInfo
    {
        get{ return GBKConvert.Instance.GetString(_ProtocolInfo); }
        set{ GBKConvert.Instance.GetBytes(value, _ProtocolInfo); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _MacAddress = new byte[21];
    /// <summary>
    /// Mac地址
    /// </summary>
    public string MacAddress
    {
        get{ return GBKConvert.Instance.GetString(_MacAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _MacAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _OneTimePassword = new byte[41];
    /// <summary>
    /// 动态密码
    /// </summary>
    public string OneTimePassword
    {
        get{ return GBKConvert.Instance.GetString(_OneTimePassword); }
        set{ GBKConvert.Instance.GetBytes(value, _OneTimePassword); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _ClientIPAddress = new byte[33];
    /// <summary>
    /// 终端IP地址
    /// </summary>
    public string ClientIPAddress
    {
        get{ return GBKConvert.Instance.GetString(_ClientIPAddress); }
        set{ GBKConvert.Instance.GetBytes(value, _ClientIPAddress); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=36)]
    public readonly byte[] _LoginRemark = new byte[36];
    /// <summary>
    /// 登录备注
    /// </summary>
    public string LoginRemark
    {
        get{ return GBKConvert.Instance.GetString(_LoginRemark); }
        set{ GBKConvert.Instance.GetBytes(value, _LoginRemark); }
    }
    /// <summary>
    /// 终端IP端口
    /// </summary>
    public int ClientIPPort;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _AuthCode = new byte[17];
    /// <summary>
    /// 认证码
    /// </summary>
    public string AuthCode
    {
        get{ return GBKConvert.Instance.GetString(_AuthCode); }
        set{ GBKConvert.Instance.GetBytes(value, _AuthCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _AppID = new byte[33];
    /// <summary>
    /// App代码
    /// </summary>
    public string AppID
    {
        get{ return GBKConvert.Instance.GetString(_AppID); }
        set{ GBKConvert.Instance.GetBytes(value, _AppID); }
    }
}
/// <summary>
/// 投资者风险结算持仓查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryRiskSettleInvstPositionField
{
    public CThostFtdcQryRiskSettleInvstPositionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// 风险结算产品查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryRiskSettleProductStatusField
{
    public CThostFtdcQryRiskSettleProductStatusField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductID = new byte[81];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
}
/// <summary>
/// 投资者风险结算持仓
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRiskSettleInvstPositionField
{
    public CThostFtdcRiskSettleInvstPositionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcPosiDirectionType PosiDirection;
    public TThostFtdcHedgeFlagType HedgeFlag;
    public TThostFtdcPositionDateType PositionDate;
    /// <summary>
    /// 上日持仓
    /// </summary>
    public int YdPosition;
    /// <summary>
    /// 今日持仓
    /// </summary>
    public int Position;
    /// <summary>
    /// 多头冻结
    /// </summary>
    public int LongFrozen;
    /// <summary>
    /// 空头冻结
    /// </summary>
    public int ShortFrozen;
    /// <summary>
    /// 开仓冻结金额
    /// </summary>
    public double LongFrozenAmount;
    /// <summary>
    /// 开仓冻结金额
    /// </summary>
    public double ShortFrozenAmount;
    /// <summary>
    /// 开仓量
    /// </summary>
    public int OpenVolume;
    /// <summary>
    /// 平仓量
    /// </summary>
    public int CloseVolume;
    /// <summary>
    /// 开仓金额
    /// </summary>
    public double OpenAmount;
    /// <summary>
    /// 平仓金额
    /// </summary>
    public double CloseAmount;
    /// <summary>
    /// 持仓成本
    /// </summary>
    public double PositionCost;
    /// <summary>
    /// 上次占用的保证金
    /// </summary>
    public double PreMargin;
    /// <summary>
    /// 占用的保证金
    /// </summary>
    public double UseMargin;
    /// <summary>
    /// 冻结的保证金
    /// </summary>
    public double FrozenMargin;
    /// <summary>
    /// 冻结的资金
    /// </summary>
    public double FrozenCash;
    /// <summary>
    /// 冻结的手续费
    /// </summary>
    public double FrozenCommission;
    /// <summary>
    /// 资金差额
    /// </summary>
    public double CashIn;
    /// <summary>
    /// 手续费
    /// </summary>
    public double Commission;
    /// <summary>
    /// 平仓盈亏
    /// </summary>
    public double CloseProfit;
    /// <summary>
    /// 持仓盈亏
    /// </summary>
    public double PositionProfit;
    /// <summary>
    /// 上次结算价
    /// </summary>
    public double PreSettlementPrice;
    /// <summary>
    /// 本次结算价
    /// </summary>
    public double SettlementPrice;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    /// <summary>
    /// 开仓成本
    /// </summary>
    public double OpenCost;
    /// <summary>
    /// 交易所保证金
    /// </summary>
    public double ExchangeMargin;
    /// <summary>
    /// 组合成交形成的持仓
    /// </summary>
    public int CombPosition;
    /// <summary>
    /// 组合多头冻结
    /// </summary>
    public int CombLongFrozen;
    /// <summary>
    /// 组合空头冻结
    /// </summary>
    public int CombShortFrozen;
    /// <summary>
    /// 逐日盯市平仓盈亏
    /// </summary>
    public double CloseProfitByDate;
    /// <summary>
    /// 逐笔对冲平仓盈亏
    /// </summary>
    public double CloseProfitByTrade;
    /// <summary>
    /// 今日持仓
    /// </summary>
    public int TodayPosition;
    /// <summary>
    /// 保证金率
    /// </summary>
    public double MarginRateByMoney;
    /// <summary>
    /// 保证金率(按手数)
    /// </summary>
    public double MarginRateByVolume;
    /// <summary>
    /// 执行冻结
    /// </summary>
    public int StrikeFrozen;
    /// <summary>
    /// 执行冻结金额
    /// </summary>
    public double StrikeFrozenAmount;
    /// <summary>
    /// 放弃执行冻结
    /// </summary>
    public int AbandonFrozen;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 执行冻结的昨仓
    /// </summary>
    public int YdStrikeFrozen;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=17)]
    public readonly byte[] _InvestUnitID = new byte[17];
    /// <summary>
    /// 投资单元代码
    /// </summary>
    public string InvestUnitID
    {
        get{ return GBKConvert.Instance.GetString(_InvestUnitID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestUnitID); }
    }
    /// <summary>
    /// 持仓成本差值
    /// </summary>
    public double PositionCostOffset;
    /// <summary>
    /// tas持仓手数
    /// </summary>
    public int TasPosition;
    /// <summary>
    /// tas持仓成本
    /// </summary>
    public double TasPositionCost;
}
/// <summary>
/// 风险品种
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRiskSettleProductStatusField
{
    public CThostFtdcRiskSettleProductStatusField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductID = new byte[81];
    /// <summary>
    /// 产品编号
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
    public TThostFtdcProductStatusType ProductStatus;
}
/// <summary>
/// 风险结算追平信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaInfoField
{
    public CThostFtdcSyncDeltaInfoField() {}
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
    public TThostFtdcSyncDeltaStatusType SyncDeltaStatus;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=257)]
    public readonly byte[] _SyncDescription = new byte[257];
    /// <summary>
    /// 追平描述
    /// </summary>
    public string SyncDescription
    {
        get{ return GBKConvert.Instance.GetString(_SyncDescription); }
        set{ GBKConvert.Instance.GetBytes(value, _SyncDescription); }
    }
    /// <summary>
    /// 是否只有资金追平
    /// </summary>
    public int IsOnlyTrdDelta;
}
/// <summary>
/// 风险结算追平产品信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaProductStatusField
{
    public CThostFtdcSyncDeltaProductStatusField() {}
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductID = new byte[81];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
    public TThostFtdcProductStatusType ProductStatus;
}
/// <summary>
/// 风险结算追平持仓明细
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaInvstPosDtlField
{
    public CThostFtdcSyncDeltaInvstPosDtlField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    public TThostFtdcDirectionType Direction;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _OpenDate = new byte[9];
    /// <summary>
    /// 开仓日期
    /// </summary>
    public string OpenDate
    {
        get{ return GBKConvert.Instance.GetString(_OpenDate); }
        set{ GBKConvert.Instance.GetBytes(value, _OpenDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TradeID = new byte[21];
    /// <summary>
    /// 成交编号
    /// </summary>
    public string TradeID
    {
        get{ return GBKConvert.Instance.GetString(_TradeID); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeID); }
    }
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    /// <summary>
    /// 开仓价
    /// </summary>
    public double OpenPrice;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    public TThostFtdcTradeTypeType TradeType;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _CombInstrumentID = new byte[81];
    /// <summary>
    /// 组合合约代码
    /// </summary>
    public string CombInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_CombInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombInstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 逐日盯市平仓盈亏
    /// </summary>
    public double CloseProfitByDate;
    /// <summary>
    /// 逐笔对冲平仓盈亏
    /// </summary>
    public double CloseProfitByTrade;
    /// <summary>
    /// 逐日盯市持仓盈亏
    /// </summary>
    public double PositionProfitByDate;
    /// <summary>
    /// 逐笔对冲持仓盈亏
    /// </summary>
    public double PositionProfitByTrade;
    /// <summary>
    /// 投资者保证金
    /// </summary>
    public double Margin;
    /// <summary>
    /// 交易所保证金
    /// </summary>
    public double ExchMargin;
    /// <summary>
    /// 保证金率
    /// </summary>
    public double MarginRateByMoney;
    /// <summary>
    /// 保证金率(按手数)
    /// </summary>
    public double MarginRateByVolume;
    /// <summary>
    /// 昨结算价
    /// </summary>
    public double LastSettlementPrice;
    /// <summary>
    /// 结算价
    /// </summary>
    public double SettlementPrice;
    /// <summary>
    /// 平仓量
    /// </summary>
    public int CloseVolume;
    /// <summary>
    /// 平仓金额
    /// </summary>
    public double CloseAmount;
    /// <summary>
    /// 先开先平剩余数量
    /// </summary>
    public int TimeFirstVolume;
    public TThostFtdcSpecPosiTypeType SpecPosiType;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平组合持仓明细
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaInvstPosCombDtlField
{
    public CThostFtdcSyncDeltaInvstPosCombDtlField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _OpenDate = new byte[9];
    /// <summary>
    /// 开仓日期
    /// </summary>
    public string OpenDate
    {
        get{ return GBKConvert.Instance.GetString(_OpenDate); }
        set{ GBKConvert.Instance.GetBytes(value, _OpenDate); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _ComTradeID = new byte[21];
    /// <summary>
    /// 组合编号
    /// </summary>
    public string ComTradeID
    {
        get{ return GBKConvert.Instance.GetString(_ComTradeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ComTradeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TradeID = new byte[21];
    /// <summary>
    /// 撮合编号
    /// </summary>
    public string TradeID
    {
        get{ return GBKConvert.Instance.GetString(_TradeID); }
        set{ GBKConvert.Instance.GetBytes(value, _TradeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    public TThostFtdcDirectionType Direction;
    /// <summary>
    /// 持仓量
    /// </summary>
    public int TotalAmt;
    /// <summary>
    /// 投资者保证金
    /// </summary>
    public double Margin;
    /// <summary>
    /// 交易所保证金
    /// </summary>
    public double ExchMargin;
    /// <summary>
    /// 保证金率
    /// </summary>
    public double MarginRateByMoney;
    /// <summary>
    /// 保证金率(按手数)
    /// </summary>
    public double MarginRateByVolume;
    /// <summary>
    /// 单腿编号
    /// </summary>
    public int LegID;
    /// <summary>
    /// 单腿乘数
    /// </summary>
    public int LegMultiple;
    /// <summary>
    /// 成交组号
    /// </summary>
    public int TradeGroupID;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平资金
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaTradingAccountField
{
    public CThostFtdcSyncDeltaTradingAccountField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    /// <summary>
    /// 上次质押金额
    /// </summary>
    public double PreMortgage;
    /// <summary>
    /// 上次信用额度
    /// </summary>
    public double PreCredit;
    /// <summary>
    /// 上次存款额
    /// </summary>
    public double PreDeposit;
    /// <summary>
    /// 上次结算准备金
    /// </summary>
    public double PreBalance;
    /// <summary>
    /// 上次占用的保证金
    /// </summary>
    public double PreMargin;
    /// <summary>
    /// 利息基数
    /// </summary>
    public double InterestBase;
    /// <summary>
    /// 利息收入
    /// </summary>
    public double Interest;
    /// <summary>
    /// 入金金额
    /// </summary>
    public double Deposit;
    /// <summary>
    /// 出金金额
    /// </summary>
    public double Withdraw;
    /// <summary>
    /// 冻结的保证金
    /// </summary>
    public double FrozenMargin;
    /// <summary>
    /// 冻结的资金
    /// </summary>
    public double FrozenCash;
    /// <summary>
    /// 冻结的手续费
    /// </summary>
    public double FrozenCommission;
    /// <summary>
    /// 当前保证金总额
    /// </summary>
    public double CurrMargin;
    /// <summary>
    /// 资金差额
    /// </summary>
    public double CashIn;
    /// <summary>
    /// 手续费
    /// </summary>
    public double Commission;
    /// <summary>
    /// 平仓盈亏
    /// </summary>
    public double CloseProfit;
    /// <summary>
    /// 持仓盈亏
    /// </summary>
    public double PositionProfit;
    /// <summary>
    /// 期货结算准备金
    /// </summary>
    public double Balance;
    /// <summary>
    /// 可用资金
    /// </summary>
    public double Available;
    /// <summary>
    /// 可取资金
    /// </summary>
    public double WithdrawQuota;
    /// <summary>
    /// 基本准备金
    /// </summary>
    public double Reserve;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    /// <summary>
    /// 结算编号
    /// </summary>
    public int SettlementID;
    /// <summary>
    /// 信用额度
    /// </summary>
    public double Credit;
    /// <summary>
    /// 质押金额
    /// </summary>
    public double Mortgage;
    /// <summary>
    /// 交易所保证金
    /// </summary>
    public double ExchangeMargin;
    /// <summary>
    /// 投资者交割保证金
    /// </summary>
    public double DeliveryMargin;
    /// <summary>
    /// 交易所交割保证金
    /// </summary>
    public double ExchangeDeliveryMargin;
    /// <summary>
    /// 保底期货结算准备金
    /// </summary>
    public double ReserveBalance;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _CurrencyID = new byte[4];
    /// <summary>
    /// 币种代码
    /// </summary>
    public string CurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_CurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _CurrencyID); }
    }
    /// <summary>
    /// 上次货币质入金额
    /// </summary>
    public double PreFundMortgageIn;
    /// <summary>
    /// 上次货币质出金额
    /// </summary>
    public double PreFundMortgageOut;
    /// <summary>
    /// 货币质入金额
    /// </summary>
    public double FundMortgageIn;
    /// <summary>
    /// 货币质出金额
    /// </summary>
    public double FundMortgageOut;
    /// <summary>
    /// 货币质押余额
    /// </summary>
    public double FundMortgageAvailable;
    /// <summary>
    /// 可质押货币金额
    /// </summary>
    public double MortgageableFund;
    /// <summary>
    /// 特殊产品占用保证金
    /// </summary>
    public double SpecProductMargin;
    /// <summary>
    /// 特殊产品冻结保证金
    /// </summary>
    public double SpecProductFrozenMargin;
    /// <summary>
    /// 特殊产品手续费
    /// </summary>
    public double SpecProductCommission;
    /// <summary>
    /// 特殊产品冻结手续费
    /// </summary>
    public double SpecProductFrozenCommission;
    /// <summary>
    /// 特殊产品持仓盈亏
    /// </summary>
    public double SpecProductPositionProfit;
    /// <summary>
    /// 特殊产品平仓盈亏
    /// </summary>
    public double SpecProductCloseProfit;
    /// <summary>
    /// 根据持仓盈亏算法计算的特殊产品持仓盈亏
    /// </summary>
    public double SpecProductPositionProfitByAlg;
    /// <summary>
    /// 特殊产品交易所保证金
    /// </summary>
    public double SpecProductExchangeMargin;
    /// <summary>
    /// 延时换汇冻结金额
    /// </summary>
    public double FrozenSwap;
    /// <summary>
    /// 剩余换汇额度
    /// </summary>
    public double RemainSwap;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 投资者风险结算总保证金
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaInitInvstMarginField
{
    public CThostFtdcSyncDeltaInitInvstMarginField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 追平前总风险保证金
    /// </summary>
    public double LastRiskTotalInvstMargin;
    /// <summary>
    /// 追平前交易所总风险保证金
    /// </summary>
    public double LastRiskTotalExchMargin;
    /// <summary>
    /// 本次追平品种总保证金
    /// </summary>
    public double ThisSyncInvstMargin;
    /// <summary>
    /// 本次追平品种交易所总保证金
    /// </summary>
    public double ThisSyncExchMargin;
    /// <summary>
    /// 本次未追平品种总保证金
    /// </summary>
    public double RemainRiskInvstMargin;
    /// <summary>
    /// 本次未追平品种交易所总保证金
    /// </summary>
    public double RemainRiskExchMargin;
    /// <summary>
    /// 追平前总特殊产品风险保证金
    /// </summary>
    public double LastRiskSpecTotalInvstMargin;
    /// <summary>
    /// 追平前总特殊产品交易所风险保证金
    /// </summary>
    public double LastRiskSpecTotalExchMargin;
    /// <summary>
    /// 本次追平品种特殊产品总保证金
    /// </summary>
    public double ThisSyncSpecInvstMargin;
    /// <summary>
    /// 本次追平品种特殊产品交易所总保证金
    /// </summary>
    public double ThisSyncSpecExchMargin;
    /// <summary>
    /// 本次未追平品种特殊产品总保证金
    /// </summary>
    public double RemainRiskSpecInvstMargin;
    /// <summary>
    /// 本次未追平品种特殊产品交易所总保证金
    /// </summary>
    public double RemainRiskSpecExchMargin;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平组合优先级
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaDceCombInstrumentField
{
    public CThostFtdcSyncDeltaDceCombInstrumentField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _CombInstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string CombInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_CombInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombInstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    /// <summary>
    /// 成交组号
    /// </summary>
    public int TradeGroupID;
    public TThostFtdcHedgeFlagType CombHedgeFlag;
    public TThostFtdcDceCombinationTypeType CombinationType;
    public TThostFtdcDirectionType Direction;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductID = new byte[81];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
    /// <summary>
    /// 期权组合保证金比例
    /// </summary>
    public double Xparameter;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平投资者期货保证金率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaInvstMarginRateField
{
    public CThostFtdcSyncDeltaInvstMarginRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 多头保证金率
    /// </summary>
    public double LongMarginRatioByMoney;
    /// <summary>
    /// 多头保证金费
    /// </summary>
    public double LongMarginRatioByVolume;
    /// <summary>
    /// 空头保证金率
    /// </summary>
    public double ShortMarginRatioByMoney;
    /// <summary>
    /// 空头保证金费
    /// </summary>
    public double ShortMarginRatioByVolume;
    /// <summary>
    /// 是否相对交易所收取
    /// </summary>
    public int IsRelative;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平交易所期货保证金率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaExchMarginRateField
{
    public CThostFtdcSyncDeltaExchMarginRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 多头保证金率
    /// </summary>
    public double LongMarginRatioByMoney;
    /// <summary>
    /// 多头保证金费
    /// </summary>
    public double LongMarginRatioByVolume;
    /// <summary>
    /// 空头保证金率
    /// </summary>
    public double ShortMarginRatioByMoney;
    /// <summary>
    /// 空头保证金费
    /// </summary>
    public double ShortMarginRatioByVolume;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平中金现货期权交易所保证金率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaOptExchMarginField
{
    public CThostFtdcSyncDeltaOptExchMarginField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    /// <summary>
    /// 投机空头保证金调整系数
    /// </summary>
    public double SShortMarginRatioByMoney;
    /// <summary>
    /// 投机空头保证金调整系数
    /// </summary>
    public double SShortMarginRatioByVolume;
    /// <summary>
    /// 保值空头保证金调整系数
    /// </summary>
    public double HShortMarginRatioByMoney;
    /// <summary>
    /// 保值空头保证金调整系数
    /// </summary>
    public double HShortMarginRatioByVolume;
    /// <summary>
    /// 套利空头保证金调整系数
    /// </summary>
    public double AShortMarginRatioByMoney;
    /// <summary>
    /// 套利空头保证金调整系数
    /// </summary>
    public double AShortMarginRatioByVolume;
    /// <summary>
    /// 做市商空头保证金调整系数
    /// </summary>
    public double MShortMarginRatioByMoney;
    /// <summary>
    /// 做市商空头保证金调整系数
    /// </summary>
    public double MShortMarginRatioByVolume;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平中金现货期权投资者保证金率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaOptInvstMarginField
{
    public CThostFtdcSyncDeltaOptInvstMarginField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 投机空头保证金调整系数
    /// </summary>
    public double SShortMarginRatioByMoney;
    /// <summary>
    /// 投机空头保证金调整系数
    /// </summary>
    public double SShortMarginRatioByVolume;
    /// <summary>
    /// 保值空头保证金调整系数
    /// </summary>
    public double HShortMarginRatioByMoney;
    /// <summary>
    /// 保值空头保证金调整系数
    /// </summary>
    public double HShortMarginRatioByVolume;
    /// <summary>
    /// 套利空头保证金调整系数
    /// </summary>
    public double AShortMarginRatioByMoney;
    /// <summary>
    /// 套利空头保证金调整系数
    /// </summary>
    public double AShortMarginRatioByVolume;
    /// <summary>
    /// 是否跟随交易所收取
    /// </summary>
    public int IsRelative;
    /// <summary>
    /// 做市商空头保证金调整系数
    /// </summary>
    public double MShortMarginRatioByMoney;
    /// <summary>
    /// 做市商空头保证金调整系数
    /// </summary>
    public double MShortMarginRatioByVolume;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平期权标的调整保证金率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaInvstMarginRateULField
{
    public CThostFtdcSyncDeltaInvstMarginRateULField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 多头保证金率
    /// </summary>
    public double LongMarginRatioByMoney;
    /// <summary>
    /// 多头保证金费
    /// </summary>
    public double LongMarginRatioByVolume;
    /// <summary>
    /// 空头保证金率
    /// </summary>
    public double ShortMarginRatioByMoney;
    /// <summary>
    /// 空头保证金费
    /// </summary>
    public double ShortMarginRatioByVolume;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平期权手续费率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaOptInvstCommRateField
{
    public CThostFtdcSyncDeltaOptInvstCommRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 开仓手续费率
    /// </summary>
    public double OpenRatioByMoney;
    /// <summary>
    /// 开仓手续费
    /// </summary>
    public double OpenRatioByVolume;
    /// <summary>
    /// 平仓手续费率
    /// </summary>
    public double CloseRatioByMoney;
    /// <summary>
    /// 平仓手续费
    /// </summary>
    public double CloseRatioByVolume;
    /// <summary>
    /// 平今手续费率
    /// </summary>
    public double CloseTodayRatioByMoney;
    /// <summary>
    /// 平今手续费
    /// </summary>
    public double CloseTodayRatioByVolume;
    /// <summary>
    /// 执行手续费率
    /// </summary>
    public double StrikeRatioByMoney;
    /// <summary>
    /// 执行手续费
    /// </summary>
    public double StrikeRatioByVolume;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平期货手续费率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaInvstCommRateField
{
    public CThostFtdcSyncDeltaInvstCommRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 开仓手续费率
    /// </summary>
    public double OpenRatioByMoney;
    /// <summary>
    /// 开仓手续费
    /// </summary>
    public double OpenRatioByVolume;
    /// <summary>
    /// 平仓手续费率
    /// </summary>
    public double CloseRatioByMoney;
    /// <summary>
    /// 平仓手续费
    /// </summary>
    public double CloseRatioByVolume;
    /// <summary>
    /// 平今手续费率
    /// </summary>
    public double CloseTodayRatioByMoney;
    /// <summary>
    /// 平今手续费
    /// </summary>
    public double CloseTodayRatioByVolume;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平交叉汇率
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaProductExchRateField
{
    public CThostFtdcSyncDeltaProductExchRateField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProductID = new byte[81];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=4)]
    public readonly byte[] _QuoteCurrencyID = new byte[4];
    /// <summary>
    /// 报价币种类型
    /// </summary>
    public string QuoteCurrencyID
    {
        get{ return GBKConvert.Instance.GetString(_QuoteCurrencyID); }
        set{ GBKConvert.Instance.GetBytes(value, _QuoteCurrencyID); }
    }
    /// <summary>
    /// 汇率
    /// </summary>
    public double ExchangeRate;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平行情
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaDepthMarketDataField
{
    public CThostFtdcSyncDeltaDepthMarketDataField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 合约在交易所的代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    /// <summary>
    /// 最新价
    /// </summary>
    public double LastPrice;
    /// <summary>
    /// 上次结算价
    /// </summary>
    public double PreSettlementPrice;
    /// <summary>
    /// 昨收盘
    /// </summary>
    public double PreClosePrice;
    /// <summary>
    /// 昨持仓量
    /// </summary>
    public double PreOpenInterest;
    /// <summary>
    /// 今开盘
    /// </summary>
    public double OpenPrice;
    /// <summary>
    /// 最高价
    /// </summary>
    public double HighestPrice;
    /// <summary>
    /// 最低价
    /// </summary>
    public double LowestPrice;
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    /// <summary>
    /// 成交金额
    /// </summary>
    public double Turnover;
    /// <summary>
    /// 持仓量
    /// </summary>
    public double OpenInterest;
    /// <summary>
    /// 今收盘
    /// </summary>
    public double ClosePrice;
    /// <summary>
    /// 本次结算价
    /// </summary>
    public double SettlementPrice;
    /// <summary>
    /// 涨停板价
    /// </summary>
    public double UpperLimitPrice;
    /// <summary>
    /// 跌停板价
    /// </summary>
    public double LowerLimitPrice;
    /// <summary>
    /// 昨虚实度
    /// </summary>
    public double PreDelta;
    /// <summary>
    /// 今虚实度
    /// </summary>
    public double CurrDelta;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _UpdateTime = new byte[9];
    /// <summary>
    /// 最后修改时间
    /// </summary>
    public string UpdateTime
    {
        get{ return GBKConvert.Instance.GetString(_UpdateTime); }
        set{ GBKConvert.Instance.GetBytes(value, _UpdateTime); }
    }
    /// <summary>
    /// 最后修改毫秒
    /// </summary>
    public int UpdateMillisec;
    /// <summary>
    /// 申买价一
    /// </summary>
    public double BidPrice1;
    /// <summary>
    /// 申买量一
    /// </summary>
    public int BidVolume1;
    /// <summary>
    /// 申卖价一
    /// </summary>
    public double AskPrice1;
    /// <summary>
    /// 申卖量一
    /// </summary>
    public int AskVolume1;
    /// <summary>
    /// 申买价二
    /// </summary>
    public double BidPrice2;
    /// <summary>
    /// 申买量二
    /// </summary>
    public int BidVolume2;
    /// <summary>
    /// 申卖价二
    /// </summary>
    public double AskPrice2;
    /// <summary>
    /// 申卖量二
    /// </summary>
    public int AskVolume2;
    /// <summary>
    /// 申买价三
    /// </summary>
    public double BidPrice3;
    /// <summary>
    /// 申买量三
    /// </summary>
    public int BidVolume3;
    /// <summary>
    /// 申卖价三
    /// </summary>
    public double AskPrice3;
    /// <summary>
    /// 申卖量三
    /// </summary>
    public int AskVolume3;
    /// <summary>
    /// 申买价四
    /// </summary>
    public double BidPrice4;
    /// <summary>
    /// 申买量四
    /// </summary>
    public int BidVolume4;
    /// <summary>
    /// 申卖价四
    /// </summary>
    public double AskPrice4;
    /// <summary>
    /// 申卖量四
    /// </summary>
    public int AskVolume4;
    /// <summary>
    /// 申买价五
    /// </summary>
    public double BidPrice5;
    /// <summary>
    /// 申买量五
    /// </summary>
    public int BidVolume5;
    /// <summary>
    /// 申卖价五
    /// </summary>
    public double AskPrice5;
    /// <summary>
    /// 申卖量五
    /// </summary>
    public int AskVolume5;
    /// <summary>
    /// 当日均价
    /// </summary>
    public double AveragePrice;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ActionDay = new byte[9];
    /// <summary>
    /// 业务日期
    /// </summary>
    public string ActionDay
    {
        get{ return GBKConvert.Instance.GetString(_ActionDay); }
        set{ GBKConvert.Instance.GetBytes(value, _ActionDay); }
    }
    /// <summary>
    /// 上带价
    /// </summary>
    public double BandingUpperPrice;
    /// <summary>
    /// 下带价
    /// </summary>
    public double BandingLowerPrice;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平现货指数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaIndexPriceField
{
    public CThostFtdcSyncDeltaIndexPriceField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    /// <summary>
    /// 指数现货收盘价
    /// </summary>
    public double ClosePrice;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平仓单折抵
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaEWarrantOffsetField
{
    public CThostFtdcSyncDeltaEWarrantOffsetField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日期
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    public TThostFtdcDirectionType Direction;
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 数量
    /// </summary>
    public int Volume;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// SPBM期货合约保证金参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSPBMFutureParameterField
{
    public CThostFtdcSPBMFutureParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
    /// <summary>
    /// 期货合约因子
    /// </summary>
    public int Cvf;
    public TThostFtdcTimeRangeType TimeRange;
    /// <summary>
    /// 品种保证金标准
    /// </summary>
    public double MarginRate;
    /// <summary>
    /// 期货合约内部对锁仓费率折扣比例
    /// </summary>
    public double LockRateX;
    /// <summary>
    /// 提高保证金标准
    /// </summary>
    public double AddOnRate;
    /// <summary>
    /// 昨结算价
    /// </summary>
    public double PreSettlementPrice;
    /// <summary>
    /// 期货合约内部对锁仓附加费率折扣比例
    /// </summary>
    public double AddOnLockRateX2;
}
/// <summary>
/// SPBM期权合约保证金参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSPBMOptionParameterField
{
    public CThostFtdcSPBMOptionParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
    /// <summary>
    /// 期权合约因子
    /// </summary>
    public int Cvf;
    /// <summary>
    /// 期权冲抵价格
    /// </summary>
    public double DownPrice;
    /// <summary>
    /// Delta值
    /// </summary>
    public double Delta;
    /// <summary>
    /// 卖方期权风险转换最低值
    /// </summary>
    public double SlimiDelta;
    /// <summary>
    /// 昨结算价
    /// </summary>
    public double PreSettlementPrice;
}
/// <summary>
/// SPBM品种内对锁仓折扣参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSPBMIntraParameterField
{
    public CThostFtdcSPBMIntraParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
    /// <summary>
    /// 品种内合约间对锁仓费率折扣比例
    /// </summary>
    public double IntraRateY;
    /// <summary>
    /// 品种内合约间对锁仓附加费率折扣比例
    /// </summary>
    public double AddOnIntraRateY2;
}
/// <summary>
/// SPBM跨品种抵扣参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSPBMInterParameterField
{
    public CThostFtdcSPBMInterParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 优先级
    /// </summary>
    public int SpreadId;
    /// <summary>
    /// 品种间对锁仓费率折扣比例
    /// </summary>
    public double InterRateZ;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg1ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第一腿构成品种
    /// </summary>
    public string Leg1ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg1ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg1ProdFamilyCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg2ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第二腿构成品种
    /// </summary>
    public string Leg2ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg2ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg2ProdFamilyCode); }
    }
}
/// <summary>
/// 同步SPBM参数结束
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncSPBMParameterEndField
{
    public CThostFtdcSyncSPBMParameterEndField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
}
/// <summary>
/// SPBM期货合约保证金参数查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySPBMFutureParameterField
{
    public CThostFtdcQrySPBMFutureParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
}
/// <summary>
/// SPBM期权合约保证金参数查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySPBMOptionParameterField
{
    public CThostFtdcQrySPBMOptionParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
}
/// <summary>
/// SPBM品种内对锁仓折扣参数查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySPBMIntraParameterField
{
    public CThostFtdcQrySPBMIntraParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
}
/// <summary>
/// SPBM跨品种抵扣参数查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySPBMInterParameterField
{
    public CThostFtdcQrySPBMInterParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg1ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第一腿构成品种
    /// </summary>
    public string Leg1ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg1ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg1ProdFamilyCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg2ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第二腿构成品种
    /// </summary>
    public string Leg2ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg2ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg2ProdFamilyCode); }
    }
}
/// <summary>
/// 组合保证金套餐
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSPBMPortfDefinitionField
{
    public CThostFtdcSPBMPortfDefinitionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 组合保证金套餐代码
    /// </summary>
    public int PortfolioDefID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
    /// <summary>
    /// 是否启用SPBM
    /// </summary>
    public int IsSPBM;
}
/// <summary>
/// 投资者套餐选择
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSPBMInvestorPortfDefField
{
    public CThostFtdcSPBMInvestorPortfDefField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 组合保证金套餐代码
    /// </summary>
    public int PortfolioDefID;
}
/// <summary>
/// 投资者新型组合保证金系数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestorPortfMarginRatioField
{
    public CThostFtdcInvestorPortfMarginRatioField() {}
    public TThostFtdcInvestorRangeType InvestorRange;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 会员对投资者收取的保证金和交易所对投资者收取的保证金的比例
    /// </summary>
    public double MarginRatio;
}
/// <summary>
/// 组合保证金套餐查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySPBMPortfDefinitionField
{
    public CThostFtdcQrySPBMPortfDefinitionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 组合保证金套餐代码
    /// </summary>
    public int PortfolioDefID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
}
/// <summary>
/// 投资者套餐选择查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySPBMInvestorPortfDefField
{
    public CThostFtdcQrySPBMInvestorPortfDefField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
}
/// <summary>
/// 投资者新型组合保证金系数查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInvestorPortfMarginRatioField
{
    public CThostFtdcQryInvestorPortfMarginRatioField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
}
/// <summary>
/// 投资者产品SPBM明细
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestorProdSPBMDetailField
{
    public CThostFtdcInvestorProdSPBMDetailField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
    /// <summary>
    /// 合约内对锁保证金
    /// </summary>
    public double IntraInstrMargin;
    /// <summary>
    /// 买归集保证金
    /// </summary>
    public double BCollectingMargin;
    /// <summary>
    /// 卖归集保证金
    /// </summary>
    public double SCollectingMargin;
    /// <summary>
    /// 品种内合约间对锁保证金
    /// </summary>
    public double IntraProdMargin;
    /// <summary>
    /// 净保证金
    /// </summary>
    public double NetMargin;
    /// <summary>
    /// 产品间对锁保证金
    /// </summary>
    public double InterProdMargin;
    /// <summary>
    /// 裸保证金
    /// </summary>
    public double SingleMargin;
    /// <summary>
    /// 附加保证金
    /// </summary>
    public double AddOnMargin;
    /// <summary>
    /// 交割月保证金
    /// </summary>
    public double DeliveryMargin;
    /// <summary>
    /// 看涨期权最低风险
    /// </summary>
    public double CallOptionMinRisk;
    /// <summary>
    /// 看跌期权最低风险
    /// </summary>
    public double PutOptionMinRisk;
    /// <summary>
    /// 卖方期权最低风险
    /// </summary>
    public double OptionMinRisk;
    /// <summary>
    /// 买方期权冲抵价值
    /// </summary>
    public double OptionValueOffset;
    /// <summary>
    /// 卖方期权权利金
    /// </summary>
    public double OptionRoyalty;
    /// <summary>
    /// 价值冲抵
    /// </summary>
    public double RealOptionValueOffset;
    /// <summary>
    /// 保证金
    /// </summary>
    public double Margin;
    /// <summary>
    /// 交易所保证金
    /// </summary>
    public double ExchMargin;
}
/// <summary>
/// 投资者产品SPBM明细查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInvestorProdSPBMDetailField
{
    public CThostFtdcQryInvestorProdSPBMDetailField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
}
/// <summary>
/// 组保交易参数设置
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcPortfTradeParamSettingField
{
    public CThostFtdcPortfTradeParamSettingField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcPortfolioType Portfolio;
    /// <summary>
    /// 撤单是否验资
    /// </summary>
    public int IsActionVerify;
    /// <summary>
    /// 平仓是否验资
    /// </summary>
    public int IsCloseVerify;
}
/// <summary>
/// 投资者交易权限设置
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestorTradingRightField
{
    public CThostFtdcInvestorTradingRightField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    public TThostFtdcInvstTradingRightType InvstTradingRight;
}
/// <summary>
/// 质押配比参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcMortgageParamField
{
    public CThostFtdcMortgageParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    /// <summary>
    /// 质押配比系数
    /// </summary>
    public double MortgageBalance;
    /// <summary>
    /// 开仓是否验证质押配比
    /// </summary>
    public int CheckMortgageRatio;
}
/// <summary>
/// 可提控制参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcWithDrawParamField
{
    public CThostFtdcWithDrawParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _AccountID = new byte[13];
    /// <summary>
    /// 投资者帐号
    /// </summary>
    public string AccountID
    {
        get{ return GBKConvert.Instance.GetString(_AccountID); }
        set{ GBKConvert.Instance.GetBytes(value, _AccountID); }
    }
    public TThostFtdcWithDrawParamIDType WithDrawParamID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _WithDrawParamValue = new byte[41];
    /// <summary>
    /// 参数代码值
    /// </summary>
    public string WithDrawParamValue
    {
        get{ return GBKConvert.Instance.GetString(_WithDrawParamValue); }
        set{ GBKConvert.Instance.GetBytes(value, _WithDrawParamValue); }
    }
}
/// <summary>
/// Thost终端用户功能权限
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcThostUserFunctionField
{
    public CThostFtdcThostUserFunctionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
    /// <summary>
    /// Thost终端功能代码
    /// </summary>
    public int ThostFunctionCode;
}
/// <summary>
/// Thost终端用户功能权限查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryThostUserFunctionField
{
    public CThostFtdcQryThostUserFunctionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=16)]
    public readonly byte[] _UserID = new byte[16];
    /// <summary>
    /// 用户代码
    /// </summary>
    public string UserID
    {
        get{ return GBKConvert.Instance.GetString(_UserID); }
        set{ GBKConvert.Instance.GetBytes(value, _UserID); }
    }
}
/// <summary>
/// SPBM附加跨品种抵扣参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSPBMAddOnInterParameterField
{
    public CThostFtdcSPBMAddOnInterParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 优先级
    /// </summary>
    public int SpreadId;
    /// <summary>
    /// 品种间对锁仓附加费率折扣比例
    /// </summary>
    public double AddOnInterRateZ2;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg1ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第一腿构成品种
    /// </summary>
    public string Leg1ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg1ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg1ProdFamilyCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg2ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第二腿构成品种
    /// </summary>
    public string Leg2ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg2ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg2ProdFamilyCode); }
    }
}
/// <summary>
/// SPBM附加跨品种抵扣参数查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySPBMAddOnInterParameterField
{
    public CThostFtdcQrySPBMAddOnInterParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg1ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第一腿构成品种
    /// </summary>
    public string Leg1ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg1ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg1ProdFamilyCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg2ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第二腿构成品种
    /// </summary>
    public string Leg2ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg2ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg2ProdFamilyCode); }
    }
}
/// <summary>
/// 投资者商品组SPMM记录查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInvestorCommoditySPMMMarginField
{
    public CThostFtdcQryInvestorCommoditySPMMMarginField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CommodityID = new byte[41];
    /// <summary>
    /// 商品组代码
    /// </summary>
    public string CommodityID
    {
        get{ return GBKConvert.Instance.GetString(_CommodityID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommodityID); }
    }
}
/// <summary>
/// 投资者商品群SPMM记录查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInvestorCommodityGroupSPMMMarginField
{
    public CThostFtdcQryInvestorCommodityGroupSPMMMarginField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CommodityGroupID = new byte[41];
    /// <summary>
    /// 商品群代码
    /// </summary>
    public string CommodityGroupID
    {
        get{ return GBKConvert.Instance.GetString(_CommodityGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommodityGroupID); }
    }
}
/// <summary>
/// SPMM合约参数查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySPMMInstParamField
{
    public CThostFtdcQrySPMMInstParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// SPMM产品参数查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQrySPMMProductParamField
{
    public CThostFtdcQrySPMMProductParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductID = new byte[41];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
}
/// <summary>
/// 投资者商品组SPMM记录
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestorCommoditySPMMMarginField
{
    public CThostFtdcInvestorCommoditySPMMMarginField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CommodityID = new byte[41];
    /// <summary>
    /// 商品组代码
    /// </summary>
    public string CommodityID
    {
        get{ return GBKConvert.Instance.GetString(_CommodityID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommodityID); }
    }
    /// <summary>
    /// 优惠仓位应收保证金
    /// </summary>
    public double MarginBeforeDiscount;
    /// <summary>
    /// 不优惠仓位应收保证金
    /// </summary>
    public double MarginNoDiscount;
    /// <summary>
    /// 多头实仓风险
    /// </summary>
    public double LongPosRisk;
    /// <summary>
    /// 多头开仓冻结风险
    /// </summary>
    public double LongOpenFrozenRisk;
    /// <summary>
    /// 多头被平冻结风险
    /// </summary>
    public double LongCloseFrozenRisk;
    /// <summary>
    /// 空头实仓风险
    /// </summary>
    public double ShortPosRisk;
    /// <summary>
    /// 空头开仓冻结风险
    /// </summary>
    public double ShortOpenFrozenRisk;
    /// <summary>
    /// 空头被平冻结风险
    /// </summary>
    public double ShortCloseFrozenRisk;
    /// <summary>
    /// SPMM品种内跨期优惠系数
    /// </summary>
    public double IntraCommodityRate;
    /// <summary>
    /// SPMM期权优惠系数
    /// </summary>
    public double OptionDiscountRate;
    /// <summary>
    /// 实仓对冲优惠金额
    /// </summary>
    public double PosDiscount;
    /// <summary>
    /// 开仓报单对冲优惠金额
    /// </summary>
    public double OpenFrozenDiscount;
    /// <summary>
    /// 品种风险净头
    /// </summary>
    public double NetRisk;
    /// <summary>
    /// 平仓冻结保证金
    /// </summary>
    public double CloseFrozenMargin;
    /// <summary>
    /// 冻结的手续费
    /// </summary>
    public double FrozenCommission;
    /// <summary>
    /// 手续费
    /// </summary>
    public double Commission;
    /// <summary>
    /// 冻结的资金
    /// </summary>
    public double FrozenCash;
    /// <summary>
    /// 资金差额
    /// </summary>
    public double CashIn;
    /// <summary>
    /// 行权冻结资金
    /// </summary>
    public double StrikeFrozenMargin;
}
/// <summary>
/// 投资者商品群SPMM记录
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestorCommodityGroupSPMMMarginField
{
    public CThostFtdcInvestorCommodityGroupSPMMMarginField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CommodityGroupID = new byte[41];
    /// <summary>
    /// 商品群代码
    /// </summary>
    public string CommodityGroupID
    {
        get{ return GBKConvert.Instance.GetString(_CommodityGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommodityGroupID); }
    }
    /// <summary>
    /// 优惠仓位应收保证金
    /// </summary>
    public double MarginBeforeDiscount;
    /// <summary>
    /// 不优惠仓位应收保证金
    /// </summary>
    public double MarginNoDiscount;
    /// <summary>
    /// 多头风险
    /// </summary>
    public double LongRisk;
    /// <summary>
    /// 空头风险
    /// </summary>
    public double ShortRisk;
    /// <summary>
    /// 商品群平仓冻结保证金
    /// </summary>
    public double CloseFrozenMargin;
    /// <summary>
    /// SPMM跨品种优惠系数
    /// </summary>
    public double InterCommodityRate;
    /// <summary>
    /// 商品群最小保证金比例
    /// </summary>
    public double MiniMarginRatio;
    /// <summary>
    /// 投资者保证金和交易所保证金的比例
    /// </summary>
    public double AdjustRatio;
    /// <summary>
    /// SPMM品种内优惠汇总
    /// </summary>
    public double IntraCommodityDiscount;
    /// <summary>
    /// SPMM跨品种优惠
    /// </summary>
    public double InterCommodityDiscount;
    /// <summary>
    /// 交易所保证金
    /// </summary>
    public double ExchMargin;
    /// <summary>
    /// 投资者保证金
    /// </summary>
    public double InvestorMargin;
    /// <summary>
    /// 冻结的手续费
    /// </summary>
    public double FrozenCommission;
    /// <summary>
    /// 手续费
    /// </summary>
    public double Commission;
    /// <summary>
    /// 冻结的资金
    /// </summary>
    public double FrozenCash;
    /// <summary>
    /// 资金差额
    /// </summary>
    public double CashIn;
    /// <summary>
    /// 行权冻结资金
    /// </summary>
    public double StrikeFrozenMargin;
}
/// <summary>
/// SPMM合约参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSPMMInstParamField
{
    public CThostFtdcSPMMInstParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    public TThostFtdcInstMarginCalIDType InstMarginCalID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CommodityID = new byte[41];
    /// <summary>
    /// 商品组代码
    /// </summary>
    public string CommodityID
    {
        get{ return GBKConvert.Instance.GetString(_CommodityID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommodityID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CommodityGroupID = new byte[41];
    /// <summary>
    /// 商品群代码
    /// </summary>
    public string CommodityGroupID
    {
        get{ return GBKConvert.Instance.GetString(_CommodityGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommodityGroupID); }
    }
}
/// <summary>
/// SPMM产品参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSPMMProductParamField
{
    public CThostFtdcSPMMProductParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductID = new byte[41];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CommodityID = new byte[41];
    /// <summary>
    /// 商品组代码
    /// </summary>
    public string CommodityID
    {
        get{ return GBKConvert.Instance.GetString(_CommodityID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommodityID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CommodityGroupID = new byte[41];
    /// <summary>
    /// 商品群代码
    /// </summary>
    public string CommodityGroupID
    {
        get{ return GBKConvert.Instance.GetString(_CommodityGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommodityGroupID); }
    }
}
/// <summary>
/// 席位与交易中心对应关系维护查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryTraderAssignField
{
    public CThostFtdcQryTraderAssignField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
}
/// <summary>
/// 席位与交易中心对应关系
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcTraderAssignField
{
    public CThostFtdcTraderAssignField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 应用单元代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _TraderID = new byte[21];
    /// <summary>
    /// 交易所交易员代码
    /// </summary>
    public string TraderID
    {
        get{ return GBKConvert.Instance.GetString(_TraderID); }
        set{ GBKConvert.Instance.GetBytes(value, _TraderID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _ParticipantID = new byte[11];
    /// <summary>
    /// 会员代码
    /// </summary>
    public string ParticipantID
    {
        get{ return GBKConvert.Instance.GetString(_ParticipantID); }
        set{ GBKConvert.Instance.GetBytes(value, _ParticipantID); }
    }
    /// <summary>
    /// 交易中心代码
    /// </summary>
    public int DRIdentityID;
}
/// <summary>
/// 投资者申报费阶梯收取设置
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestorInfoCntSettingField
{
    public CThostFtdcInvestorInfoCntSettingField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductID = new byte[41];
    /// <summary>
    /// 商品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
    /// <summary>
    /// 是否收取申报费
    /// </summary>
    public int IsCalInfoComm;
    /// <summary>
    /// 是否限制信息量
    /// </summary>
    public int IsLimitInfoMax;
    /// <summary>
    /// 信息量限制笔数
    /// </summary>
    public int InfoMaxLimit;
}
/// <summary>
/// RCAMS产品组合信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRCAMSCombProductInfoField
{
    public CThostFtdcRCAMSCombProductInfoField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductID = new byte[41];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProductID = new byte[41];
    /// <summary>
    /// 商品组代码
    /// </summary>
    public string CombProductID
    {
        get{ return GBKConvert.Instance.GetString(_CombProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProductID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductGroupID = new byte[41];
    /// <summary>
    /// 商品群代码
    /// </summary>
    public string ProductGroupID
    {
        get{ return GBKConvert.Instance.GetString(_ProductGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductGroupID); }
    }
}
/// <summary>
/// RCAMS同合约风险对冲参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRCAMSInstrParameterField
{
    public CThostFtdcRCAMSInstrParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductID = new byte[41];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
    /// <summary>
    /// 同合约风险对冲比率
    /// </summary>
    public double HedgeRate;
}
/// <summary>
/// RCAMS品种内风险对冲参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRCAMSIntraParameterField
{
    public CThostFtdcRCAMSIntraParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProductID = new byte[41];
    /// <summary>
    /// 产品组合代码
    /// </summary>
    public string CombProductID
    {
        get{ return GBKConvert.Instance.GetString(_CombProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProductID); }
    }
    /// <summary>
    /// 品种内对冲比率
    /// </summary>
    public double HedgeRate;
}
/// <summary>
/// RCAMS跨品种风险折抵参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRCAMSInterParameterField
{
    public CThostFtdcRCAMSInterParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductGroupID = new byte[41];
    /// <summary>
    /// 商品群代码
    /// </summary>
    public string ProductGroupID
    {
        get{ return GBKConvert.Instance.GetString(_ProductGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductGroupID); }
    }
    /// <summary>
    /// 优先级
    /// </summary>
    public int Priority;
    /// <summary>
    /// 折抵率
    /// </summary>
    public double CreditRate;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProduct1 = new byte[41];
    /// <summary>
    /// 产品组合代码1
    /// </summary>
    public string CombProduct1
    {
        get{ return GBKConvert.Instance.GetString(_CombProduct1); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProduct1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProduct2 = new byte[41];
    /// <summary>
    /// 产品组合代码2
    /// </summary>
    public string CombProduct2
    {
        get{ return GBKConvert.Instance.GetString(_CombProduct2); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProduct2); }
    }
}
/// <summary>
/// RCAMS空头期权风险调整参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRCAMSShortOptAdjustParamField
{
    public CThostFtdcRCAMSShortOptAdjustParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProductID = new byte[41];
    /// <summary>
    /// 产品组合代码
    /// </summary>
    public string CombProductID
    {
        get{ return GBKConvert.Instance.GetString(_CombProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProductID); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 空头期权风险调整标准
    /// </summary>
    public double AdjustValue;
}
/// <summary>
/// RCAMS策略组合持仓
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRCAMSInvestorCombPositionField
{
    public CThostFtdcRCAMSInvestorCombPositionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    public TThostFtdcPosiDirectionType PosiDirection;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _CombInstrumentID = new byte[81];
    /// <summary>
    /// 组合合约代码
    /// </summary>
    public string CombInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_CombInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombInstrumentID); }
    }
    /// <summary>
    /// 单腿编号
    /// </summary>
    public int LegID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 交易所组合合约代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    /// <summary>
    /// 持仓量
    /// </summary>
    public int TotalAmt;
    /// <summary>
    /// 交易所保证金
    /// </summary>
    public double ExchMargin;
    /// <summary>
    /// 投资者保证金
    /// </summary>
    public double Margin;
}
/// <summary>
/// 投资者品种RCAMS保证金
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestorProdRCAMSMarginField
{
    public CThostFtdcInvestorProdRCAMSMarginField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProductID = new byte[41];
    /// <summary>
    /// 产品组合代码
    /// </summary>
    public string CombProductID
    {
        get{ return GBKConvert.Instance.GetString(_CombProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProductID); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductGroupID = new byte[41];
    /// <summary>
    /// 商品群代码
    /// </summary>
    public string ProductGroupID
    {
        get{ return GBKConvert.Instance.GetString(_ProductGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductGroupID); }
    }
    /// <summary>
    /// 品种组合前风险
    /// </summary>
    public double RiskBeforeDiscount;
    /// <summary>
    /// 同合约对冲风险
    /// </summary>
    public double IntraInstrRisk;
    /// <summary>
    /// 品种买持仓风险
    /// </summary>
    public double BPosRisk;
    /// <summary>
    /// 品种卖持仓风险
    /// </summary>
    public double SPosRisk;
    /// <summary>
    /// 品种内对冲风险
    /// </summary>
    public double IntraProdRisk;
    /// <summary>
    /// 品种净持仓风险
    /// </summary>
    public double NetRisk;
    /// <summary>
    /// 品种间对冲风险
    /// </summary>
    public double InterProdRisk;
    /// <summary>
    /// 空头期权风险调整
    /// </summary>
    public double ShortOptRiskAdj;
    /// <summary>
    /// 空头期权权利金
    /// </summary>
    public double OptionRoyalty;
    /// <summary>
    /// 大边组合平仓冻结保证金
    /// </summary>
    public double MMSACloseFrozenMargin;
    /// <summary>
    /// 平策略组合冻结保证金
    /// </summary>
    public double CloseCombFrozenMargin;
    /// <summary>
    /// 平仓冻结保证金
    /// </summary>
    public double CloseFrozenMargin;
    /// <summary>
    /// 大边组合开仓冻结保证金
    /// </summary>
    public double MMSAOpenFrozenMargin;
    /// <summary>
    /// 交割月期货开仓冻结保证金
    /// </summary>
    public double DeliveryOpenFrozenMargin;
    /// <summary>
    /// 开仓冻结保证金
    /// </summary>
    public double OpenFrozenMargin;
    /// <summary>
    /// 投资者冻结保证金
    /// </summary>
    public double UseFrozenMargin;
    /// <summary>
    /// 大边组合交易所持仓保证金
    /// </summary>
    public double MMSAExchMargin;
    /// <summary>
    /// 交割月期货交易所持仓保证金
    /// </summary>
    public double DeliveryExchMargin;
    /// <summary>
    /// 策略组合交易所保证金
    /// </summary>
    public double CombExchMargin;
    /// <summary>
    /// 交易所持仓保证金
    /// </summary>
    public double ExchMargin;
    /// <summary>
    /// 投资者持仓保证金
    /// </summary>
    public double UseMargin;
}
/// <summary>
/// RCAMS产品组合信息查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryRCAMSCombProductInfoField
{
    public CThostFtdcQryRCAMSCombProductInfoField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductID = new byte[41];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProductID = new byte[41];
    /// <summary>
    /// 商品组代码
    /// </summary>
    public string CombProductID
    {
        get{ return GBKConvert.Instance.GetString(_CombProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProductID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductGroupID = new byte[41];
    /// <summary>
    /// 商品群代码
    /// </summary>
    public string ProductGroupID
    {
        get{ return GBKConvert.Instance.GetString(_ProductGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductGroupID); }
    }
}
/// <summary>
/// RCAMS同合约风险对冲参数查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryRCAMSInstrParameterField
{
    public CThostFtdcQryRCAMSInstrParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductID = new byte[41];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
}
/// <summary>
/// RCAMS品种内风险对冲参数查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryRCAMSIntraParameterField
{
    public CThostFtdcQryRCAMSIntraParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProductID = new byte[41];
    /// <summary>
    /// 产品组合代码
    /// </summary>
    public string CombProductID
    {
        get{ return GBKConvert.Instance.GetString(_CombProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProductID); }
    }
}
/// <summary>
/// RCAMS跨品种风险折抵参数查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryRCAMSInterParameterField
{
    public CThostFtdcQryRCAMSInterParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductGroupID = new byte[41];
    /// <summary>
    /// 商品群代码
    /// </summary>
    public string ProductGroupID
    {
        get{ return GBKConvert.Instance.GetString(_ProductGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductGroupID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProduct1 = new byte[41];
    /// <summary>
    /// 产品组合代码1
    /// </summary>
    public string CombProduct1
    {
        get{ return GBKConvert.Instance.GetString(_CombProduct1); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProduct1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProduct2 = new byte[41];
    /// <summary>
    /// 产品组合代码2
    /// </summary>
    public string CombProduct2
    {
        get{ return GBKConvert.Instance.GetString(_CombProduct2); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProduct2); }
    }
}
/// <summary>
/// RCAMS空头期权风险调整参数查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryRCAMSShortOptAdjustParamField
{
    public CThostFtdcQryRCAMSShortOptAdjustParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProductID = new byte[41];
    /// <summary>
    /// 产品组合代码
    /// </summary>
    public string CombProductID
    {
        get{ return GBKConvert.Instance.GetString(_CombProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProductID); }
    }
}
/// <summary>
/// RCAMS策略组合持仓查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryRCAMSInvestorCombPositionField
{
    public CThostFtdcQryRCAMSInvestorCombPositionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _CombInstrumentID = new byte[81];
    /// <summary>
    /// 组合合约代码
    /// </summary>
    public string CombInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_CombInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombInstrumentID); }
    }
}
/// <summary>
/// 投资者品种RCAMS保证金查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInvestorProdRCAMSMarginField
{
    public CThostFtdcQryInvestorProdRCAMSMarginField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProductID = new byte[41];
    /// <summary>
    /// 产品组合代码
    /// </summary>
    public string CombProductID
    {
        get{ return GBKConvert.Instance.GetString(_CombProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProductID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductGroupID = new byte[41];
    /// <summary>
    /// 商品群代码
    /// </summary>
    public string ProductGroupID
    {
        get{ return GBKConvert.Instance.GetString(_ProductGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductGroupID); }
    }
}
/// <summary>
/// RULE合约保证金参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRULEInstrParameterField
{
    public CThostFtdcRULEInstrParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    public TThostFtdcInstrumentClassType InstrumentClass;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StdInstrumentID = new byte[81];
    /// <summary>
    /// 标准合约
    /// </summary>
    public string StdInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_StdInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _StdInstrumentID); }
    }
    /// <summary>
    /// 投机买折算系数
    /// </summary>
    public double BSpecRatio;
    /// <summary>
    /// 投机卖折算系数
    /// </summary>
    public double SSpecRatio;
    /// <summary>
    /// 套保买折算系数
    /// </summary>
    public double BHedgeRatio;
    /// <summary>
    /// 套保卖折算系数
    /// </summary>
    public double SHedgeRatio;
    /// <summary>
    /// 买附加风险保证金
    /// </summary>
    public double BAddOnMargin;
    /// <summary>
    /// 卖附加风险保证金
    /// </summary>
    public double SAddOnMargin;
    /// <summary>
    /// 商品群号
    /// </summary>
    public int CommodityGroupID;
}
/// <summary>
/// RULE品种内对锁仓折扣参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRULEIntraParameterField
{
    public CThostFtdcRULEIntraParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StdInstrumentID = new byte[81];
    /// <summary>
    /// 标准合约
    /// </summary>
    public string StdInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_StdInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _StdInstrumentID); }
    }
    /// <summary>
    /// 标准合约保证金
    /// </summary>
    public double StdInstrMargin;
    /// <summary>
    /// 一般月份合约组合保证金系数
    /// </summary>
    public double UsualIntraRate;
    /// <summary>
    /// 临近交割合约组合保证金系数
    /// </summary>
    public double DeliveryIntraRate;
}
/// <summary>
/// RULE跨品种抵扣参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcRULEInterParameterField
{
    public CThostFtdcRULEInterParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 优先级
    /// </summary>
    public int SpreadId;
    /// <summary>
    /// 品种间对锁仓费率折扣比例
    /// </summary>
    public double InterRate;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg1ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第一腿构成品种
    /// </summary>
    public string Leg1ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg1ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg1ProdFamilyCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg2ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第二腿构成品种
    /// </summary>
    public string Leg2ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg2ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg2ProdFamilyCode); }
    }
    /// <summary>
    /// 腿1比例系数
    /// </summary>
    public int Leg1PropFactor;
    /// <summary>
    /// 腿2比例系数
    /// </summary>
    public int Leg2PropFactor;
    /// <summary>
    /// 商品群号
    /// </summary>
    public int CommodityGroupID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _CommodityGroupName = new byte[21];
    /// <summary>
    /// 商品群名称
    /// </summary>
    public string CommodityGroupName
    {
        get{ return GBKConvert.Instance.GetString(_CommodityGroupName); }
        set{ GBKConvert.Instance.GetBytes(value, _CommodityGroupName); }
    }
}
/// <summary>
/// RULE合约保证金参数查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryRULEInstrParameterField
{
    public CThostFtdcQryRULEInstrParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
}
/// <summary>
/// RULE品种内对锁仓折扣参数查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryRULEIntraParameterField
{
    public CThostFtdcQryRULEIntraParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
}
/// <summary>
/// RULE跨品种抵扣参数查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryRULEInterParameterField
{
    public CThostFtdcQryRULEInterParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg1ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第一腿构成品种
    /// </summary>
    public string Leg1ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg1ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg1ProdFamilyCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg2ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第二腿构成品种
    /// </summary>
    public string Leg2ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg2ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg2ProdFamilyCode); }
    }
    /// <summary>
    /// 商品群号
    /// </summary>
    public int CommodityGroupID;
}
/// <summary>
/// 投资者产品RULE保证金
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcInvestorProdRULEMarginField
{
    public CThostFtdcInvestorProdRULEMarginField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
    public TThostFtdcInstrumentClassType InstrumentClass;
    /// <summary>
    /// 商品群号
    /// </summary>
    public int CommodityGroupID;
    /// <summary>
    /// 买标准持仓
    /// </summary>
    public double BStdPosition;
    /// <summary>
    /// 卖标准持仓
    /// </summary>
    public double SStdPosition;
    /// <summary>
    /// 买标准开仓冻结
    /// </summary>
    public double BStdOpenFrozen;
    /// <summary>
    /// 卖标准开仓冻结
    /// </summary>
    public double SStdOpenFrozen;
    /// <summary>
    /// 买标准平仓冻结
    /// </summary>
    public double BStdCloseFrozen;
    /// <summary>
    /// 卖标准平仓冻结
    /// </summary>
    public double SStdCloseFrozen;
    /// <summary>
    /// 品种内对冲标准持仓
    /// </summary>
    public double IntraProdStdPosition;
    /// <summary>
    /// 品种内单腿标准持仓
    /// </summary>
    public double NetStdPosition;
    /// <summary>
    /// 品种间对冲标准持仓
    /// </summary>
    public double InterProdStdPosition;
    /// <summary>
    /// 单腿标准持仓
    /// </summary>
    public double SingleStdPosition;
    /// <summary>
    /// 品种内对锁保证金
    /// </summary>
    public double IntraProdMargin;
    /// <summary>
    /// 品种间对锁保证金
    /// </summary>
    public double InterProdMargin;
    /// <summary>
    /// 跨品种单腿保证金
    /// </summary>
    public double SingleMargin;
    /// <summary>
    /// 非组合合约保证金
    /// </summary>
    public double NonCombMargin;
    /// <summary>
    /// 附加保证金
    /// </summary>
    public double AddOnMargin;
    /// <summary>
    /// 交易所保证金
    /// </summary>
    public double ExchMargin;
    /// <summary>
    /// 附加冻结保证金
    /// </summary>
    public double AddOnFrozenMargin;
    /// <summary>
    /// 开仓冻结保证金
    /// </summary>
    public double OpenFrozenMargin;
    /// <summary>
    /// 平仓冻结保证金
    /// </summary>
    public double CloseFrozenMargin;
    /// <summary>
    /// 品种保证金
    /// </summary>
    public double Margin;
    /// <summary>
    /// 冻结保证金
    /// </summary>
    public double FrozenMargin;
}
/// <summary>
/// 投资者产品RULE保证金查询
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcQryInvestorProdRULEMarginField
{
    public CThostFtdcQryInvestorProdRULEMarginField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
    /// <summary>
    /// 商品群号
    /// </summary>
    public int CommodityGroupID;
}
/// <summary>
/// 风险结算追平SPBM组合保证金套餐
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaSPBMPortfDefinitionField
{
    public CThostFtdcSyncDeltaSPBMPortfDefinitionField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 组合保证金套餐代码
    /// </summary>
    public int PortfolioDefID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
    /// <summary>
    /// 是否启用SPBM
    /// </summary>
    public int IsSPBM;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平投资者SPBM套餐选择
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaSPBMInvstPortfDefField
{
    public CThostFtdcSyncDeltaSPBMInvstPortfDefField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    /// <summary>
    /// 组合保证金套餐代码
    /// </summary>
    public int PortfolioDefID;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平SPBM期货合约保证金参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaSPBMFutureParameterField
{
    public CThostFtdcSyncDeltaSPBMFutureParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
    /// <summary>
    /// 期货合约因子
    /// </summary>
    public int Cvf;
    public TThostFtdcTimeRangeType TimeRange;
    /// <summary>
    /// 品种保证金标准
    /// </summary>
    public double MarginRate;
    /// <summary>
    /// 期货合约内部对锁仓费率折扣比例
    /// </summary>
    public double LockRateX;
    /// <summary>
    /// 提高保证金标准
    /// </summary>
    public double AddOnRate;
    /// <summary>
    /// 昨结算价
    /// </summary>
    public double PreSettlementPrice;
    /// <summary>
    /// 期货合约内部对锁仓附加费率折扣比例
    /// </summary>
    public double AddOnLockRateX2;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平SPBM期权合约保证金参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaSPBMOptionParameterField
{
    public CThostFtdcSyncDeltaSPBMOptionParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
    /// <summary>
    /// 期权合约因子
    /// </summary>
    public int Cvf;
    /// <summary>
    /// 期权冲抵价格
    /// </summary>
    public double DownPrice;
    /// <summary>
    /// Delta值
    /// </summary>
    public double Delta;
    /// <summary>
    /// 卖方期权风险转换最低值
    /// </summary>
    public double SlimiDelta;
    /// <summary>
    /// 昨结算价
    /// </summary>
    public double PreSettlementPrice;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平SPBM品种内对锁仓折扣参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaSPBMIntraParameterField
{
    public CThostFtdcSyncDeltaSPBMIntraParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
    /// <summary>
    /// 品种内合约间对锁仓费率折扣比例
    /// </summary>
    public double IntraRateY;
    /// <summary>
    /// 品种内合约间对锁仓附加费率折扣比例
    /// </summary>
    public double AddOnIntraRateY2;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平SPBM跨品种抵扣参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaSPBMInterParameterField
{
    public CThostFtdcSyncDeltaSPBMInterParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 优先级
    /// </summary>
    public int SpreadId;
    /// <summary>
    /// 品种间对锁仓费率折扣比例
    /// </summary>
    public double InterRateZ;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg1ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第一腿构成品种
    /// </summary>
    public string Leg1ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg1ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg1ProdFamilyCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg2ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第二腿构成品种
    /// </summary>
    public string Leg2ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg2ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg2ProdFamilyCode); }
    }
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平SPBM附加跨品种抵扣参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaSPBMAddOnInterParamField
{
    public CThostFtdcSyncDeltaSPBMAddOnInterParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 优先级
    /// </summary>
    public int SpreadId;
    /// <summary>
    /// 品种间对锁仓附加费率折扣比例
    /// </summary>
    public double AddOnInterRateZ2;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg1ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第一腿构成品种
    /// </summary>
    public string Leg1ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg1ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg1ProdFamilyCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg2ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第二腿构成品种
    /// </summary>
    public string Leg2ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg2ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg2ProdFamilyCode); }
    }
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平SPMM合约参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaSPMMInstParamField
{
    public CThostFtdcSyncDeltaSPMMInstParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    public TThostFtdcInstMarginCalIDType InstMarginCalID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CommodityID = new byte[41];
    /// <summary>
    /// 商品组代码
    /// </summary>
    public string CommodityID
    {
        get{ return GBKConvert.Instance.GetString(_CommodityID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommodityID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CommodityGroupID = new byte[41];
    /// <summary>
    /// 商品群代码
    /// </summary>
    public string CommodityGroupID
    {
        get{ return GBKConvert.Instance.GetString(_CommodityGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommodityGroupID); }
    }
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平SPMM产品相关参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaSPMMProductParamField
{
    public CThostFtdcSyncDeltaSPMMProductParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductID = new byte[41];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CommodityID = new byte[41];
    /// <summary>
    /// 商品组代码
    /// </summary>
    public string CommodityID
    {
        get{ return GBKConvert.Instance.GetString(_CommodityID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommodityID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CommodityGroupID = new byte[41];
    /// <summary>
    /// 商品群代码
    /// </summary>
    public string CommodityGroupID
    {
        get{ return GBKConvert.Instance.GetString(_CommodityGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommodityGroupID); }
    }
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平投资者SPMM模板选择
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaInvestorSPMMModelField
{
    public CThostFtdcSyncDeltaInvestorSPMMModelField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _SPMMModelID = new byte[33];
    /// <summary>
    /// SPMM模板ID
    /// </summary>
    public string SPMMModelID
    {
        get{ return GBKConvert.Instance.GetString(_SPMMModelID); }
        set{ GBKConvert.Instance.GetBytes(value, _SPMMModelID); }
    }
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平SPMM模板参数设置
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaSPMMModelParamField
{
    public CThostFtdcSyncDeltaSPMMModelParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=33)]
    public readonly byte[] _SPMMModelID = new byte[33];
    /// <summary>
    /// SPMM模板ID
    /// </summary>
    public string SPMMModelID
    {
        get{ return GBKConvert.Instance.GetString(_SPMMModelID); }
        set{ GBKConvert.Instance.GetBytes(value, _SPMMModelID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CommodityGroupID = new byte[41];
    /// <summary>
    /// 商品群代码
    /// </summary>
    public string CommodityGroupID
    {
        get{ return GBKConvert.Instance.GetString(_CommodityGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _CommodityGroupID); }
    }
    /// <summary>
    /// SPMM品种内跨期优惠系数
    /// </summary>
    public double IntraCommodityRate;
    /// <summary>
    /// SPMM品种间优惠系数
    /// </summary>
    public double InterCommodityRate;
    /// <summary>
    /// SPMM期权优惠系数
    /// </summary>
    public double OptionDiscountRate;
    /// <summary>
    /// 商品群最小保证金比例
    /// </summary>
    public double MiniMarginRatio;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平RCAMS产品组合信息
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaRCAMSCombProdInfoField
{
    public CThostFtdcSyncDeltaRCAMSCombProdInfoField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductID = new byte[41];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProductID = new byte[41];
    /// <summary>
    /// 商品组代码
    /// </summary>
    public string CombProductID
    {
        get{ return GBKConvert.Instance.GetString(_CombProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProductID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductGroupID = new byte[41];
    /// <summary>
    /// 商品群代码
    /// </summary>
    public string ProductGroupID
    {
        get{ return GBKConvert.Instance.GetString(_ProductGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductGroupID); }
    }
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平RCAMS同合约风险对冲参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaRCAMSInstrParameterField
{
    public CThostFtdcSyncDeltaRCAMSInstrParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductID = new byte[41];
    /// <summary>
    /// 产品代码
    /// </summary>
    public string ProductID
    {
        get{ return GBKConvert.Instance.GetString(_ProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductID); }
    }
    /// <summary>
    /// 同合约风险对冲比率
    /// </summary>
    public double HedgeRate;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平RCAMS品种内风险对冲参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaRCAMSIntraParameterField
{
    public CThostFtdcSyncDeltaRCAMSIntraParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProductID = new byte[41];
    /// <summary>
    /// 产品组合代码
    /// </summary>
    public string CombProductID
    {
        get{ return GBKConvert.Instance.GetString(_CombProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProductID); }
    }
    /// <summary>
    /// 品种内对冲比率
    /// </summary>
    public double HedgeRate;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平RCAMS跨品种风险折抵参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaRCAMSInterParameterField
{
    public CThostFtdcSyncDeltaRCAMSInterParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProductGroupID = new byte[41];
    /// <summary>
    /// 商品群代码
    /// </summary>
    public string ProductGroupID
    {
        get{ return GBKConvert.Instance.GetString(_ProductGroupID); }
        set{ GBKConvert.Instance.GetBytes(value, _ProductGroupID); }
    }
    /// <summary>
    /// 优先级
    /// </summary>
    public int Priority;
    /// <summary>
    /// 折抵率
    /// </summary>
    public double CreditRate;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProduct1 = new byte[41];
    /// <summary>
    /// 产品组合代码1
    /// </summary>
    public string CombProduct1
    {
        get{ return GBKConvert.Instance.GetString(_CombProduct1); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProduct1); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProduct2 = new byte[41];
    /// <summary>
    /// 产品组合代码2
    /// </summary>
    public string CombProduct2
    {
        get{ return GBKConvert.Instance.GetString(_CombProduct2); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProduct2); }
    }
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平RCAMS空头期权风险调整参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaRCAMSSOptAdjParamField
{
    public CThostFtdcSyncDeltaRCAMSSOptAdjParamField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _CombProductID = new byte[41];
    /// <summary>
    /// 产品组合代码
    /// </summary>
    public string CombProductID
    {
        get{ return GBKConvert.Instance.GetString(_CombProductID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombProductID); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 空头期权风险调整标准
    /// </summary>
    public double AdjustValue;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平RCAMS策略组合规则明细
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaRCAMSCombRuleDtlField
{
    public CThostFtdcSyncDeltaRCAMSCombRuleDtlField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=41)]
    public readonly byte[] _ProdGroup = new byte[41];
    /// <summary>
    /// 策略产品
    /// </summary>
    public string ProdGroup
    {
        get{ return GBKConvert.Instance.GetString(_ProdGroup); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdGroup); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=51)]
    public readonly byte[] _RuleId = new byte[51];
    /// <summary>
    /// 策略id
    /// </summary>
    public string RuleId
    {
        get{ return GBKConvert.Instance.GetString(_RuleId); }
        set{ GBKConvert.Instance.GetBytes(value, _RuleId); }
    }
    /// <summary>
    /// 优先级
    /// </summary>
    public int Priority;
    public TThostFtdcHedgeFlagType HedgeFlag;
    /// <summary>
    /// 组合保证金标准
    /// </summary>
    public double CombMargin;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 交易所组合合约代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    /// <summary>
    /// 单腿编号
    /// </summary>
    public int LegID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _LegInstrumentID = new byte[81];
    /// <summary>
    /// 单腿合约代码
    /// </summary>
    public string LegInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_LegInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _LegInstrumentID); }
    }
    public TThostFtdcDirectionType Direction;
    /// <summary>
    /// 单腿乘数
    /// </summary>
    public int LegMultiple;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平RCAMS策略组合持仓
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaRCAMSInvstCombPosField
{
    public CThostFtdcSyncDeltaRCAMSInvstCombPosField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=11)]
    public readonly byte[] _BrokerID = new byte[11];
    /// <summary>
    /// 经纪公司代码
    /// </summary>
    public string BrokerID
    {
        get{ return GBKConvert.Instance.GetString(_BrokerID); }
        set{ GBKConvert.Instance.GetBytes(value, _BrokerID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=13)]
    public readonly byte[] _InvestorID = new byte[13];
    /// <summary>
    /// 投资者代码
    /// </summary>
    public string InvestorID
    {
        get{ return GBKConvert.Instance.GetString(_InvestorID); }
        set{ GBKConvert.Instance.GetBytes(value, _InvestorID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    public TThostFtdcHedgeFlagType HedgeFlag;
    public TThostFtdcPosiDirectionType PosiDirection;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _CombInstrumentID = new byte[81];
    /// <summary>
    /// 组合合约代码
    /// </summary>
    public string CombInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_CombInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _CombInstrumentID); }
    }
    /// <summary>
    /// 单腿编号
    /// </summary>
    public int LegID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ExchangeInstID = new byte[81];
    /// <summary>
    /// 交易所组合合约代码
    /// </summary>
    public string ExchangeInstID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeInstID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeInstID); }
    }
    /// <summary>
    /// 持仓量
    /// </summary>
    public int TotalAmt;
    /// <summary>
    /// 交易所保证金
    /// </summary>
    public double ExchMargin;
    /// <summary>
    /// 投资者保证金
    /// </summary>
    public double Margin;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平RULE合约保证金参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaRULEInstrParameterField
{
    public CThostFtdcSyncDeltaRULEInstrParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _InstrumentID = new byte[81];
    /// <summary>
    /// 合约代码
    /// </summary>
    public string InstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_InstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _InstrumentID); }
    }
    public TThostFtdcInstrumentClassType InstrumentClass;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StdInstrumentID = new byte[81];
    /// <summary>
    /// 标准合约
    /// </summary>
    public string StdInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_StdInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _StdInstrumentID); }
    }
    /// <summary>
    /// 投机买折算系数
    /// </summary>
    public double BSpecRatio;
    /// <summary>
    /// 投机卖折算系数
    /// </summary>
    public double SSpecRatio;
    /// <summary>
    /// 套保买折算系数
    /// </summary>
    public double BHedgeRatio;
    /// <summary>
    /// 套保卖折算系数
    /// </summary>
    public double SHedgeRatio;
    /// <summary>
    /// 买附加风险保证金
    /// </summary>
    public double BAddOnMargin;
    /// <summary>
    /// 卖附加风险保证金
    /// </summary>
    public double SAddOnMargin;
    /// <summary>
    /// 商品群号
    /// </summary>
    public int CommodityGroupID;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平RULE品种内对锁仓折扣参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaRULEIntraParameterField
{
    public CThostFtdcSyncDeltaRULEIntraParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _ProdFamilyCode = new byte[81];
    /// <summary>
    /// 品种代码
    /// </summary>
    public string ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _ProdFamilyCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _StdInstrumentID = new byte[81];
    /// <summary>
    /// 标准合约
    /// </summary>
    public string StdInstrumentID
    {
        get{ return GBKConvert.Instance.GetString(_StdInstrumentID); }
        set{ GBKConvert.Instance.GetBytes(value, _StdInstrumentID); }
    }
    /// <summary>
    /// 标准合约保证金
    /// </summary>
    public double StdInstrMargin;
    /// <summary>
    /// 一般月份合约组合保证金系数
    /// </summary>
    public double UsualIntraRate;
    /// <summary>
    /// 临近交割合约组合保证金系数
    /// </summary>
    public double DeliveryIntraRate;
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
/// <summary>
/// 风险结算追平RULE跨品种抵扣参数
/// </summary>
[StructLayout(LayoutKind.Sequential, CharSet = CharSet.Ansi)]
public struct CThostFtdcSyncDeltaRULEInterParameterField
{
    public CThostFtdcSyncDeltaRULEInterParameterField() {}
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _TradingDay = new byte[9];
    /// <summary>
    /// 交易日
    /// </summary>
    public string TradingDay
    {
        get{ return GBKConvert.Instance.GetString(_TradingDay); }
        set{ GBKConvert.Instance.GetBytes(value, _TradingDay); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=9)]
    public readonly byte[] _ExchangeID = new byte[9];
    /// <summary>
    /// 交易所代码
    /// </summary>
    public string ExchangeID
    {
        get{ return GBKConvert.Instance.GetString(_ExchangeID); }
        set{ GBKConvert.Instance.GetBytes(value, _ExchangeID); }
    }
    /// <summary>
    /// 优先级
    /// </summary>
    public int SpreadId;
    /// <summary>
    /// 品种间对锁仓费率折扣比例
    /// </summary>
    public double InterRate;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg1ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第一腿构成品种
    /// </summary>
    public string Leg1ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg1ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg1ProdFamilyCode); }
    }
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=81)]
    public readonly byte[] _Leg2ProdFamilyCode = new byte[81];
    /// <summary>
    /// 第二腿构成品种
    /// </summary>
    public string Leg2ProdFamilyCode
    {
        get{ return GBKConvert.Instance.GetString(_Leg2ProdFamilyCode); }
        set{ GBKConvert.Instance.GetBytes(value, _Leg2ProdFamilyCode); }
    }
    /// <summary>
    /// 腿1比例系数
    /// </summary>
    public int Leg1PropFactor;
    /// <summary>
    /// 腿2比例系数
    /// </summary>
    public int Leg2PropFactor;
    /// <summary>
    /// 商品群号
    /// </summary>
    public int CommodityGroupID;
    [MarshalAs(UnmanagedType.ByValArray, SizeConst=21)]
    public readonly byte[] _CommodityGroupName = new byte[21];
    /// <summary>
    /// 商品群名称
    /// </summary>
    public string CommodityGroupName
    {
        get{ return GBKConvert.Instance.GetString(_CommodityGroupName); }
        set{ GBKConvert.Instance.GetBytes(value, _CommodityGroupName); }
    }
    public TThostFtdcActionDirectionType ActionDirection;
    /// <summary>
    /// 追平序号
    /// </summary>
    public int SyncDeltaSequenceNo;
}
